'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsFCCL"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsFCCL
    Inherits Global.System.Data.DataSet
    
    Private tableEM_Employee As EM_EmployeeDataTable
    
    Private tableEM_Employee_Audit As EM_Employee_AuditDataTable
    
    Private tableHR_PRMBank As HR_PRMBankDataTable
    
    Private tableHR_PRMBranch As HR_PRMBranchDataTable
    
    Private tableHR_PRMBusinessUnit As HR_PRMBusinessUnitDataTable
    
    Private tableHR_PRMCity As HR_PRMCityDataTable
    
    Private tableHR_PRMDEGREE As HR_PRMDEGREEDataTable
    
    Private tableHR_PRMDepartments As HR_PRMDepartmentsDataTable
    
    Private tableHR_PRMGrades As HR_PRMGradesDataTable
    
    Private tableHR_PRMGradeScale As HR_PRMGradeScaleDataTable
    
    Private tableHR_PRMParameters As HR_PRMParametersDataTable
    
    Private tableHR_PRMParameterType As HR_PRMParameterTypeDataTable
    
    Private tableHR_PRMRelations As HR_PRMRelationsDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("EM_Employee")) Is Nothing) Then
                MyBase.Tables.Add(New EM_EmployeeDataTable(ds.Tables("EM_Employee")))
            End If
            If (Not (ds.Tables("EM_Employee_Audit")) Is Nothing) Then
                MyBase.Tables.Add(New EM_Employee_AuditDataTable(ds.Tables("EM_Employee_Audit")))
            End If
            If (Not (ds.Tables("HR_PRMBank")) Is Nothing) Then
                MyBase.Tables.Add(New HR_PRMBankDataTable(ds.Tables("HR_PRMBank")))
            End If
            If (Not (ds.Tables("HR_PRMBranch")) Is Nothing) Then
                MyBase.Tables.Add(New HR_PRMBranchDataTable(ds.Tables("HR_PRMBranch")))
            End If
            If (Not (ds.Tables("HR_PRMBusinessUnit")) Is Nothing) Then
                MyBase.Tables.Add(New HR_PRMBusinessUnitDataTable(ds.Tables("HR_PRMBusinessUnit")))
            End If
            If (Not (ds.Tables("HR_PRMCity")) Is Nothing) Then
                MyBase.Tables.Add(New HR_PRMCityDataTable(ds.Tables("HR_PRMCity")))
            End If
            If (Not (ds.Tables("HR_PRMDEGREE")) Is Nothing) Then
                MyBase.Tables.Add(New HR_PRMDEGREEDataTable(ds.Tables("HR_PRMDEGREE")))
            End If
            If (Not (ds.Tables("HR_PRMDepartments")) Is Nothing) Then
                MyBase.Tables.Add(New HR_PRMDepartmentsDataTable(ds.Tables("HR_PRMDepartments")))
            End If
            If (Not (ds.Tables("HR_PRMGrades")) Is Nothing) Then
                MyBase.Tables.Add(New HR_PRMGradesDataTable(ds.Tables("HR_PRMGrades")))
            End If
            If (Not (ds.Tables("HR_PRMGradeScale")) Is Nothing) Then
                MyBase.Tables.Add(New HR_PRMGradeScaleDataTable(ds.Tables("HR_PRMGradeScale")))
            End If
            If (Not (ds.Tables("HR_PRMParameters")) Is Nothing) Then
                MyBase.Tables.Add(New HR_PRMParametersDataTable(ds.Tables("HR_PRMParameters")))
            End If
            If (Not (ds.Tables("HR_PRMParameterType")) Is Nothing) Then
                MyBase.Tables.Add(New HR_PRMParameterTypeDataTable(ds.Tables("HR_PRMParameterType")))
            End If
            If (Not (ds.Tables("HR_PRMRelations")) Is Nothing) Then
                MyBase.Tables.Add(New HR_PRMRelationsDataTable(ds.Tables("HR_PRMRelations")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property EM_Employee() As EM_EmployeeDataTable
        Get
            Return Me.tableEM_Employee
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property EM_Employee_Audit() As EM_Employee_AuditDataTable
        Get
            Return Me.tableEM_Employee_Audit
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property HR_PRMBank() As HR_PRMBankDataTable
        Get
            Return Me.tableHR_PRMBank
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property HR_PRMBranch() As HR_PRMBranchDataTable
        Get
            Return Me.tableHR_PRMBranch
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property HR_PRMBusinessUnit() As HR_PRMBusinessUnitDataTable
        Get
            Return Me.tableHR_PRMBusinessUnit
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property HR_PRMCity() As HR_PRMCityDataTable
        Get
            Return Me.tableHR_PRMCity
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property HR_PRMDEGREE() As HR_PRMDEGREEDataTable
        Get
            Return Me.tableHR_PRMDEGREE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property HR_PRMDepartments() As HR_PRMDepartmentsDataTable
        Get
            Return Me.tableHR_PRMDepartments
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property HR_PRMGrades() As HR_PRMGradesDataTable
        Get
            Return Me.tableHR_PRMGrades
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property HR_PRMGradeScale() As HR_PRMGradeScaleDataTable
        Get
            Return Me.tableHR_PRMGradeScale
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property HR_PRMParameters() As HR_PRMParametersDataTable
        Get
            Return Me.tableHR_PRMParameters
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property HR_PRMParameterType() As HR_PRMParameterTypeDataTable
        Get
            Return Me.tableHR_PRMParameterType
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property HR_PRMRelations() As HR_PRMRelationsDataTable
        Get
            Return Me.tableHR_PRMRelations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsFCCL = CType(MyBase.Clone,dsFCCL)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("EM_Employee")) Is Nothing) Then
                MyBase.Tables.Add(New EM_EmployeeDataTable(ds.Tables("EM_Employee")))
            End If
            If (Not (ds.Tables("EM_Employee_Audit")) Is Nothing) Then
                MyBase.Tables.Add(New EM_Employee_AuditDataTable(ds.Tables("EM_Employee_Audit")))
            End If
            If (Not (ds.Tables("HR_PRMBank")) Is Nothing) Then
                MyBase.Tables.Add(New HR_PRMBankDataTable(ds.Tables("HR_PRMBank")))
            End If
            If (Not (ds.Tables("HR_PRMBranch")) Is Nothing) Then
                MyBase.Tables.Add(New HR_PRMBranchDataTable(ds.Tables("HR_PRMBranch")))
            End If
            If (Not (ds.Tables("HR_PRMBusinessUnit")) Is Nothing) Then
                MyBase.Tables.Add(New HR_PRMBusinessUnitDataTable(ds.Tables("HR_PRMBusinessUnit")))
            End If
            If (Not (ds.Tables("HR_PRMCity")) Is Nothing) Then
                MyBase.Tables.Add(New HR_PRMCityDataTable(ds.Tables("HR_PRMCity")))
            End If
            If (Not (ds.Tables("HR_PRMDEGREE")) Is Nothing) Then
                MyBase.Tables.Add(New HR_PRMDEGREEDataTable(ds.Tables("HR_PRMDEGREE")))
            End If
            If (Not (ds.Tables("HR_PRMDepartments")) Is Nothing) Then
                MyBase.Tables.Add(New HR_PRMDepartmentsDataTable(ds.Tables("HR_PRMDepartments")))
            End If
            If (Not (ds.Tables("HR_PRMGrades")) Is Nothing) Then
                MyBase.Tables.Add(New HR_PRMGradesDataTable(ds.Tables("HR_PRMGrades")))
            End If
            If (Not (ds.Tables("HR_PRMGradeScale")) Is Nothing) Then
                MyBase.Tables.Add(New HR_PRMGradeScaleDataTable(ds.Tables("HR_PRMGradeScale")))
            End If
            If (Not (ds.Tables("HR_PRMParameters")) Is Nothing) Then
                MyBase.Tables.Add(New HR_PRMParametersDataTable(ds.Tables("HR_PRMParameters")))
            End If
            If (Not (ds.Tables("HR_PRMParameterType")) Is Nothing) Then
                MyBase.Tables.Add(New HR_PRMParameterTypeDataTable(ds.Tables("HR_PRMParameterType")))
            End If
            If (Not (ds.Tables("HR_PRMRelations")) Is Nothing) Then
                MyBase.Tables.Add(New HR_PRMRelationsDataTable(ds.Tables("HR_PRMRelations")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableEM_Employee = CType(MyBase.Tables("EM_Employee"),EM_EmployeeDataTable)
        If (initTable = true) Then
            If (Not (Me.tableEM_Employee) Is Nothing) Then
                Me.tableEM_Employee.InitVars
            End If
        End If
        Me.tableEM_Employee_Audit = CType(MyBase.Tables("EM_Employee_Audit"),EM_Employee_AuditDataTable)
        If (initTable = true) Then
            If (Not (Me.tableEM_Employee_Audit) Is Nothing) Then
                Me.tableEM_Employee_Audit.InitVars
            End If
        End If
        Me.tableHR_PRMBank = CType(MyBase.Tables("HR_PRMBank"),HR_PRMBankDataTable)
        If (initTable = true) Then
            If (Not (Me.tableHR_PRMBank) Is Nothing) Then
                Me.tableHR_PRMBank.InitVars
            End If
        End If
        Me.tableHR_PRMBranch = CType(MyBase.Tables("HR_PRMBranch"),HR_PRMBranchDataTable)
        If (initTable = true) Then
            If (Not (Me.tableHR_PRMBranch) Is Nothing) Then
                Me.tableHR_PRMBranch.InitVars
            End If
        End If
        Me.tableHR_PRMBusinessUnit = CType(MyBase.Tables("HR_PRMBusinessUnit"),HR_PRMBusinessUnitDataTable)
        If (initTable = true) Then
            If (Not (Me.tableHR_PRMBusinessUnit) Is Nothing) Then
                Me.tableHR_PRMBusinessUnit.InitVars
            End If
        End If
        Me.tableHR_PRMCity = CType(MyBase.Tables("HR_PRMCity"),HR_PRMCityDataTable)
        If (initTable = true) Then
            If (Not (Me.tableHR_PRMCity) Is Nothing) Then
                Me.tableHR_PRMCity.InitVars
            End If
        End If
        Me.tableHR_PRMDEGREE = CType(MyBase.Tables("HR_PRMDEGREE"),HR_PRMDEGREEDataTable)
        If (initTable = true) Then
            If (Not (Me.tableHR_PRMDEGREE) Is Nothing) Then
                Me.tableHR_PRMDEGREE.InitVars
            End If
        End If
        Me.tableHR_PRMDepartments = CType(MyBase.Tables("HR_PRMDepartments"),HR_PRMDepartmentsDataTable)
        If (initTable = true) Then
            If (Not (Me.tableHR_PRMDepartments) Is Nothing) Then
                Me.tableHR_PRMDepartments.InitVars
            End If
        End If
        Me.tableHR_PRMGrades = CType(MyBase.Tables("HR_PRMGrades"),HR_PRMGradesDataTable)
        If (initTable = true) Then
            If (Not (Me.tableHR_PRMGrades) Is Nothing) Then
                Me.tableHR_PRMGrades.InitVars
            End If
        End If
        Me.tableHR_PRMGradeScale = CType(MyBase.Tables("HR_PRMGradeScale"),HR_PRMGradeScaleDataTable)
        If (initTable = true) Then
            If (Not (Me.tableHR_PRMGradeScale) Is Nothing) Then
                Me.tableHR_PRMGradeScale.InitVars
            End If
        End If
        Me.tableHR_PRMParameters = CType(MyBase.Tables("HR_PRMParameters"),HR_PRMParametersDataTable)
        If (initTable = true) Then
            If (Not (Me.tableHR_PRMParameters) Is Nothing) Then
                Me.tableHR_PRMParameters.InitVars
            End If
        End If
        Me.tableHR_PRMParameterType = CType(MyBase.Tables("HR_PRMParameterType"),HR_PRMParameterTypeDataTable)
        If (initTable = true) Then
            If (Not (Me.tableHR_PRMParameterType) Is Nothing) Then
                Me.tableHR_PRMParameterType.InitVars
            End If
        End If
        Me.tableHR_PRMRelations = CType(MyBase.Tables("HR_PRMRelations"),HR_PRMRelationsDataTable)
        If (initTable = true) Then
            If (Not (Me.tableHR_PRMRelations) Is Nothing) Then
                Me.tableHR_PRMRelations.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "dsFCCL"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsFCCL.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableEM_Employee = New EM_EmployeeDataTable()
        MyBase.Tables.Add(Me.tableEM_Employee)
        Me.tableEM_Employee_Audit = New EM_Employee_AuditDataTable()
        MyBase.Tables.Add(Me.tableEM_Employee_Audit)
        Me.tableHR_PRMBank = New HR_PRMBankDataTable()
        MyBase.Tables.Add(Me.tableHR_PRMBank)
        Me.tableHR_PRMBranch = New HR_PRMBranchDataTable()
        MyBase.Tables.Add(Me.tableHR_PRMBranch)
        Me.tableHR_PRMBusinessUnit = New HR_PRMBusinessUnitDataTable()
        MyBase.Tables.Add(Me.tableHR_PRMBusinessUnit)
        Me.tableHR_PRMCity = New HR_PRMCityDataTable()
        MyBase.Tables.Add(Me.tableHR_PRMCity)
        Me.tableHR_PRMDEGREE = New HR_PRMDEGREEDataTable()
        MyBase.Tables.Add(Me.tableHR_PRMDEGREE)
        Me.tableHR_PRMDepartments = New HR_PRMDepartmentsDataTable()
        MyBase.Tables.Add(Me.tableHR_PRMDepartments)
        Me.tableHR_PRMGrades = New HR_PRMGradesDataTable()
        MyBase.Tables.Add(Me.tableHR_PRMGrades)
        Me.tableHR_PRMGradeScale = New HR_PRMGradeScaleDataTable()
        MyBase.Tables.Add(Me.tableHR_PRMGradeScale)
        Me.tableHR_PRMParameters = New HR_PRMParametersDataTable()
        MyBase.Tables.Add(Me.tableHR_PRMParameters)
        Me.tableHR_PRMParameterType = New HR_PRMParameterTypeDataTable()
        MyBase.Tables.Add(Me.tableHR_PRMParameterType)
        Me.tableHR_PRMRelations = New HR_PRMRelationsDataTable()
        MyBase.Tables.Add(Me.tableHR_PRMRelations)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeEM_Employee() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeEM_Employee_Audit() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeHR_PRMBank() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeHR_PRMBranch() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeHR_PRMBusinessUnit() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeHR_PRMCity() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeHR_PRMDEGREE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeHR_PRMDepartments() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeHR_PRMGrades() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeHR_PRMGradeScale() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeHR_PRMParameters() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeHR_PRMParameterType() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeHR_PRMRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsFCCL = New dsFCCL()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub EM_EmployeeRowChangeEventHandler(ByVal sender As Object, ByVal e As EM_EmployeeRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub EM_Employee_AuditRowChangeEventHandler(ByVal sender As Object, ByVal e As EM_Employee_AuditRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub HR_PRMBankRowChangeEventHandler(ByVal sender As Object, ByVal e As HR_PRMBankRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub HR_PRMBranchRowChangeEventHandler(ByVal sender As Object, ByVal e As HR_PRMBranchRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub HR_PRMBusinessUnitRowChangeEventHandler(ByVal sender As Object, ByVal e As HR_PRMBusinessUnitRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub HR_PRMCityRowChangeEventHandler(ByVal sender As Object, ByVal e As HR_PRMCityRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub HR_PRMDEGREERowChangeEventHandler(ByVal sender As Object, ByVal e As HR_PRMDEGREERowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub HR_PRMDepartmentsRowChangeEventHandler(ByVal sender As Object, ByVal e As HR_PRMDepartmentsRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub HR_PRMGradesRowChangeEventHandler(ByVal sender As Object, ByVal e As HR_PRMGradesRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub HR_PRMGradeScaleRowChangeEventHandler(ByVal sender As Object, ByVal e As HR_PRMGradeScaleRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub HR_PRMParametersRowChangeEventHandler(ByVal sender As Object, ByVal e As HR_PRMParametersRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub HR_PRMParameterTypeRowChangeEventHandler(ByVal sender As Object, ByVal e As HR_PRMParameterTypeRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub HR_PRMRelationsRowChangeEventHandler(ByVal sender As Object, ByVal e As HR_PRMRelationsRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class EM_EmployeeDataTable
        Inherits Global.System.Data.TypedTableBase(Of EM_EmployeeRow)
        
        Private columnId As Global.System.Data.DataColumn
        
        Private columnEmployeeNo As Global.System.Data.DataColumn
        
        Private columnFirstName As Global.System.Data.DataColumn
        
        Private columnMiddleName As Global.System.Data.DataColumn
        
        Private columnLastName As Global.System.Data.DataColumn
        
        Private columnFullName As Global.System.Data.DataColumn
        
        Private columnFatherName As Global.System.Data.DataColumn
        
        Private columnGender As Global.System.Data.DataColumn
        
        Private columnReligion As Global.System.Data.DataColumn
        
        Private columnDateOfBirth As Global.System.Data.DataColumn
        
        Private columnBloodGroup As Global.System.Data.DataColumn
        
        Private columnMaritalStatus As Global.System.Data.DataColumn
        
        Private columnMaritalStatusEffectiveDate As Global.System.Data.DataColumn
        
        Private columnOldNICNo As Global.System.Data.DataColumn
        
        Private columnNewNICNo As Global.System.Data.DataColumn
        
        Private columnNationalTaxNo As Global.System.Data.DataColumn
        
        Private columnDrivingLicenseNo As Global.System.Data.DataColumn
        
        Private columnPassportNo As Global.System.Data.DataColumn
        
        Private columnPassportIssueDate As Global.System.Data.DataColumn
        
        Private columnPassportExpiryDate As Global.System.Data.DataColumn
        
        Private columnContractTypeId As Global.System.Data.DataColumn
        
        Private columnEmployeeTypeId As Global.System.Data.DataColumn
        
        Private columnDesignationId As Global.System.Data.DataColumn
        
        Private columnEmployeeGradeId As Global.System.Data.DataColumn
        
        Private columnGradeEffectiveDate As Global.System.Data.DataColumn
        
        Private columnProbationEndDate As Global.System.Data.DataColumn
        
        Private columnJoiningDate As Global.System.Data.DataColumn
        
        Private columnConfirmationDate As Global.System.Data.DataColumn
        
        Private columnContractStartDate As Global.System.Data.DataColumn
        
        Private columnContractEndDate As Global.System.Data.DataColumn
        
        Private columnCategory As Global.System.Data.DataColumn
        
        Private columnJobDescription As Global.System.Data.DataColumn
        
        Private columnContactPresentAddress As Global.System.Data.DataColumn
        
        Private columnContactPresentCountryId As Global.System.Data.DataColumn
        
        Private columnContactPresentCityId As Global.System.Data.DataColumn
        
        Private columnContactPresentPhone As Global.System.Data.DataColumn
        
        Private columnContactPresentMobile As Global.System.Data.DataColumn
        
        Private columnContactPermanentAddress As Global.System.Data.DataColumn
        
        Private columnContactPermanentCountryId As Global.System.Data.DataColumn
        
        Private columnContactPermanentCityId As Global.System.Data.DataColumn
        
        Private columnContactPermanentPhone As Global.System.Data.DataColumn
        
        Private columnContactPersonalEmail As Global.System.Data.DataColumn
        
        Private columnContactOfficialEmail As Global.System.Data.DataColumn
        
        Private columnCreditCardNo As Global.System.Data.DataColumn
        
        Private columnPicture As Global.System.Data.DataColumn
        
        Private columnImageType As Global.System.Data.DataColumn
        
        Private columnNationalityId As Global.System.Data.DataColumn
        
        Private columnDomicileId As Global.System.Data.DataColumn
        
        Private columnHeadOfDepartmentId As Global.System.Data.DataColumn
        
        Private columnSupervisorEmployeeId As Global.System.Data.DataColumn
        
        Private columnIsHeadOfDepartment As Global.System.Data.DataColumn
        
        Private columnIsForcePersonal As Global.System.Data.DataColumn
        
        Private columnFPRetirementRankId As Global.System.Data.DataColumn
        
        Private columnvcRank As Global.System.Data.DataColumn
        
        Private columnFPRetirementDate As Global.System.Data.DataColumn
        
        Private columnFPJobDescription As Global.System.Data.DataColumn
        
        Private columnFPCorpsId As Global.System.Data.DataColumn
        
        Private columnGuardianName As Global.System.Data.DataColumn
        
        Private columnGuardianRelationId As Global.System.Data.DataColumn
        
        Private columnGuardianNIC As Global.System.Data.DataColumn
        
        Private columnGuardianPhone As Global.System.Data.DataColumn
        
        Private columnGuardianAddress As Global.System.Data.DataColumn
        
        Private columnDepartmentId As Global.System.Data.DataColumn
        
        Private columnBranchId As Global.System.Data.DataColumn
        
        Private columnBusinessUnitId As Global.System.Data.DataColumn
        
        Private columnScale As Global.System.Data.DataColumn
        
        Private columnIsActive As Global.System.Data.DataColumn
        
        Private columnCurrentStateId As Global.System.Data.DataColumn
        
        Private columnIsTechnical As Global.System.Data.DataColumn
        
        Private columnvcRemarks As Global.System.Data.DataColumn
        
        Private columnvcPosting As Global.System.Data.DataColumn
        
        Private columndtmRenewalDate As Global.System.Data.DataColumn
        
        Private columndtmRetirementDate As Global.System.Data.DataColumn
        
        Private columnClerkEmpNo As Global.System.Data.DataColumn
        
        Private columnRecommendedByEmpNo1 As Global.System.Data.DataColumn
        
        Private columnRecommendedByEmpNo2 As Global.System.Data.DataColumn
        
        Private columnSanctionedByEmpNo As Global.System.Data.DataColumn
        
        Private columnGMEmpNo As Global.System.Data.DataColumn
        
        Private columnManagerEmpNo As Global.System.Data.DataColumn
        
        Private columnnSectionId As Global.System.Data.DataColumn
        
        Private columnvcVehicleAccCode As Global.System.Data.DataColumn
        
        Private columnvcMobileAccCode As Global.System.Data.DataColumn
        
        Private columnRoEmpNo As Global.System.Data.DataColumn
        
        Private columnSroEmpNo As Global.System.Data.DataColumn
        
        Private columnAttVerificationEmpNo1 As Global.System.Data.DataColumn
        
        Private columnAttVerificationEmpNo2 As Global.System.Data.DataColumn
        
        Private columnAttApprovingEmpNo As Global.System.Data.DataColumn
        
        Private columnnBirthCountry As Global.System.Data.DataColumn
        
        Private columnnBirthCity As Global.System.Data.DataColumn
        
        Private columnnPreviousEmpId As Global.System.Data.DataColumn
        
        Private columnnsStatusId As Global.System.Data.DataColumn
        
        Private columnPassportCountryId As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "EM_Employee"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EmployeeNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmployeeNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FirstNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFirstName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MiddleNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMiddleName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LastNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLastName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FullNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFullName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FatherNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFatherName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GenderColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGender
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ReligionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReligion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DateOfBirthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateOfBirth
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BloodGroupColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBloodGroup
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MaritalStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaritalStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MaritalStatusEffectiveDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaritalStatusEffectiveDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OldNICNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOldNICNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NewNICNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNewNICNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NationalTaxNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNationalTaxNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DrivingLicenseNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDrivingLicenseNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PassportNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPassportNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PassportIssueDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPassportIssueDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PassportExpiryDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPassportExpiryDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ContractTypeIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnContractTypeId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EmployeeTypeIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmployeeTypeId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DesignationIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDesignationId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EmployeeGradeIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmployeeGradeId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GradeEffectiveDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGradeEffectiveDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ProbationEndDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProbationEndDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JoiningDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJoiningDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ConfirmationDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConfirmationDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ContractStartDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnContractStartDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ContractEndDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnContractEndDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CategoryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCategory
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JobDescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJobDescription
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ContactPresentAddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnContactPresentAddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ContactPresentCountryIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnContactPresentCountryId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ContactPresentCityIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnContactPresentCityId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ContactPresentPhoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnContactPresentPhone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ContactPresentMobileColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnContactPresentMobile
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ContactPermanentAddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnContactPermanentAddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ContactPermanentCountryIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnContactPermanentCountryId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ContactPermanentCityIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnContactPermanentCityId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ContactPermanentPhoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnContactPermanentPhone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ContactPersonalEmailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnContactPersonalEmail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ContactOfficialEmailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnContactOfficialEmail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CreditCardNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCreditCardNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PictureColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPicture
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ImageTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImageType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NationalityIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNationalityId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DomicileIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDomicileId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HeadOfDepartmentIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHeadOfDepartmentId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SupervisorEmployeeIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSupervisorEmployeeId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IsHeadOfDepartmentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsHeadOfDepartment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IsForcePersonalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsForcePersonal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FPRetirementRankIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFPRetirementRankId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property vcRankColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvcRank
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FPRetirementDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFPRetirementDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FPJobDescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFPJobDescription
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FPCorpsIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFPCorpsId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GuardianNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGuardianName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GuardianRelationIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGuardianRelationId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GuardianNICColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGuardianNIC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GuardianPhoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGuardianPhone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GuardianAddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGuardianAddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DepartmentIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDepartmentId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BranchIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBranchId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BusinessUnitIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBusinessUnitId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ScaleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnScale
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IsActiveColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsActive
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CurrentStateIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCurrentStateId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IsTechnicalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsTechnical
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property vcRemarksColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvcRemarks
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property vcPostingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvcPosting
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dtmRenewalDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndtmRenewalDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dtmRetirementDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndtmRetirementDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ClerkEmpNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClerkEmpNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RecommendedByEmpNo1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRecommendedByEmpNo1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RecommendedByEmpNo2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRecommendedByEmpNo2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SanctionedByEmpNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSanctionedByEmpNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GMEmpNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGMEmpNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ManagerEmpNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnManagerEmpNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property nSectionIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnSectionId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property vcVehicleAccCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvcVehicleAccCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property vcMobileAccCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvcMobileAccCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RoEmpNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRoEmpNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SroEmpNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSroEmpNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AttVerificationEmpNo1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAttVerificationEmpNo1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AttVerificationEmpNo2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAttVerificationEmpNo2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AttApprovingEmpNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAttApprovingEmpNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property nBirthCountryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnBirthCountry
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property nBirthCityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnBirthCity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property nPreviousEmpIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnPreviousEmpId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property nsStatusIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnsStatusId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PassportCountryIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPassportCountryId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As EM_EmployeeRow
            Get
                Return CType(Me.Rows(index),EM_EmployeeRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event EM_EmployeeRowChanging As EM_EmployeeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event EM_EmployeeRowChanged As EM_EmployeeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event EM_EmployeeRowDeleting As EM_EmployeeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event EM_EmployeeRowDeleted As EM_EmployeeRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddEM_EmployeeRow(ByVal row As EM_EmployeeRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddEM_EmployeeRow( _
                    ByVal Id As Long,  _
                    ByVal EmployeeNo As String,  _
                    ByVal FirstName As String,  _
                    ByVal MiddleName As String,  _
                    ByVal LastName As String,  _
                    ByVal FullName As String,  _
                    ByVal FatherName As String,  _
                    ByVal Gender As Byte,  _
                    ByVal Religion As Integer,  _
                    ByVal DateOfBirth As Date,  _
                    ByVal BloodGroup As Integer,  _
                    ByVal MaritalStatus As Byte,  _
                    ByVal MaritalStatusEffectiveDate As Date,  _
                    ByVal OldNICNo As String,  _
                    ByVal NewNICNo As String,  _
                    ByVal NationalTaxNo As String,  _
                    ByVal DrivingLicenseNo As String,  _
                    ByVal PassportNo As String,  _
                    ByVal PassportIssueDate As Date,  _
                    ByVal PassportExpiryDate As Date,  _
                    ByVal ContractTypeId As Integer,  _
                    ByVal EmployeeTypeId As Integer,  _
                    ByVal DesignationId As Integer,  _
                    ByVal EmployeeGradeId As Integer,  _
                    ByVal GradeEffectiveDate As Date,  _
                    ByVal ProbationEndDate As Date,  _
                    ByVal JoiningDate As Date,  _
                    ByVal ConfirmationDate As Date,  _
                    ByVal ContractStartDate As Date,  _
                    ByVal ContractEndDate As Date,  _
                    ByVal Category As Integer,  _
                    ByVal JobDescription As String,  _
                    ByVal ContactPresentAddress As String,  _
                    ByVal ContactPresentCountryId As Integer,  _
                    ByVal ContactPresentCityId As Integer,  _
                    ByVal ContactPresentPhone As String,  _
                    ByVal ContactPresentMobile As String,  _
                    ByVal ContactPermanentAddress As String,  _
                    ByVal ContactPermanentCountryId As Integer,  _
                    ByVal ContactPermanentCityId As Integer,  _
                    ByVal ContactPermanentPhone As String,  _
                    ByVal ContactPersonalEmail As String,  _
                    ByVal ContactOfficialEmail As String,  _
                    ByVal CreditCardNo As String,  _
                    ByVal Picture() As Byte,  _
                    ByVal ImageType As String,  _
                    ByVal NationalityId As Integer,  _
                    ByVal DomicileId As Integer,  _
                    ByVal HeadOfDepartmentId As Long,  _
                    ByVal SupervisorEmployeeId As Long,  _
                    ByVal IsHeadOfDepartment As Boolean,  _
                    ByVal IsForcePersonal As Boolean,  _
                    ByVal FPRetirementRankId As Integer,  _
                    ByVal vcRank As String,  _
                    ByVal FPRetirementDate As Date,  _
                    ByVal FPJobDescription As String,  _
                    ByVal FPCorpsId As Integer,  _
                    ByVal GuardianName As String,  _
                    ByVal GuardianRelationId As Integer,  _
                    ByVal GuardianNIC As String,  _
                    ByVal GuardianPhone As String,  _
                    ByVal GuardianAddress As String,  _
                    ByVal DepartmentId As Integer,  _
                    ByVal BranchId As Integer,  _
                    ByVal BusinessUnitId As Integer,  _
                    ByVal Scale As Integer,  _
                    ByVal IsActive As Boolean,  _
                    ByVal CurrentStateId As Integer,  _
                    ByVal IsTechnical As Short,  _
                    ByVal vcRemarks As String,  _
                    ByVal vcPosting As String,  _
                    ByVal dtmRenewalDate As Date,  _
                    ByVal dtmRetirementDate As Date,  _
                    ByVal ClerkEmpNo As String,  _
                    ByVal RecommendedByEmpNo1 As String,  _
                    ByVal RecommendedByEmpNo2 As String,  _
                    ByVal SanctionedByEmpNo As String,  _
                    ByVal GMEmpNo As String,  _
                    ByVal ManagerEmpNo As String,  _
                    ByVal nSectionId As Integer,  _
                    ByVal vcVehicleAccCode As String,  _
                    ByVal vcMobileAccCode As String,  _
                    ByVal RoEmpNo As String,  _
                    ByVal SroEmpNo As String,  _
                    ByVal AttVerificationEmpNo1 As String,  _
                    ByVal AttVerificationEmpNo2 As String,  _
                    ByVal AttApprovingEmpNo As String,  _
                    ByVal nBirthCountry As Integer,  _
                    ByVal nBirthCity As Integer,  _
                    ByVal nPreviousEmpId As Long,  _
                    ByVal nsStatusId As Short,  _
                    ByVal PassportCountryId As Integer) As EM_EmployeeRow
            Dim rowEM_EmployeeRow As EM_EmployeeRow = CType(Me.NewRow,EM_EmployeeRow)
            Dim columnValuesArray() As Object = New Object() {Id, EmployeeNo, FirstName, MiddleName, LastName, FullName, FatherName, Gender, Religion, DateOfBirth, BloodGroup, MaritalStatus, MaritalStatusEffectiveDate, OldNICNo, NewNICNo, NationalTaxNo, DrivingLicenseNo, PassportNo, PassportIssueDate, PassportExpiryDate, ContractTypeId, EmployeeTypeId, DesignationId, EmployeeGradeId, GradeEffectiveDate, ProbationEndDate, JoiningDate, ConfirmationDate, ContractStartDate, ContractEndDate, Category, JobDescription, ContactPresentAddress, ContactPresentCountryId, ContactPresentCityId, ContactPresentPhone, ContactPresentMobile, ContactPermanentAddress, ContactPermanentCountryId, ContactPermanentCityId, ContactPermanentPhone, ContactPersonalEmail, ContactOfficialEmail, CreditCardNo, Picture, ImageType, NationalityId, DomicileId, HeadOfDepartmentId, SupervisorEmployeeId, IsHeadOfDepartment, IsForcePersonal, FPRetirementRankId, vcRank, FPRetirementDate, FPJobDescription, FPCorpsId, GuardianName, GuardianRelationId, GuardianNIC, GuardianPhone, GuardianAddress, DepartmentId, BranchId, BusinessUnitId, Scale, IsActive, CurrentStateId, IsTechnical, vcRemarks, vcPosting, dtmRenewalDate, dtmRetirementDate, ClerkEmpNo, RecommendedByEmpNo1, RecommendedByEmpNo2, SanctionedByEmpNo, GMEmpNo, ManagerEmpNo, nSectionId, vcVehicleAccCode, vcMobileAccCode, RoEmpNo, SroEmpNo, AttVerificationEmpNo1, AttVerificationEmpNo2, AttApprovingEmpNo, nBirthCountry, nBirthCity, nPreviousEmpId, nsStatusId, PassportCountryId}
            rowEM_EmployeeRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowEM_EmployeeRow)
            Return rowEM_EmployeeRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindById(ByVal Id As Long) As EM_EmployeeRow
            Return CType(Me.Rows.Find(New Object() {Id}),EM_EmployeeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As EM_EmployeeDataTable = CType(MyBase.Clone,EM_EmployeeDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New EM_EmployeeDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnId = MyBase.Columns("Id")
            Me.columnEmployeeNo = MyBase.Columns("EmployeeNo")
            Me.columnFirstName = MyBase.Columns("FirstName")
            Me.columnMiddleName = MyBase.Columns("MiddleName")
            Me.columnLastName = MyBase.Columns("LastName")
            Me.columnFullName = MyBase.Columns("FullName")
            Me.columnFatherName = MyBase.Columns("FatherName")
            Me.columnGender = MyBase.Columns("Gender")
            Me.columnReligion = MyBase.Columns("Religion")
            Me.columnDateOfBirth = MyBase.Columns("DateOfBirth")
            Me.columnBloodGroup = MyBase.Columns("BloodGroup")
            Me.columnMaritalStatus = MyBase.Columns("MaritalStatus")
            Me.columnMaritalStatusEffectiveDate = MyBase.Columns("MaritalStatusEffectiveDate")
            Me.columnOldNICNo = MyBase.Columns("OldNICNo")
            Me.columnNewNICNo = MyBase.Columns("NewNICNo")
            Me.columnNationalTaxNo = MyBase.Columns("NationalTaxNo")
            Me.columnDrivingLicenseNo = MyBase.Columns("DrivingLicenseNo")
            Me.columnPassportNo = MyBase.Columns("PassportNo")
            Me.columnPassportIssueDate = MyBase.Columns("PassportIssueDate")
            Me.columnPassportExpiryDate = MyBase.Columns("PassportExpiryDate")
            Me.columnContractTypeId = MyBase.Columns("ContractTypeId")
            Me.columnEmployeeTypeId = MyBase.Columns("EmployeeTypeId")
            Me.columnDesignationId = MyBase.Columns("DesignationId")
            Me.columnEmployeeGradeId = MyBase.Columns("EmployeeGradeId")
            Me.columnGradeEffectiveDate = MyBase.Columns("GradeEffectiveDate")
            Me.columnProbationEndDate = MyBase.Columns("ProbationEndDate")
            Me.columnJoiningDate = MyBase.Columns("JoiningDate")
            Me.columnConfirmationDate = MyBase.Columns("ConfirmationDate")
            Me.columnContractStartDate = MyBase.Columns("ContractStartDate")
            Me.columnContractEndDate = MyBase.Columns("ContractEndDate")
            Me.columnCategory = MyBase.Columns("Category")
            Me.columnJobDescription = MyBase.Columns("JobDescription")
            Me.columnContactPresentAddress = MyBase.Columns("ContactPresentAddress")
            Me.columnContactPresentCountryId = MyBase.Columns("ContactPresentCountryId")
            Me.columnContactPresentCityId = MyBase.Columns("ContactPresentCityId")
            Me.columnContactPresentPhone = MyBase.Columns("ContactPresentPhone")
            Me.columnContactPresentMobile = MyBase.Columns("ContactPresentMobile")
            Me.columnContactPermanentAddress = MyBase.Columns("ContactPermanentAddress")
            Me.columnContactPermanentCountryId = MyBase.Columns("ContactPermanentCountryId")
            Me.columnContactPermanentCityId = MyBase.Columns("ContactPermanentCityId")
            Me.columnContactPermanentPhone = MyBase.Columns("ContactPermanentPhone")
            Me.columnContactPersonalEmail = MyBase.Columns("ContactPersonalEmail")
            Me.columnContactOfficialEmail = MyBase.Columns("ContactOfficialEmail")
            Me.columnCreditCardNo = MyBase.Columns("CreditCardNo")
            Me.columnPicture = MyBase.Columns("Picture")
            Me.columnImageType = MyBase.Columns("ImageType")
            Me.columnNationalityId = MyBase.Columns("NationalityId")
            Me.columnDomicileId = MyBase.Columns("DomicileId")
            Me.columnHeadOfDepartmentId = MyBase.Columns("HeadOfDepartmentId")
            Me.columnSupervisorEmployeeId = MyBase.Columns("SupervisorEmployeeId")
            Me.columnIsHeadOfDepartment = MyBase.Columns("IsHeadOfDepartment")
            Me.columnIsForcePersonal = MyBase.Columns("IsForcePersonal")
            Me.columnFPRetirementRankId = MyBase.Columns("FPRetirementRankId")
            Me.columnvcRank = MyBase.Columns("vcRank")
            Me.columnFPRetirementDate = MyBase.Columns("FPRetirementDate")
            Me.columnFPJobDescription = MyBase.Columns("FPJobDescription")
            Me.columnFPCorpsId = MyBase.Columns("FPCorpsId")
            Me.columnGuardianName = MyBase.Columns("GuardianName")
            Me.columnGuardianRelationId = MyBase.Columns("GuardianRelationId")
            Me.columnGuardianNIC = MyBase.Columns("GuardianNIC")
            Me.columnGuardianPhone = MyBase.Columns("GuardianPhone")
            Me.columnGuardianAddress = MyBase.Columns("GuardianAddress")
            Me.columnDepartmentId = MyBase.Columns("DepartmentId")
            Me.columnBranchId = MyBase.Columns("BranchId")
            Me.columnBusinessUnitId = MyBase.Columns("BusinessUnitId")
            Me.columnScale = MyBase.Columns("Scale")
            Me.columnIsActive = MyBase.Columns("IsActive")
            Me.columnCurrentStateId = MyBase.Columns("CurrentStateId")
            Me.columnIsTechnical = MyBase.Columns("IsTechnical")
            Me.columnvcRemarks = MyBase.Columns("vcRemarks")
            Me.columnvcPosting = MyBase.Columns("vcPosting")
            Me.columndtmRenewalDate = MyBase.Columns("dtmRenewalDate")
            Me.columndtmRetirementDate = MyBase.Columns("dtmRetirementDate")
            Me.columnClerkEmpNo = MyBase.Columns("ClerkEmpNo")
            Me.columnRecommendedByEmpNo1 = MyBase.Columns("RecommendedByEmpNo1")
            Me.columnRecommendedByEmpNo2 = MyBase.Columns("RecommendedByEmpNo2")
            Me.columnSanctionedByEmpNo = MyBase.Columns("SanctionedByEmpNo")
            Me.columnGMEmpNo = MyBase.Columns("GMEmpNo")
            Me.columnManagerEmpNo = MyBase.Columns("ManagerEmpNo")
            Me.columnnSectionId = MyBase.Columns("nSectionId")
            Me.columnvcVehicleAccCode = MyBase.Columns("vcVehicleAccCode")
            Me.columnvcMobileAccCode = MyBase.Columns("vcMobileAccCode")
            Me.columnRoEmpNo = MyBase.Columns("RoEmpNo")
            Me.columnSroEmpNo = MyBase.Columns("SroEmpNo")
            Me.columnAttVerificationEmpNo1 = MyBase.Columns("AttVerificationEmpNo1")
            Me.columnAttVerificationEmpNo2 = MyBase.Columns("AttVerificationEmpNo2")
            Me.columnAttApprovingEmpNo = MyBase.Columns("AttApprovingEmpNo")
            Me.columnnBirthCountry = MyBase.Columns("nBirthCountry")
            Me.columnnBirthCity = MyBase.Columns("nBirthCity")
            Me.columnnPreviousEmpId = MyBase.Columns("nPreviousEmpId")
            Me.columnnsStatusId = MyBase.Columns("nsStatusId")
            Me.columnPassportCountryId = MyBase.Columns("PassportCountryId")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId)
            Me.columnEmployeeNo = New Global.System.Data.DataColumn("EmployeeNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmployeeNo)
            Me.columnFirstName = New Global.System.Data.DataColumn("FirstName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFirstName)
            Me.columnMiddleName = New Global.System.Data.DataColumn("MiddleName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMiddleName)
            Me.columnLastName = New Global.System.Data.DataColumn("LastName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLastName)
            Me.columnFullName = New Global.System.Data.DataColumn("FullName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFullName)
            Me.columnFatherName = New Global.System.Data.DataColumn("FatherName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFatherName)
            Me.columnGender = New Global.System.Data.DataColumn("Gender", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGender)
            Me.columnReligion = New Global.System.Data.DataColumn("Religion", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReligion)
            Me.columnDateOfBirth = New Global.System.Data.DataColumn("DateOfBirth", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateOfBirth)
            Me.columnBloodGroup = New Global.System.Data.DataColumn("BloodGroup", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBloodGroup)
            Me.columnMaritalStatus = New Global.System.Data.DataColumn("MaritalStatus", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaritalStatus)
            Me.columnMaritalStatusEffectiveDate = New Global.System.Data.DataColumn("MaritalStatusEffectiveDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaritalStatusEffectiveDate)
            Me.columnOldNICNo = New Global.System.Data.DataColumn("OldNICNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOldNICNo)
            Me.columnNewNICNo = New Global.System.Data.DataColumn("NewNICNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNewNICNo)
            Me.columnNationalTaxNo = New Global.System.Data.DataColumn("NationalTaxNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNationalTaxNo)
            Me.columnDrivingLicenseNo = New Global.System.Data.DataColumn("DrivingLicenseNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDrivingLicenseNo)
            Me.columnPassportNo = New Global.System.Data.DataColumn("PassportNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPassportNo)
            Me.columnPassportIssueDate = New Global.System.Data.DataColumn("PassportIssueDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPassportIssueDate)
            Me.columnPassportExpiryDate = New Global.System.Data.DataColumn("PassportExpiryDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPassportExpiryDate)
            Me.columnContractTypeId = New Global.System.Data.DataColumn("ContractTypeId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnContractTypeId)
            Me.columnEmployeeTypeId = New Global.System.Data.DataColumn("EmployeeTypeId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmployeeTypeId)
            Me.columnDesignationId = New Global.System.Data.DataColumn("DesignationId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDesignationId)
            Me.columnEmployeeGradeId = New Global.System.Data.DataColumn("EmployeeGradeId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmployeeGradeId)
            Me.columnGradeEffectiveDate = New Global.System.Data.DataColumn("GradeEffectiveDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGradeEffectiveDate)
            Me.columnProbationEndDate = New Global.System.Data.DataColumn("ProbationEndDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProbationEndDate)
            Me.columnJoiningDate = New Global.System.Data.DataColumn("JoiningDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJoiningDate)
            Me.columnConfirmationDate = New Global.System.Data.DataColumn("ConfirmationDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConfirmationDate)
            Me.columnContractStartDate = New Global.System.Data.DataColumn("ContractStartDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnContractStartDate)
            Me.columnContractEndDate = New Global.System.Data.DataColumn("ContractEndDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnContractEndDate)
            Me.columnCategory = New Global.System.Data.DataColumn("Category", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCategory)
            Me.columnJobDescription = New Global.System.Data.DataColumn("JobDescription", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJobDescription)
            Me.columnContactPresentAddress = New Global.System.Data.DataColumn("ContactPresentAddress", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnContactPresentAddress)
            Me.columnContactPresentCountryId = New Global.System.Data.DataColumn("ContactPresentCountryId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnContactPresentCountryId)
            Me.columnContactPresentCityId = New Global.System.Data.DataColumn("ContactPresentCityId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnContactPresentCityId)
            Me.columnContactPresentPhone = New Global.System.Data.DataColumn("ContactPresentPhone", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnContactPresentPhone)
            Me.columnContactPresentMobile = New Global.System.Data.DataColumn("ContactPresentMobile", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnContactPresentMobile)
            Me.columnContactPermanentAddress = New Global.System.Data.DataColumn("ContactPermanentAddress", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnContactPermanentAddress)
            Me.columnContactPermanentCountryId = New Global.System.Data.DataColumn("ContactPermanentCountryId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnContactPermanentCountryId)
            Me.columnContactPermanentCityId = New Global.System.Data.DataColumn("ContactPermanentCityId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnContactPermanentCityId)
            Me.columnContactPermanentPhone = New Global.System.Data.DataColumn("ContactPermanentPhone", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnContactPermanentPhone)
            Me.columnContactPersonalEmail = New Global.System.Data.DataColumn("ContactPersonalEmail", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnContactPersonalEmail)
            Me.columnContactOfficialEmail = New Global.System.Data.DataColumn("ContactOfficialEmail", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnContactOfficialEmail)
            Me.columnCreditCardNo = New Global.System.Data.DataColumn("CreditCardNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCreditCardNo)
            Me.columnPicture = New Global.System.Data.DataColumn("Picture", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPicture)
            Me.columnImageType = New Global.System.Data.DataColumn("ImageType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImageType)
            Me.columnNationalityId = New Global.System.Data.DataColumn("NationalityId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNationalityId)
            Me.columnDomicileId = New Global.System.Data.DataColumn("DomicileId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDomicileId)
            Me.columnHeadOfDepartmentId = New Global.System.Data.DataColumn("HeadOfDepartmentId", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHeadOfDepartmentId)
            Me.columnSupervisorEmployeeId = New Global.System.Data.DataColumn("SupervisorEmployeeId", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSupervisorEmployeeId)
            Me.columnIsHeadOfDepartment = New Global.System.Data.DataColumn("IsHeadOfDepartment", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsHeadOfDepartment)
            Me.columnIsForcePersonal = New Global.System.Data.DataColumn("IsForcePersonal", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsForcePersonal)
            Me.columnFPRetirementRankId = New Global.System.Data.DataColumn("FPRetirementRankId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFPRetirementRankId)
            Me.columnvcRank = New Global.System.Data.DataColumn("vcRank", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvcRank)
            Me.columnFPRetirementDate = New Global.System.Data.DataColumn("FPRetirementDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFPRetirementDate)
            Me.columnFPJobDescription = New Global.System.Data.DataColumn("FPJobDescription", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFPJobDescription)
            Me.columnFPCorpsId = New Global.System.Data.DataColumn("FPCorpsId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFPCorpsId)
            Me.columnGuardianName = New Global.System.Data.DataColumn("GuardianName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGuardianName)
            Me.columnGuardianRelationId = New Global.System.Data.DataColumn("GuardianRelationId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGuardianRelationId)
            Me.columnGuardianNIC = New Global.System.Data.DataColumn("GuardianNIC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGuardianNIC)
            Me.columnGuardianPhone = New Global.System.Data.DataColumn("GuardianPhone", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGuardianPhone)
            Me.columnGuardianAddress = New Global.System.Data.DataColumn("GuardianAddress", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGuardianAddress)
            Me.columnDepartmentId = New Global.System.Data.DataColumn("DepartmentId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDepartmentId)
            Me.columnBranchId = New Global.System.Data.DataColumn("BranchId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBranchId)
            Me.columnBusinessUnitId = New Global.System.Data.DataColumn("BusinessUnitId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBusinessUnitId)
            Me.columnScale = New Global.System.Data.DataColumn("Scale", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScale)
            Me.columnIsActive = New Global.System.Data.DataColumn("IsActive", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsActive)
            Me.columnCurrentStateId = New Global.System.Data.DataColumn("CurrentStateId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCurrentStateId)
            Me.columnIsTechnical = New Global.System.Data.DataColumn("IsTechnical", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsTechnical)
            Me.columnvcRemarks = New Global.System.Data.DataColumn("vcRemarks", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvcRemarks)
            Me.columnvcPosting = New Global.System.Data.DataColumn("vcPosting", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvcPosting)
            Me.columndtmRenewalDate = New Global.System.Data.DataColumn("dtmRenewalDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndtmRenewalDate)
            Me.columndtmRetirementDate = New Global.System.Data.DataColumn("dtmRetirementDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndtmRetirementDate)
            Me.columnClerkEmpNo = New Global.System.Data.DataColumn("ClerkEmpNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClerkEmpNo)
            Me.columnRecommendedByEmpNo1 = New Global.System.Data.DataColumn("RecommendedByEmpNo1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRecommendedByEmpNo1)
            Me.columnRecommendedByEmpNo2 = New Global.System.Data.DataColumn("RecommendedByEmpNo2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRecommendedByEmpNo2)
            Me.columnSanctionedByEmpNo = New Global.System.Data.DataColumn("SanctionedByEmpNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSanctionedByEmpNo)
            Me.columnGMEmpNo = New Global.System.Data.DataColumn("GMEmpNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGMEmpNo)
            Me.columnManagerEmpNo = New Global.System.Data.DataColumn("ManagerEmpNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnManagerEmpNo)
            Me.columnnSectionId = New Global.System.Data.DataColumn("nSectionId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnSectionId)
            Me.columnvcVehicleAccCode = New Global.System.Data.DataColumn("vcVehicleAccCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvcVehicleAccCode)
            Me.columnvcMobileAccCode = New Global.System.Data.DataColumn("vcMobileAccCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvcMobileAccCode)
            Me.columnRoEmpNo = New Global.System.Data.DataColumn("RoEmpNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRoEmpNo)
            Me.columnSroEmpNo = New Global.System.Data.DataColumn("SroEmpNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSroEmpNo)
            Me.columnAttVerificationEmpNo1 = New Global.System.Data.DataColumn("AttVerificationEmpNo1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAttVerificationEmpNo1)
            Me.columnAttVerificationEmpNo2 = New Global.System.Data.DataColumn("AttVerificationEmpNo2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAttVerificationEmpNo2)
            Me.columnAttApprovingEmpNo = New Global.System.Data.DataColumn("AttApprovingEmpNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAttApprovingEmpNo)
            Me.columnnBirthCountry = New Global.System.Data.DataColumn("nBirthCountry", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnBirthCountry)
            Me.columnnBirthCity = New Global.System.Data.DataColumn("nBirthCity", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnBirthCity)
            Me.columnnPreviousEmpId = New Global.System.Data.DataColumn("nPreviousEmpId", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnPreviousEmpId)
            Me.columnnsStatusId = New Global.System.Data.DataColumn("nsStatusId", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnsStatusId)
            Me.columnPassportCountryId = New Global.System.Data.DataColumn("PassportCountryId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPassportCountryId)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnId}, true))
            Me.columnId.AllowDBNull = false
            Me.columnId.Unique = true
            Me.columnEmployeeNo.AllowDBNull = false
            Me.columnEmployeeNo.MaxLength = 10
            Me.columnFirstName.MaxLength = 20
            Me.columnMiddleName.MaxLength = 20
            Me.columnLastName.MaxLength = 20
            Me.columnFullName.MaxLength = 100
            Me.columnFatherName.MaxLength = 50
            Me.columnOldNICNo.MaxLength = 15
            Me.columnNewNICNo.MaxLength = 15
            Me.columnNationalTaxNo.MaxLength = 13
            Me.columnDrivingLicenseNo.MaxLength = 20
            Me.columnPassportNo.MaxLength = 20
            Me.columnJobDescription.MaxLength = 5000
            Me.columnContactPresentAddress.MaxLength = 500
            Me.columnContactPresentPhone.MaxLength = 50
            Me.columnContactPresentMobile.MaxLength = 50
            Me.columnContactPermanentAddress.MaxLength = 500
            Me.columnContactPermanentPhone.MaxLength = 50
            Me.columnContactPersonalEmail.MaxLength = 50
            Me.columnContactOfficialEmail.MaxLength = 50
            Me.columnCreditCardNo.MaxLength = 25
            Me.columnImageType.MaxLength = 50
            Me.columnvcRank.MaxLength = 50
            Me.columnFPJobDescription.MaxLength = 500
            Me.columnGuardianName.MaxLength = 50
            Me.columnGuardianNIC.MaxLength = 15
            Me.columnGuardianPhone.MaxLength = 20
            Me.columnGuardianAddress.MaxLength = 500
            Me.columnIsTechnical.AllowDBNull = false
            Me.columnvcRemarks.MaxLength = 500
            Me.columnvcPosting.MaxLength = 100
            Me.columnClerkEmpNo.MaxLength = 50
            Me.columnRecommendedByEmpNo1.MaxLength = 50
            Me.columnRecommendedByEmpNo2.MaxLength = 50
            Me.columnSanctionedByEmpNo.MaxLength = 50
            Me.columnGMEmpNo.MaxLength = 50
            Me.columnManagerEmpNo.MaxLength = 50
            Me.columnnSectionId.AllowDBNull = false
            Me.columnvcVehicleAccCode.AllowDBNull = false
            Me.columnvcVehicleAccCode.MaxLength = 50
            Me.columnvcMobileAccCode.AllowDBNull = false
            Me.columnvcMobileAccCode.MaxLength = 50
            Me.columnRoEmpNo.MaxLength = 50
            Me.columnSroEmpNo.MaxLength = 50
            Me.columnAttVerificationEmpNo1.MaxLength = 50
            Me.columnAttVerificationEmpNo2.MaxLength = 50
            Me.columnAttApprovingEmpNo.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewEM_EmployeeRow() As EM_EmployeeRow
            Return CType(Me.NewRow,EM_EmployeeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New EM_EmployeeRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(EM_EmployeeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.EM_EmployeeRowChangedEvent) Is Nothing) Then
                RaiseEvent EM_EmployeeRowChanged(Me, New EM_EmployeeRowChangeEvent(CType(e.Row,EM_EmployeeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.EM_EmployeeRowChangingEvent) Is Nothing) Then
                RaiseEvent EM_EmployeeRowChanging(Me, New EM_EmployeeRowChangeEvent(CType(e.Row,EM_EmployeeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.EM_EmployeeRowDeletedEvent) Is Nothing) Then
                RaiseEvent EM_EmployeeRowDeleted(Me, New EM_EmployeeRowChangeEvent(CType(e.Row,EM_EmployeeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.EM_EmployeeRowDeletingEvent) Is Nothing) Then
                RaiseEvent EM_EmployeeRowDeleting(Me, New EM_EmployeeRowChangeEvent(CType(e.Row,EM_EmployeeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveEM_EmployeeRow(ByVal row As EM_EmployeeRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsFCCL = New dsFCCL()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "EM_EmployeeDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class EM_Employee_AuditDataTable
        Inherits Global.System.Data.TypedTableBase(Of EM_Employee_AuditRow)
        
        Private columnvcAction As Global.System.Data.DataColumn
        
        Private columndtmActionDate As Global.System.Data.DataColumn
        
        Private columnvcUserId As Global.System.Data.DataColumn
        
        Private columnvcDocumentId As Global.System.Data.DataColumn
        
        Private columnvcWorkStation As Global.System.Data.DataColumn
        
        Private columnvcIP As Global.System.Data.DataColumn
        
        Private columnvcActionRemarks As Global.System.Data.DataColumn
        
        Private columnrowguid As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "EM_Employee_Audit"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property vcActionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvcAction
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dtmActionDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndtmActionDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property vcUserIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvcUserId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property vcDocumentIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvcDocumentId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property vcWorkStationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvcWorkStation
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property vcIPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvcIP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property vcActionRemarksColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvcActionRemarks
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property rowguidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrowguid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As EM_Employee_AuditRow
            Get
                Return CType(Me.Rows(index),EM_Employee_AuditRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event EM_Employee_AuditRowChanging As EM_Employee_AuditRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event EM_Employee_AuditRowChanged As EM_Employee_AuditRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event EM_Employee_AuditRowDeleting As EM_Employee_AuditRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event EM_Employee_AuditRowDeleted As EM_Employee_AuditRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddEM_Employee_AuditRow(ByVal row As EM_Employee_AuditRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddEM_Employee_AuditRow(ByVal vcAction As String, ByVal dtmActionDate As Date, ByVal vcUserId As String, ByVal vcDocumentId As String, ByVal vcWorkStation As String, ByVal vcIP As String, ByVal vcActionRemarks As String, ByVal rowguid As System.Guid) As EM_Employee_AuditRow
            Dim rowEM_Employee_AuditRow As EM_Employee_AuditRow = CType(Me.NewRow,EM_Employee_AuditRow)
            Dim columnValuesArray() As Object = New Object() {vcAction, dtmActionDate, vcUserId, vcDocumentId, vcWorkStation, vcIP, vcActionRemarks, rowguid}
            rowEM_Employee_AuditRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowEM_Employee_AuditRow)
            Return rowEM_Employee_AuditRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByvcActiondtmActionDatevcUserIdvcDocumentId(ByVal vcAction As String, ByVal dtmActionDate As Date, ByVal vcUserId As String, ByVal vcDocumentId As String) As EM_Employee_AuditRow
            Return CType(Me.Rows.Find(New Object() {vcAction, dtmActionDate, vcUserId, vcDocumentId}),EM_Employee_AuditRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As EM_Employee_AuditDataTable = CType(MyBase.Clone,EM_Employee_AuditDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New EM_Employee_AuditDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnvcAction = MyBase.Columns("vcAction")
            Me.columndtmActionDate = MyBase.Columns("dtmActionDate")
            Me.columnvcUserId = MyBase.Columns("vcUserId")
            Me.columnvcDocumentId = MyBase.Columns("vcDocumentId")
            Me.columnvcWorkStation = MyBase.Columns("vcWorkStation")
            Me.columnvcIP = MyBase.Columns("vcIP")
            Me.columnvcActionRemarks = MyBase.Columns("vcActionRemarks")
            Me.columnrowguid = MyBase.Columns("rowguid")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnvcAction = New Global.System.Data.DataColumn("vcAction", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvcAction)
            Me.columndtmActionDate = New Global.System.Data.DataColumn("dtmActionDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndtmActionDate)
            Me.columnvcUserId = New Global.System.Data.DataColumn("vcUserId", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvcUserId)
            Me.columnvcDocumentId = New Global.System.Data.DataColumn("vcDocumentId", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvcDocumentId)
            Me.columnvcWorkStation = New Global.System.Data.DataColumn("vcWorkStation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvcWorkStation)
            Me.columnvcIP = New Global.System.Data.DataColumn("vcIP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvcIP)
            Me.columnvcActionRemarks = New Global.System.Data.DataColumn("vcActionRemarks", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvcActionRemarks)
            Me.columnrowguid = New Global.System.Data.DataColumn("rowguid", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrowguid)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnvcAction, Me.columndtmActionDate, Me.columnvcUserId, Me.columnvcDocumentId}, true))
            Me.columnvcAction.AllowDBNull = false
            Me.columnvcAction.MaxLength = 100
            Me.columndtmActionDate.AllowDBNull = false
            Me.columnvcUserId.AllowDBNull = false
            Me.columnvcUserId.MaxLength = 50
            Me.columnvcDocumentId.AllowDBNull = false
            Me.columnvcDocumentId.MaxLength = 50
            Me.columnvcWorkStation.MaxLength = 100
            Me.columnvcIP.MaxLength = 50
            Me.columnvcActionRemarks.MaxLength = 1000
            Me.columnrowguid.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewEM_Employee_AuditRow() As EM_Employee_AuditRow
            Return CType(Me.NewRow,EM_Employee_AuditRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New EM_Employee_AuditRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(EM_Employee_AuditRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.EM_Employee_AuditRowChangedEvent) Is Nothing) Then
                RaiseEvent EM_Employee_AuditRowChanged(Me, New EM_Employee_AuditRowChangeEvent(CType(e.Row,EM_Employee_AuditRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.EM_Employee_AuditRowChangingEvent) Is Nothing) Then
                RaiseEvent EM_Employee_AuditRowChanging(Me, New EM_Employee_AuditRowChangeEvent(CType(e.Row,EM_Employee_AuditRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.EM_Employee_AuditRowDeletedEvent) Is Nothing) Then
                RaiseEvent EM_Employee_AuditRowDeleted(Me, New EM_Employee_AuditRowChangeEvent(CType(e.Row,EM_Employee_AuditRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.EM_Employee_AuditRowDeletingEvent) Is Nothing) Then
                RaiseEvent EM_Employee_AuditRowDeleting(Me, New EM_Employee_AuditRowChangeEvent(CType(e.Row,EM_Employee_AuditRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveEM_Employee_AuditRow(ByVal row As EM_Employee_AuditRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsFCCL = New dsFCCL()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "EM_Employee_AuditDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class HR_PRMBankDataTable
        Inherits Global.System.Data.TypedTableBase(Of HR_PRMBankRow)
        
        Private columnId As Global.System.Data.DataColumn
        
        Private columnDescription As Global.System.Data.DataColumn
        
        Private columnCountryId As Global.System.Data.DataColumn
        
        Private columnCityId As Global.System.Data.DataColumn
        
        Private columnAddress As Global.System.Data.DataColumn
        
        Private columnPhoneNo As Global.System.Data.DataColumn
        
        Private columnBusinessUnitId As Global.System.Data.DataColumn
        
        Private columnStatus As Global.System.Data.DataColumn
        
        Private columnrowguid As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "HR_PRMBank"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescription
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CountryIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCountryId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CityIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCityId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PhoneNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPhoneNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BusinessUnitIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBusinessUnitId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property StatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property rowguidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrowguid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As HR_PRMBankRow
            Get
                Return CType(Me.Rows(index),HR_PRMBankRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HR_PRMBankRowChanging As HR_PRMBankRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HR_PRMBankRowChanged As HR_PRMBankRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HR_PRMBankRowDeleting As HR_PRMBankRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HR_PRMBankRowDeleted As HR_PRMBankRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddHR_PRMBankRow(ByVal row As HR_PRMBankRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddHR_PRMBankRow(ByVal Description As String, ByVal CountryId As Integer, ByVal CityId As Integer, ByVal Address As String, ByVal PhoneNo As String, ByVal BusinessUnitId As Integer, ByVal Status As Boolean, ByVal rowguid As System.Guid) As HR_PRMBankRow
            Dim rowHR_PRMBankRow As HR_PRMBankRow = CType(Me.NewRow,HR_PRMBankRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Description, CountryId, CityId, Address, PhoneNo, BusinessUnitId, Status, rowguid}
            rowHR_PRMBankRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowHR_PRMBankRow)
            Return rowHR_PRMBankRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindById(ByVal Id As Long) As HR_PRMBankRow
            Return CType(Me.Rows.Find(New Object() {Id}),HR_PRMBankRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As HR_PRMBankDataTable = CType(MyBase.Clone,HR_PRMBankDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New HR_PRMBankDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnId = MyBase.Columns("Id")
            Me.columnDescription = MyBase.Columns("Description")
            Me.columnCountryId = MyBase.Columns("CountryId")
            Me.columnCityId = MyBase.Columns("CityId")
            Me.columnAddress = MyBase.Columns("Address")
            Me.columnPhoneNo = MyBase.Columns("PhoneNo")
            Me.columnBusinessUnitId = MyBase.Columns("BusinessUnitId")
            Me.columnStatus = MyBase.Columns("Status")
            Me.columnrowguid = MyBase.Columns("rowguid")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId)
            Me.columnDescription = New Global.System.Data.DataColumn("Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescription)
            Me.columnCountryId = New Global.System.Data.DataColumn("CountryId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCountryId)
            Me.columnCityId = New Global.System.Data.DataColumn("CityId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCityId)
            Me.columnAddress = New Global.System.Data.DataColumn("Address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAddress)
            Me.columnPhoneNo = New Global.System.Data.DataColumn("PhoneNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPhoneNo)
            Me.columnBusinessUnitId = New Global.System.Data.DataColumn("BusinessUnitId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBusinessUnitId)
            Me.columnStatus = New Global.System.Data.DataColumn("Status", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatus)
            Me.columnrowguid = New Global.System.Data.DataColumn("rowguid", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrowguid)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnId}, true))
            Me.columnId.AutoIncrement = true
            Me.columnId.AutoIncrementSeed = -1
            Me.columnId.AutoIncrementStep = -1
            Me.columnId.AllowDBNull = false
            Me.columnId.ReadOnly = true
            Me.columnId.Unique = true
            Me.columnDescription.AllowDBNull = false
            Me.columnDescription.MaxLength = 500
            Me.columnAddress.AllowDBNull = false
            Me.columnAddress.MaxLength = 500
            Me.columnPhoneNo.AllowDBNull = false
            Me.columnPhoneNo.MaxLength = 20
            Me.columnBusinessUnitId.AllowDBNull = false
            Me.columnStatus.AllowDBNull = false
            Me.columnrowguid.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewHR_PRMBankRow() As HR_PRMBankRow
            Return CType(Me.NewRow,HR_PRMBankRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New HR_PRMBankRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(HR_PRMBankRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.HR_PRMBankRowChangedEvent) Is Nothing) Then
                RaiseEvent HR_PRMBankRowChanged(Me, New HR_PRMBankRowChangeEvent(CType(e.Row,HR_PRMBankRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.HR_PRMBankRowChangingEvent) Is Nothing) Then
                RaiseEvent HR_PRMBankRowChanging(Me, New HR_PRMBankRowChangeEvent(CType(e.Row,HR_PRMBankRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.HR_PRMBankRowDeletedEvent) Is Nothing) Then
                RaiseEvent HR_PRMBankRowDeleted(Me, New HR_PRMBankRowChangeEvent(CType(e.Row,HR_PRMBankRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.HR_PRMBankRowDeletingEvent) Is Nothing) Then
                RaiseEvent HR_PRMBankRowDeleting(Me, New HR_PRMBankRowChangeEvent(CType(e.Row,HR_PRMBankRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveHR_PRMBankRow(ByVal row As HR_PRMBankRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsFCCL = New dsFCCL()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "HR_PRMBankDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class HR_PRMBranchDataTable
        Inherits Global.System.Data.TypedTableBase(Of HR_PRMBranchRow)
        
        Private columnId As Global.System.Data.DataColumn
        
        Private columnBusinessUnitId As Global.System.Data.DataColumn
        
        Private columnBranchName As Global.System.Data.DataColumn
        
        Private columnAbbreviation As Global.System.Data.DataColumn
        
        Private columnParentBranchId As Global.System.Data.DataColumn
        
        Private columnPostalAddress As Global.System.Data.DataColumn
        
        Private columnWebAddress As Global.System.Data.DataColumn
        
        Private columnRemarks As Global.System.Data.DataColumn
        
        Private columnStatus As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "HR_PRMBranch"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BusinessUnitIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBusinessUnitId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BranchNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBranchName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AbbreviationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAbbreviation
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ParentBranchIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnParentBranchId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PostalAddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPostalAddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WebAddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWebAddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RemarksColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRemarks
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property StatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As HR_PRMBranchRow
            Get
                Return CType(Me.Rows(index),HR_PRMBranchRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HR_PRMBranchRowChanging As HR_PRMBranchRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HR_PRMBranchRowChanged As HR_PRMBranchRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HR_PRMBranchRowDeleting As HR_PRMBranchRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HR_PRMBranchRowDeleted As HR_PRMBranchRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddHR_PRMBranchRow(ByVal row As HR_PRMBranchRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddHR_PRMBranchRow(ByVal Id As Long, ByVal BusinessUnitId As Integer, ByVal BranchName As String, ByVal Abbreviation As String, ByVal ParentBranchId As Long, ByVal PostalAddress As String, ByVal WebAddress As String, ByVal Remarks As String, ByVal Status As Boolean) As HR_PRMBranchRow
            Dim rowHR_PRMBranchRow As HR_PRMBranchRow = CType(Me.NewRow,HR_PRMBranchRow)
            Dim columnValuesArray() As Object = New Object() {Id, BusinessUnitId, BranchName, Abbreviation, ParentBranchId, PostalAddress, WebAddress, Remarks, Status}
            rowHR_PRMBranchRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowHR_PRMBranchRow)
            Return rowHR_PRMBranchRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindById(ByVal Id As Long) As HR_PRMBranchRow
            Return CType(Me.Rows.Find(New Object() {Id}),HR_PRMBranchRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As HR_PRMBranchDataTable = CType(MyBase.Clone,HR_PRMBranchDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New HR_PRMBranchDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnId = MyBase.Columns("Id")
            Me.columnBusinessUnitId = MyBase.Columns("BusinessUnitId")
            Me.columnBranchName = MyBase.Columns("BranchName")
            Me.columnAbbreviation = MyBase.Columns("Abbreviation")
            Me.columnParentBranchId = MyBase.Columns("ParentBranchId")
            Me.columnPostalAddress = MyBase.Columns("PostalAddress")
            Me.columnWebAddress = MyBase.Columns("WebAddress")
            Me.columnRemarks = MyBase.Columns("Remarks")
            Me.columnStatus = MyBase.Columns("Status")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId)
            Me.columnBusinessUnitId = New Global.System.Data.DataColumn("BusinessUnitId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBusinessUnitId)
            Me.columnBranchName = New Global.System.Data.DataColumn("BranchName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBranchName)
            Me.columnAbbreviation = New Global.System.Data.DataColumn("Abbreviation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAbbreviation)
            Me.columnParentBranchId = New Global.System.Data.DataColumn("ParentBranchId", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnParentBranchId)
            Me.columnPostalAddress = New Global.System.Data.DataColumn("PostalAddress", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPostalAddress)
            Me.columnWebAddress = New Global.System.Data.DataColumn("WebAddress", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWebAddress)
            Me.columnRemarks = New Global.System.Data.DataColumn("Remarks", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRemarks)
            Me.columnStatus = New Global.System.Data.DataColumn("Status", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatus)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnId}, true))
            Me.columnId.AllowDBNull = false
            Me.columnId.Unique = true
            Me.columnBusinessUnitId.AllowDBNull = false
            Me.columnBranchName.AllowDBNull = false
            Me.columnBranchName.MaxLength = 100
            Me.columnAbbreviation.MaxLength = 10
            Me.columnPostalAddress.MaxLength = 100
            Me.columnWebAddress.MaxLength = 100
            Me.columnRemarks.MaxLength = 1000
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewHR_PRMBranchRow() As HR_PRMBranchRow
            Return CType(Me.NewRow,HR_PRMBranchRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New HR_PRMBranchRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(HR_PRMBranchRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.HR_PRMBranchRowChangedEvent) Is Nothing) Then
                RaiseEvent HR_PRMBranchRowChanged(Me, New HR_PRMBranchRowChangeEvent(CType(e.Row,HR_PRMBranchRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.HR_PRMBranchRowChangingEvent) Is Nothing) Then
                RaiseEvent HR_PRMBranchRowChanging(Me, New HR_PRMBranchRowChangeEvent(CType(e.Row,HR_PRMBranchRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.HR_PRMBranchRowDeletedEvent) Is Nothing) Then
                RaiseEvent HR_PRMBranchRowDeleted(Me, New HR_PRMBranchRowChangeEvent(CType(e.Row,HR_PRMBranchRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.HR_PRMBranchRowDeletingEvent) Is Nothing) Then
                RaiseEvent HR_PRMBranchRowDeleting(Me, New HR_PRMBranchRowChangeEvent(CType(e.Row,HR_PRMBranchRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveHR_PRMBranchRow(ByVal row As HR_PRMBranchRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsFCCL = New dsFCCL()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "HR_PRMBranchDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class HR_PRMBusinessUnitDataTable
        Inherits Global.System.Data.TypedTableBase(Of HR_PRMBusinessUnitRow)
        
        Private columnId As Global.System.Data.DataColumn
        
        Private columnOrganizationName As Global.System.Data.DataColumn
        
        Private columnAbbreviation As Global.System.Data.DataColumn
        
        Private columnParentOrganizationId As Global.System.Data.DataColumn
        
        Private columnManagingOrganizationId As Global.System.Data.DataColumn
        
        Private columnPostalAddress As Global.System.Data.DataColumn
        
        Private columnWebAddress As Global.System.Data.DataColumn
        
        Private columnRemarks As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "HR_PRMBusinessUnit"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OrganizationNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOrganizationName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AbbreviationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAbbreviation
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ParentOrganizationIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnParentOrganizationId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ManagingOrganizationIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnManagingOrganizationId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PostalAddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPostalAddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WebAddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWebAddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RemarksColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRemarks
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As HR_PRMBusinessUnitRow
            Get
                Return CType(Me.Rows(index),HR_PRMBusinessUnitRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HR_PRMBusinessUnitRowChanging As HR_PRMBusinessUnitRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HR_PRMBusinessUnitRowChanged As HR_PRMBusinessUnitRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HR_PRMBusinessUnitRowDeleting As HR_PRMBusinessUnitRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HR_PRMBusinessUnitRowDeleted As HR_PRMBusinessUnitRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddHR_PRMBusinessUnitRow(ByVal row As HR_PRMBusinessUnitRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddHR_PRMBusinessUnitRow(ByVal Id As Integer, ByVal OrganizationName As String, ByVal Abbreviation As String, ByVal ParentOrganizationId As Integer, ByVal ManagingOrganizationId As Integer, ByVal PostalAddress As String, ByVal WebAddress As String, ByVal Remarks As String) As HR_PRMBusinessUnitRow
            Dim rowHR_PRMBusinessUnitRow As HR_PRMBusinessUnitRow = CType(Me.NewRow,HR_PRMBusinessUnitRow)
            Dim columnValuesArray() As Object = New Object() {Id, OrganizationName, Abbreviation, ParentOrganizationId, ManagingOrganizationId, PostalAddress, WebAddress, Remarks}
            rowHR_PRMBusinessUnitRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowHR_PRMBusinessUnitRow)
            Return rowHR_PRMBusinessUnitRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindById(ByVal Id As Integer) As HR_PRMBusinessUnitRow
            Return CType(Me.Rows.Find(New Object() {Id}),HR_PRMBusinessUnitRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As HR_PRMBusinessUnitDataTable = CType(MyBase.Clone,HR_PRMBusinessUnitDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New HR_PRMBusinessUnitDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnId = MyBase.Columns("Id")
            Me.columnOrganizationName = MyBase.Columns("OrganizationName")
            Me.columnAbbreviation = MyBase.Columns("Abbreviation")
            Me.columnParentOrganizationId = MyBase.Columns("ParentOrganizationId")
            Me.columnManagingOrganizationId = MyBase.Columns("ManagingOrganizationId")
            Me.columnPostalAddress = MyBase.Columns("PostalAddress")
            Me.columnWebAddress = MyBase.Columns("WebAddress")
            Me.columnRemarks = MyBase.Columns("Remarks")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId)
            Me.columnOrganizationName = New Global.System.Data.DataColumn("OrganizationName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOrganizationName)
            Me.columnAbbreviation = New Global.System.Data.DataColumn("Abbreviation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAbbreviation)
            Me.columnParentOrganizationId = New Global.System.Data.DataColumn("ParentOrganizationId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnParentOrganizationId)
            Me.columnManagingOrganizationId = New Global.System.Data.DataColumn("ManagingOrganizationId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnManagingOrganizationId)
            Me.columnPostalAddress = New Global.System.Data.DataColumn("PostalAddress", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPostalAddress)
            Me.columnWebAddress = New Global.System.Data.DataColumn("WebAddress", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWebAddress)
            Me.columnRemarks = New Global.System.Data.DataColumn("Remarks", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRemarks)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnId}, true))
            Me.columnId.AllowDBNull = false
            Me.columnId.Unique = true
            Me.columnOrganizationName.AllowDBNull = false
            Me.columnOrganizationName.MaxLength = 100
            Me.columnAbbreviation.AllowDBNull = false
            Me.columnAbbreviation.MaxLength = 10
            Me.columnPostalAddress.MaxLength = 100
            Me.columnWebAddress.MaxLength = 100
            Me.columnRemarks.MaxLength = 1000
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewHR_PRMBusinessUnitRow() As HR_PRMBusinessUnitRow
            Return CType(Me.NewRow,HR_PRMBusinessUnitRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New HR_PRMBusinessUnitRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(HR_PRMBusinessUnitRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.HR_PRMBusinessUnitRowChangedEvent) Is Nothing) Then
                RaiseEvent HR_PRMBusinessUnitRowChanged(Me, New HR_PRMBusinessUnitRowChangeEvent(CType(e.Row,HR_PRMBusinessUnitRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.HR_PRMBusinessUnitRowChangingEvent) Is Nothing) Then
                RaiseEvent HR_PRMBusinessUnitRowChanging(Me, New HR_PRMBusinessUnitRowChangeEvent(CType(e.Row,HR_PRMBusinessUnitRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.HR_PRMBusinessUnitRowDeletedEvent) Is Nothing) Then
                RaiseEvent HR_PRMBusinessUnitRowDeleted(Me, New HR_PRMBusinessUnitRowChangeEvent(CType(e.Row,HR_PRMBusinessUnitRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.HR_PRMBusinessUnitRowDeletingEvent) Is Nothing) Then
                RaiseEvent HR_PRMBusinessUnitRowDeleting(Me, New HR_PRMBusinessUnitRowChangeEvent(CType(e.Row,HR_PRMBusinessUnitRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveHR_PRMBusinessUnitRow(ByVal row As HR_PRMBusinessUnitRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsFCCL = New dsFCCL()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "HR_PRMBusinessUnitDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class HR_PRMCityDataTable
        Inherits Global.System.Data.TypedTableBase(Of HR_PRMCityRow)
        
        Private columnId As Global.System.Data.DataColumn
        
        Private columnDescription As Global.System.Data.DataColumn
        
        Private columnStatus As Global.System.Data.DataColumn
        
        Private columnCountryId As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "HR_PRMCity"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescription
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property StatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CountryIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCountryId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As HR_PRMCityRow
            Get
                Return CType(Me.Rows(index),HR_PRMCityRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HR_PRMCityRowChanging As HR_PRMCityRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HR_PRMCityRowChanged As HR_PRMCityRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HR_PRMCityRowDeleting As HR_PRMCityRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HR_PRMCityRowDeleted As HR_PRMCityRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddHR_PRMCityRow(ByVal row As HR_PRMCityRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddHR_PRMCityRow(ByVal Id As Integer, ByVal Description As String, ByVal Status As Boolean, ByVal CountryId As Integer) As HR_PRMCityRow
            Dim rowHR_PRMCityRow As HR_PRMCityRow = CType(Me.NewRow,HR_PRMCityRow)
            Dim columnValuesArray() As Object = New Object() {Id, Description, Status, CountryId}
            rowHR_PRMCityRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowHR_PRMCityRow)
            Return rowHR_PRMCityRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindById(ByVal Id As Integer) As HR_PRMCityRow
            Return CType(Me.Rows.Find(New Object() {Id}),HR_PRMCityRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As HR_PRMCityDataTable = CType(MyBase.Clone,HR_PRMCityDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New HR_PRMCityDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnId = MyBase.Columns("Id")
            Me.columnDescription = MyBase.Columns("Description")
            Me.columnStatus = MyBase.Columns("Status")
            Me.columnCountryId = MyBase.Columns("CountryId")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId)
            Me.columnDescription = New Global.System.Data.DataColumn("Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescription)
            Me.columnStatus = New Global.System.Data.DataColumn("Status", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatus)
            Me.columnCountryId = New Global.System.Data.DataColumn("CountryId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCountryId)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnId}, true))
            Me.columnId.AllowDBNull = false
            Me.columnId.Unique = true
            Me.columnDescription.AllowDBNull = false
            Me.columnDescription.MaxLength = 100
            Me.columnStatus.AllowDBNull = false
            Me.columnCountryId.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewHR_PRMCityRow() As HR_PRMCityRow
            Return CType(Me.NewRow,HR_PRMCityRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New HR_PRMCityRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(HR_PRMCityRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.HR_PRMCityRowChangedEvent) Is Nothing) Then
                RaiseEvent HR_PRMCityRowChanged(Me, New HR_PRMCityRowChangeEvent(CType(e.Row,HR_PRMCityRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.HR_PRMCityRowChangingEvent) Is Nothing) Then
                RaiseEvent HR_PRMCityRowChanging(Me, New HR_PRMCityRowChangeEvent(CType(e.Row,HR_PRMCityRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.HR_PRMCityRowDeletedEvent) Is Nothing) Then
                RaiseEvent HR_PRMCityRowDeleted(Me, New HR_PRMCityRowChangeEvent(CType(e.Row,HR_PRMCityRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.HR_PRMCityRowDeletingEvent) Is Nothing) Then
                RaiseEvent HR_PRMCityRowDeleting(Me, New HR_PRMCityRowChangeEvent(CType(e.Row,HR_PRMCityRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveHR_PRMCityRow(ByVal row As HR_PRMCityRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsFCCL = New dsFCCL()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "HR_PRMCityDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class HR_PRMDEGREEDataTable
        Inherits Global.System.Data.TypedTableBase(Of HR_PRMDEGREERow)
        
        Private columnId As Global.System.Data.DataColumn
        
        Private columnSTATUS As Global.System.Data.DataColumn
        
        Private columnDescription As Global.System.Data.DataColumn
        
        Private columnPARA_Type As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "HR_PRMDEGREE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescription
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PARA_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPARA_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As HR_PRMDEGREERow
            Get
                Return CType(Me.Rows(index),HR_PRMDEGREERow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HR_PRMDEGREERowChanging As HR_PRMDEGREERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HR_PRMDEGREERowChanged As HR_PRMDEGREERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HR_PRMDEGREERowDeleting As HR_PRMDEGREERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HR_PRMDEGREERowDeleted As HR_PRMDEGREERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddHR_PRMDEGREERow(ByVal row As HR_PRMDEGREERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddHR_PRMDEGREERow(ByVal Id As Integer, ByVal STATUS As String, ByVal Description As String, ByVal PARA_Type As Byte) As HR_PRMDEGREERow
            Dim rowHR_PRMDEGREERow As HR_PRMDEGREERow = CType(Me.NewRow,HR_PRMDEGREERow)
            Dim columnValuesArray() As Object = New Object() {Id, STATUS, Description, PARA_Type}
            rowHR_PRMDEGREERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowHR_PRMDEGREERow)
            Return rowHR_PRMDEGREERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As HR_PRMDEGREEDataTable = CType(MyBase.Clone,HR_PRMDEGREEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New HR_PRMDEGREEDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnId = MyBase.Columns("Id")
            Me.columnSTATUS = MyBase.Columns("STATUS")
            Me.columnDescription = MyBase.Columns("Description")
            Me.columnPARA_Type = MyBase.Columns("PARA_Type")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId)
            Me.columnSTATUS = New Global.System.Data.DataColumn("STATUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTATUS)
            Me.columnDescription = New Global.System.Data.DataColumn("Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescription)
            Me.columnPARA_Type = New Global.System.Data.DataColumn("PARA_Type", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPARA_Type)
            Me.columnId.AllowDBNull = false
            Me.columnSTATUS.MaxLength = 1
            Me.columnDescription.AllowDBNull = false
            Me.columnDescription.MaxLength = 100
            Me.columnPARA_Type.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewHR_PRMDEGREERow() As HR_PRMDEGREERow
            Return CType(Me.NewRow,HR_PRMDEGREERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New HR_PRMDEGREERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(HR_PRMDEGREERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.HR_PRMDEGREERowChangedEvent) Is Nothing) Then
                RaiseEvent HR_PRMDEGREERowChanged(Me, New HR_PRMDEGREERowChangeEvent(CType(e.Row,HR_PRMDEGREERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.HR_PRMDEGREERowChangingEvent) Is Nothing) Then
                RaiseEvent HR_PRMDEGREERowChanging(Me, New HR_PRMDEGREERowChangeEvent(CType(e.Row,HR_PRMDEGREERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.HR_PRMDEGREERowDeletedEvent) Is Nothing) Then
                RaiseEvent HR_PRMDEGREERowDeleted(Me, New HR_PRMDEGREERowChangeEvent(CType(e.Row,HR_PRMDEGREERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.HR_PRMDEGREERowDeletingEvent) Is Nothing) Then
                RaiseEvent HR_PRMDEGREERowDeleting(Me, New HR_PRMDEGREERowChangeEvent(CType(e.Row,HR_PRMDEGREERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveHR_PRMDEGREERow(ByVal row As HR_PRMDEGREERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsFCCL = New dsFCCL()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "HR_PRMDEGREEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class HR_PRMDepartmentsDataTable
        Inherits Global.System.Data.TypedTableBase(Of HR_PRMDepartmentsRow)
        
        Private columnId As Global.System.Data.DataColumn
        
        Private columnDescription As Global.System.Data.DataColumn
        
        Private columnBusinessUnitId As Global.System.Data.DataColumn
        
        Private columnBranchId As Global.System.Data.DataColumn
        
        Private columnStatus As Global.System.Data.DataColumn
        
        Private columnParentNameId As Global.System.Data.DataColumn
        
        Private columnAbbreviation As Global.System.Data.DataColumn
        
        Private columnnLocationId As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "HR_PRMDepartments"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescription
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BusinessUnitIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBusinessUnitId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BranchIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBranchId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property StatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ParentNameIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnParentNameId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AbbreviationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAbbreviation
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property nLocationIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnLocationId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As HR_PRMDepartmentsRow
            Get
                Return CType(Me.Rows(index),HR_PRMDepartmentsRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HR_PRMDepartmentsRowChanging As HR_PRMDepartmentsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HR_PRMDepartmentsRowChanged As HR_PRMDepartmentsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HR_PRMDepartmentsRowDeleting As HR_PRMDepartmentsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HR_PRMDepartmentsRowDeleted As HR_PRMDepartmentsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddHR_PRMDepartmentsRow(ByVal row As HR_PRMDepartmentsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddHR_PRMDepartmentsRow(ByVal Id As Long, ByVal Description As String, ByVal BusinessUnitId As Integer, ByVal BranchId As Integer, ByVal Status As Boolean, ByVal ParentNameId As Integer, ByVal Abbreviation As String, ByVal nLocationId As Integer) As HR_PRMDepartmentsRow
            Dim rowHR_PRMDepartmentsRow As HR_PRMDepartmentsRow = CType(Me.NewRow,HR_PRMDepartmentsRow)
            Dim columnValuesArray() As Object = New Object() {Id, Description, BusinessUnitId, BranchId, Status, ParentNameId, Abbreviation, nLocationId}
            rowHR_PRMDepartmentsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowHR_PRMDepartmentsRow)
            Return rowHR_PRMDepartmentsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindById(ByVal Id As Long) As HR_PRMDepartmentsRow
            Return CType(Me.Rows.Find(New Object() {Id}),HR_PRMDepartmentsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As HR_PRMDepartmentsDataTable = CType(MyBase.Clone,HR_PRMDepartmentsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New HR_PRMDepartmentsDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnId = MyBase.Columns("Id")
            Me.columnDescription = MyBase.Columns("Description")
            Me.columnBusinessUnitId = MyBase.Columns("BusinessUnitId")
            Me.columnBranchId = MyBase.Columns("BranchId")
            Me.columnStatus = MyBase.Columns("Status")
            Me.columnParentNameId = MyBase.Columns("ParentNameId")
            Me.columnAbbreviation = MyBase.Columns("Abbreviation")
            Me.columnnLocationId = MyBase.Columns("nLocationId")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId)
            Me.columnDescription = New Global.System.Data.DataColumn("Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescription)
            Me.columnBusinessUnitId = New Global.System.Data.DataColumn("BusinessUnitId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBusinessUnitId)
            Me.columnBranchId = New Global.System.Data.DataColumn("BranchId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBranchId)
            Me.columnStatus = New Global.System.Data.DataColumn("Status", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatus)
            Me.columnParentNameId = New Global.System.Data.DataColumn("ParentNameId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnParentNameId)
            Me.columnAbbreviation = New Global.System.Data.DataColumn("Abbreviation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAbbreviation)
            Me.columnnLocationId = New Global.System.Data.DataColumn("nLocationId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnLocationId)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnId}, true))
            Me.columnId.AllowDBNull = false
            Me.columnId.Unique = true
            Me.columnDescription.MaxLength = 100
            Me.columnAbbreviation.MaxLength = 10
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewHR_PRMDepartmentsRow() As HR_PRMDepartmentsRow
            Return CType(Me.NewRow,HR_PRMDepartmentsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New HR_PRMDepartmentsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(HR_PRMDepartmentsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.HR_PRMDepartmentsRowChangedEvent) Is Nothing) Then
                RaiseEvent HR_PRMDepartmentsRowChanged(Me, New HR_PRMDepartmentsRowChangeEvent(CType(e.Row,HR_PRMDepartmentsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.HR_PRMDepartmentsRowChangingEvent) Is Nothing) Then
                RaiseEvent HR_PRMDepartmentsRowChanging(Me, New HR_PRMDepartmentsRowChangeEvent(CType(e.Row,HR_PRMDepartmentsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.HR_PRMDepartmentsRowDeletedEvent) Is Nothing) Then
                RaiseEvent HR_PRMDepartmentsRowDeleted(Me, New HR_PRMDepartmentsRowChangeEvent(CType(e.Row,HR_PRMDepartmentsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.HR_PRMDepartmentsRowDeletingEvent) Is Nothing) Then
                RaiseEvent HR_PRMDepartmentsRowDeleting(Me, New HR_PRMDepartmentsRowChangeEvent(CType(e.Row,HR_PRMDepartmentsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveHR_PRMDepartmentsRow(ByVal row As HR_PRMDepartmentsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsFCCL = New dsFCCL()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "HR_PRMDepartmentsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class HR_PRMGradesDataTable
        Inherits Global.System.Data.TypedTableBase(Of HR_PRMGradesRow)
        
        Private columnId As Global.System.Data.DataColumn
        
        Private columnGradeNo As Global.System.Data.DataColumn
        
        Private columnEmployeeTypeId As Global.System.Data.DataColumn
        
        Private columnAbreviation As Global.System.Data.DataColumn
        
        Private columnDescription As Global.System.Data.DataColumn
        
        Private columnBasicPay As Global.System.Data.DataColumn
        
        Private columnSubScales As Global.System.Data.DataColumn
        
        Private columnLevelId As Global.System.Data.DataColumn
        
        Private columnBusinessUnitId As Global.System.Data.DataColumn
        
        Private columnLast_Modification_Date As Global.System.Data.DataColumn
        
        Private columnEffectiveFrom As Global.System.Data.DataColumn
        
        Private columnScaleValue As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "HR_PRMGrades"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GradeNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGradeNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EmployeeTypeIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmployeeTypeId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AbreviationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAbreviation
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescription
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BasicPayColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBasicPay
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SubScalesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubScales
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LevelIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLevelId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BusinessUnitIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBusinessUnitId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Last_Modification_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLast_Modification_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EffectiveFromColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEffectiveFrom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ScaleValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnScaleValue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As HR_PRMGradesRow
            Get
                Return CType(Me.Rows(index),HR_PRMGradesRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HR_PRMGradesRowChanging As HR_PRMGradesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HR_PRMGradesRowChanged As HR_PRMGradesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HR_PRMGradesRowDeleting As HR_PRMGradesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HR_PRMGradesRowDeleted As HR_PRMGradesRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddHR_PRMGradesRow(ByVal row As HR_PRMGradesRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddHR_PRMGradesRow(ByVal Id As Long, ByVal GradeNo As String, ByVal EmployeeTypeId As Integer, ByVal Abreviation As String, ByVal Description As String, ByVal BasicPay As Decimal, ByVal SubScales As Short, ByVal LevelId As Integer, ByVal BusinessUnitId As Integer, ByVal Last_Modification_Date As Date, ByVal EffectiveFrom As Date, ByVal ScaleValue As Decimal) As HR_PRMGradesRow
            Dim rowHR_PRMGradesRow As HR_PRMGradesRow = CType(Me.NewRow,HR_PRMGradesRow)
            Dim columnValuesArray() As Object = New Object() {Id, GradeNo, EmployeeTypeId, Abreviation, Description, BasicPay, SubScales, LevelId, BusinessUnitId, Last_Modification_Date, EffectiveFrom, ScaleValue}
            rowHR_PRMGradesRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowHR_PRMGradesRow)
            Return rowHR_PRMGradesRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindById(ByVal Id As Long) As HR_PRMGradesRow
            Return CType(Me.Rows.Find(New Object() {Id}),HR_PRMGradesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As HR_PRMGradesDataTable = CType(MyBase.Clone,HR_PRMGradesDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New HR_PRMGradesDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnId = MyBase.Columns("Id")
            Me.columnGradeNo = MyBase.Columns("GradeNo")
            Me.columnEmployeeTypeId = MyBase.Columns("EmployeeTypeId")
            Me.columnAbreviation = MyBase.Columns("Abreviation")
            Me.columnDescription = MyBase.Columns("Description")
            Me.columnBasicPay = MyBase.Columns("BasicPay")
            Me.columnSubScales = MyBase.Columns("SubScales")
            Me.columnLevelId = MyBase.Columns("LevelId")
            Me.columnBusinessUnitId = MyBase.Columns("BusinessUnitId")
            Me.columnLast_Modification_Date = MyBase.Columns("Last_Modification_Date")
            Me.columnEffectiveFrom = MyBase.Columns("EffectiveFrom")
            Me.columnScaleValue = MyBase.Columns("ScaleValue")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId)
            Me.columnGradeNo = New Global.System.Data.DataColumn("GradeNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGradeNo)
            Me.columnEmployeeTypeId = New Global.System.Data.DataColumn("EmployeeTypeId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmployeeTypeId)
            Me.columnAbreviation = New Global.System.Data.DataColumn("Abreviation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAbreviation)
            Me.columnDescription = New Global.System.Data.DataColumn("Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescription)
            Me.columnBasicPay = New Global.System.Data.DataColumn("BasicPay", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBasicPay)
            Me.columnSubScales = New Global.System.Data.DataColumn("SubScales", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubScales)
            Me.columnLevelId = New Global.System.Data.DataColumn("LevelId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLevelId)
            Me.columnBusinessUnitId = New Global.System.Data.DataColumn("BusinessUnitId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBusinessUnitId)
            Me.columnLast_Modification_Date = New Global.System.Data.DataColumn("Last_Modification_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLast_Modification_Date)
            Me.columnEffectiveFrom = New Global.System.Data.DataColumn("EffectiveFrom", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEffectiveFrom)
            Me.columnScaleValue = New Global.System.Data.DataColumn("ScaleValue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScaleValue)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnId}, true))
            Me.columnId.AllowDBNull = false
            Me.columnId.Unique = true
            Me.columnGradeNo.AllowDBNull = false
            Me.columnGradeNo.MaxLength = 10
            Me.columnEmployeeTypeId.AllowDBNull = false
            Me.columnAbreviation.AllowDBNull = false
            Me.columnAbreviation.MaxLength = 50
            Me.columnDescription.AllowDBNull = false
            Me.columnDescription.MaxLength = 50
            Me.columnSubScales.AllowDBNull = false
            Me.columnLast_Modification_Date.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewHR_PRMGradesRow() As HR_PRMGradesRow
            Return CType(Me.NewRow,HR_PRMGradesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New HR_PRMGradesRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(HR_PRMGradesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.HR_PRMGradesRowChangedEvent) Is Nothing) Then
                RaiseEvent HR_PRMGradesRowChanged(Me, New HR_PRMGradesRowChangeEvent(CType(e.Row,HR_PRMGradesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.HR_PRMGradesRowChangingEvent) Is Nothing) Then
                RaiseEvent HR_PRMGradesRowChanging(Me, New HR_PRMGradesRowChangeEvent(CType(e.Row,HR_PRMGradesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.HR_PRMGradesRowDeletedEvent) Is Nothing) Then
                RaiseEvent HR_PRMGradesRowDeleted(Me, New HR_PRMGradesRowChangeEvent(CType(e.Row,HR_PRMGradesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.HR_PRMGradesRowDeletingEvent) Is Nothing) Then
                RaiseEvent HR_PRMGradesRowDeleting(Me, New HR_PRMGradesRowChangeEvent(CType(e.Row,HR_PRMGradesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveHR_PRMGradesRow(ByVal row As HR_PRMGradesRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsFCCL = New dsFCCL()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "HR_PRMGradesDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class HR_PRMGradeScaleDataTable
        Inherits Global.System.Data.TypedTableBase(Of HR_PRMGradeScaleRow)
        
        Private columnGradeId As Global.System.Data.DataColumn
        
        Private columnScaleIndex As Global.System.Data.DataColumn
        
        Private columnScaleAmount As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "HR_PRMGradeScale"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GradeIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGradeId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ScaleIndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnScaleIndex
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ScaleAmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnScaleAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As HR_PRMGradeScaleRow
            Get
                Return CType(Me.Rows(index),HR_PRMGradeScaleRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HR_PRMGradeScaleRowChanging As HR_PRMGradeScaleRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HR_PRMGradeScaleRowChanged As HR_PRMGradeScaleRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HR_PRMGradeScaleRowDeleting As HR_PRMGradeScaleRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HR_PRMGradeScaleRowDeleted As HR_PRMGradeScaleRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddHR_PRMGradeScaleRow(ByVal row As HR_PRMGradeScaleRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddHR_PRMGradeScaleRow(ByVal GradeId As Long, ByVal ScaleIndex As Short, ByVal ScaleAmount As Decimal) As HR_PRMGradeScaleRow
            Dim rowHR_PRMGradeScaleRow As HR_PRMGradeScaleRow = CType(Me.NewRow,HR_PRMGradeScaleRow)
            Dim columnValuesArray() As Object = New Object() {GradeId, ScaleIndex, ScaleAmount}
            rowHR_PRMGradeScaleRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowHR_PRMGradeScaleRow)
            Return rowHR_PRMGradeScaleRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByGradeIdScaleIndex(ByVal GradeId As Long, ByVal ScaleIndex As Short) As HR_PRMGradeScaleRow
            Return CType(Me.Rows.Find(New Object() {GradeId, ScaleIndex}),HR_PRMGradeScaleRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As HR_PRMGradeScaleDataTable = CType(MyBase.Clone,HR_PRMGradeScaleDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New HR_PRMGradeScaleDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnGradeId = MyBase.Columns("GradeId")
            Me.columnScaleIndex = MyBase.Columns("ScaleIndex")
            Me.columnScaleAmount = MyBase.Columns("ScaleAmount")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnGradeId = New Global.System.Data.DataColumn("GradeId", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGradeId)
            Me.columnScaleIndex = New Global.System.Data.DataColumn("ScaleIndex", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScaleIndex)
            Me.columnScaleAmount = New Global.System.Data.DataColumn("ScaleAmount", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScaleAmount)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnGradeId, Me.columnScaleIndex}, true))
            Me.columnGradeId.AllowDBNull = false
            Me.columnScaleIndex.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewHR_PRMGradeScaleRow() As HR_PRMGradeScaleRow
            Return CType(Me.NewRow,HR_PRMGradeScaleRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New HR_PRMGradeScaleRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(HR_PRMGradeScaleRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.HR_PRMGradeScaleRowChangedEvent) Is Nothing) Then
                RaiseEvent HR_PRMGradeScaleRowChanged(Me, New HR_PRMGradeScaleRowChangeEvent(CType(e.Row,HR_PRMGradeScaleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.HR_PRMGradeScaleRowChangingEvent) Is Nothing) Then
                RaiseEvent HR_PRMGradeScaleRowChanging(Me, New HR_PRMGradeScaleRowChangeEvent(CType(e.Row,HR_PRMGradeScaleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.HR_PRMGradeScaleRowDeletedEvent) Is Nothing) Then
                RaiseEvent HR_PRMGradeScaleRowDeleted(Me, New HR_PRMGradeScaleRowChangeEvent(CType(e.Row,HR_PRMGradeScaleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.HR_PRMGradeScaleRowDeletingEvent) Is Nothing) Then
                RaiseEvent HR_PRMGradeScaleRowDeleting(Me, New HR_PRMGradeScaleRowChangeEvent(CType(e.Row,HR_PRMGradeScaleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveHR_PRMGradeScaleRow(ByVal row As HR_PRMGradeScaleRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsFCCL = New dsFCCL()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "HR_PRMGradeScaleDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class HR_PRMParametersDataTable
        Inherits Global.System.Data.TypedTableBase(Of HR_PRMParametersRow)
        
        Private columnId As Global.System.Data.DataColumn
        
        Private columnDescription As Global.System.Data.DataColumn
        
        Private columnType As Global.System.Data.DataColumn
        
        Private columnBusinessUnitId As Global.System.Data.DataColumn
        
        Private columnStatus As Global.System.Data.DataColumn
        
        Private columnrowguid As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "HR_PRMParameters"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescription
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BusinessUnitIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBusinessUnitId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property StatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property rowguidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrowguid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As HR_PRMParametersRow
            Get
                Return CType(Me.Rows(index),HR_PRMParametersRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HR_PRMParametersRowChanging As HR_PRMParametersRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HR_PRMParametersRowChanged As HR_PRMParametersRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HR_PRMParametersRowDeleting As HR_PRMParametersRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HR_PRMParametersRowDeleted As HR_PRMParametersRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddHR_PRMParametersRow(ByVal row As HR_PRMParametersRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddHR_PRMParametersRow(ByVal Id As Integer, ByVal Description As String, ByVal Type As Byte, ByVal BusinessUnitId As Integer, ByVal Status As Boolean, ByVal rowguid As System.Guid) As HR_PRMParametersRow
            Dim rowHR_PRMParametersRow As HR_PRMParametersRow = CType(Me.NewRow,HR_PRMParametersRow)
            Dim columnValuesArray() As Object = New Object() {Id, Description, Type, BusinessUnitId, Status, rowguid}
            rowHR_PRMParametersRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowHR_PRMParametersRow)
            Return rowHR_PRMParametersRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindById(ByVal Id As Integer) As HR_PRMParametersRow
            Return CType(Me.Rows.Find(New Object() {Id}),HR_PRMParametersRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As HR_PRMParametersDataTable = CType(MyBase.Clone,HR_PRMParametersDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New HR_PRMParametersDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnId = MyBase.Columns("Id")
            Me.columnDescription = MyBase.Columns("Description")
            Me.columnType = MyBase.Columns("Type")
            Me.columnBusinessUnitId = MyBase.Columns("BusinessUnitId")
            Me.columnStatus = MyBase.Columns("Status")
            Me.columnrowguid = MyBase.Columns("rowguid")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId)
            Me.columnDescription = New Global.System.Data.DataColumn("Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescription)
            Me.columnType = New Global.System.Data.DataColumn("Type", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnType)
            Me.columnBusinessUnitId = New Global.System.Data.DataColumn("BusinessUnitId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBusinessUnitId)
            Me.columnStatus = New Global.System.Data.DataColumn("Status", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatus)
            Me.columnrowguid = New Global.System.Data.DataColumn("rowguid", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrowguid)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnId}, true))
            Me.columnId.AllowDBNull = false
            Me.columnId.Unique = true
            Me.columnDescription.AllowDBNull = false
            Me.columnDescription.MaxLength = 300
            Me.columnType.AllowDBNull = false
            Me.columnStatus.AllowDBNull = false
            Me.columnrowguid.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewHR_PRMParametersRow() As HR_PRMParametersRow
            Return CType(Me.NewRow,HR_PRMParametersRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New HR_PRMParametersRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(HR_PRMParametersRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.HR_PRMParametersRowChangedEvent) Is Nothing) Then
                RaiseEvent HR_PRMParametersRowChanged(Me, New HR_PRMParametersRowChangeEvent(CType(e.Row,HR_PRMParametersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.HR_PRMParametersRowChangingEvent) Is Nothing) Then
                RaiseEvent HR_PRMParametersRowChanging(Me, New HR_PRMParametersRowChangeEvent(CType(e.Row,HR_PRMParametersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.HR_PRMParametersRowDeletedEvent) Is Nothing) Then
                RaiseEvent HR_PRMParametersRowDeleted(Me, New HR_PRMParametersRowChangeEvent(CType(e.Row,HR_PRMParametersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.HR_PRMParametersRowDeletingEvent) Is Nothing) Then
                RaiseEvent HR_PRMParametersRowDeleting(Me, New HR_PRMParametersRowChangeEvent(CType(e.Row,HR_PRMParametersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveHR_PRMParametersRow(ByVal row As HR_PRMParametersRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsFCCL = New dsFCCL()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "HR_PRMParametersDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class HR_PRMParameterTypeDataTable
        Inherits Global.System.Data.TypedTableBase(Of HR_PRMParameterTypeRow)
        
        Private columnId As Global.System.Data.DataColumn
        
        Private columnDescription As Global.System.Data.DataColumn
        
        Private columnStatus As Global.System.Data.DataColumn
        
        Private columnIsBusinessUnitLevel As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "HR_PRMParameterType"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescription
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property StatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IsBusinessUnitLevelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsBusinessUnitLevel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As HR_PRMParameterTypeRow
            Get
                Return CType(Me.Rows(index),HR_PRMParameterTypeRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HR_PRMParameterTypeRowChanging As HR_PRMParameterTypeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HR_PRMParameterTypeRowChanged As HR_PRMParameterTypeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HR_PRMParameterTypeRowDeleting As HR_PRMParameterTypeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HR_PRMParameterTypeRowDeleted As HR_PRMParameterTypeRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddHR_PRMParameterTypeRow(ByVal row As HR_PRMParameterTypeRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddHR_PRMParameterTypeRow(ByVal Id As Long, ByVal Description As String, ByVal Status As Boolean, ByVal IsBusinessUnitLevel As Boolean) As HR_PRMParameterTypeRow
            Dim rowHR_PRMParameterTypeRow As HR_PRMParameterTypeRow = CType(Me.NewRow,HR_PRMParameterTypeRow)
            Dim columnValuesArray() As Object = New Object() {Id, Description, Status, IsBusinessUnitLevel}
            rowHR_PRMParameterTypeRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowHR_PRMParameterTypeRow)
            Return rowHR_PRMParameterTypeRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As HR_PRMParameterTypeDataTable = CType(MyBase.Clone,HR_PRMParameterTypeDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New HR_PRMParameterTypeDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnId = MyBase.Columns("Id")
            Me.columnDescription = MyBase.Columns("Description")
            Me.columnStatus = MyBase.Columns("Status")
            Me.columnIsBusinessUnitLevel = MyBase.Columns("IsBusinessUnitLevel")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId)
            Me.columnDescription = New Global.System.Data.DataColumn("Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescription)
            Me.columnStatus = New Global.System.Data.DataColumn("Status", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatus)
            Me.columnIsBusinessUnitLevel = New Global.System.Data.DataColumn("IsBusinessUnitLevel", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsBusinessUnitLevel)
            Me.columnDescription.MaxLength = 50
            Me.columnStatus.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewHR_PRMParameterTypeRow() As HR_PRMParameterTypeRow
            Return CType(Me.NewRow,HR_PRMParameterTypeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New HR_PRMParameterTypeRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(HR_PRMParameterTypeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.HR_PRMParameterTypeRowChangedEvent) Is Nothing) Then
                RaiseEvent HR_PRMParameterTypeRowChanged(Me, New HR_PRMParameterTypeRowChangeEvent(CType(e.Row,HR_PRMParameterTypeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.HR_PRMParameterTypeRowChangingEvent) Is Nothing) Then
                RaiseEvent HR_PRMParameterTypeRowChanging(Me, New HR_PRMParameterTypeRowChangeEvent(CType(e.Row,HR_PRMParameterTypeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.HR_PRMParameterTypeRowDeletedEvent) Is Nothing) Then
                RaiseEvent HR_PRMParameterTypeRowDeleted(Me, New HR_PRMParameterTypeRowChangeEvent(CType(e.Row,HR_PRMParameterTypeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.HR_PRMParameterTypeRowDeletingEvent) Is Nothing) Then
                RaiseEvent HR_PRMParameterTypeRowDeleting(Me, New HR_PRMParameterTypeRowChangeEvent(CType(e.Row,HR_PRMParameterTypeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveHR_PRMParameterTypeRow(ByVal row As HR_PRMParameterTypeRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsFCCL = New dsFCCL()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "HR_PRMParameterTypeDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class HR_PRMRelationsDataTable
        Inherits Global.System.Data.TypedTableBase(Of HR_PRMRelationsRow)
        
        Private columnId As Global.System.Data.DataColumn
        
        Private columnDescription As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "HR_PRMRelations"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescription
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As HR_PRMRelationsRow
            Get
                Return CType(Me.Rows(index),HR_PRMRelationsRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HR_PRMRelationsRowChanging As HR_PRMRelationsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HR_PRMRelationsRowChanged As HR_PRMRelationsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HR_PRMRelationsRowDeleting As HR_PRMRelationsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HR_PRMRelationsRowDeleted As HR_PRMRelationsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddHR_PRMRelationsRow(ByVal row As HR_PRMRelationsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddHR_PRMRelationsRow(ByVal Id As Integer, ByVal Description As String) As HR_PRMRelationsRow
            Dim rowHR_PRMRelationsRow As HR_PRMRelationsRow = CType(Me.NewRow,HR_PRMRelationsRow)
            Dim columnValuesArray() As Object = New Object() {Id, Description}
            rowHR_PRMRelationsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowHR_PRMRelationsRow)
            Return rowHR_PRMRelationsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindById(ByVal Id As Integer) As HR_PRMRelationsRow
            Return CType(Me.Rows.Find(New Object() {Id}),HR_PRMRelationsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As HR_PRMRelationsDataTable = CType(MyBase.Clone,HR_PRMRelationsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New HR_PRMRelationsDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnId = MyBase.Columns("Id")
            Me.columnDescription = MyBase.Columns("Description")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId)
            Me.columnDescription = New Global.System.Data.DataColumn("Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescription)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnId}, true))
            Me.columnId.AllowDBNull = false
            Me.columnId.Unique = true
            Me.columnDescription.AllowDBNull = false
            Me.columnDescription.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewHR_PRMRelationsRow() As HR_PRMRelationsRow
            Return CType(Me.NewRow,HR_PRMRelationsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New HR_PRMRelationsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(HR_PRMRelationsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.HR_PRMRelationsRowChangedEvent) Is Nothing) Then
                RaiseEvent HR_PRMRelationsRowChanged(Me, New HR_PRMRelationsRowChangeEvent(CType(e.Row,HR_PRMRelationsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.HR_PRMRelationsRowChangingEvent) Is Nothing) Then
                RaiseEvent HR_PRMRelationsRowChanging(Me, New HR_PRMRelationsRowChangeEvent(CType(e.Row,HR_PRMRelationsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.HR_PRMRelationsRowDeletedEvent) Is Nothing) Then
                RaiseEvent HR_PRMRelationsRowDeleted(Me, New HR_PRMRelationsRowChangeEvent(CType(e.Row,HR_PRMRelationsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.HR_PRMRelationsRowDeletingEvent) Is Nothing) Then
                RaiseEvent HR_PRMRelationsRowDeleting(Me, New HR_PRMRelationsRowChangeEvent(CType(e.Row,HR_PRMRelationsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveHR_PRMRelationsRow(ByVal row As HR_PRMRelationsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsFCCL = New dsFCCL()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "HR_PRMRelationsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class EM_EmployeeRow
        Inherits Global.System.Data.DataRow
        
        Private tableEM_Employee As EM_EmployeeDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableEM_Employee = CType(Me.Table,EM_EmployeeDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Id() As Long
            Get
                Return CType(Me(Me.tableEM_Employee.IdColumn),Long)
            End Get
            Set
                Me(Me.tableEM_Employee.IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EmployeeNo() As String
            Get
                Return CType(Me(Me.tableEM_Employee.EmployeeNoColumn),String)
            End Get
            Set
                Me(Me.tableEM_Employee.EmployeeNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FirstName() As String
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.FirstNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FirstName' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.FirstNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MiddleName() As String
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.MiddleNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MiddleName' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.MiddleNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LastName() As String
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.LastNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LastName' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.LastNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FullName() As String
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.FullNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FullName' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.FullNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FatherName() As String
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.FatherNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FatherName' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.FatherNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Gender() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.GenderColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Gender' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.GenderColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Religion() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.ReligionColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Religion' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.ReligionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DateOfBirth() As Date
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.DateOfBirthColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DateOfBirth' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.DateOfBirthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BloodGroup() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.BloodGroupColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BloodGroup' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.BloodGroupColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MaritalStatus() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.MaritalStatusColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaritalStatus' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.MaritalStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MaritalStatusEffectiveDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.MaritalStatusEffectiveDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaritalStatusEffectiveDate' in table 'EM_Employee' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.MaritalStatusEffectiveDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OldNICNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.OldNICNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OldNICNo' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.OldNICNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NewNICNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.NewNICNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NewNICNo' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.NewNICNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NationalTaxNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.NationalTaxNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NationalTaxNo' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.NationalTaxNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DrivingLicenseNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.DrivingLicenseNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DrivingLicenseNo' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.DrivingLicenseNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PassportNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.PassportNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PassportNo' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.PassportNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PassportIssueDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.PassportIssueDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PassportIssueDate' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.PassportIssueDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PassportExpiryDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.PassportExpiryDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PassportExpiryDate' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.PassportExpiryDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ContractTypeId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.ContractTypeIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ContractTypeId' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.ContractTypeIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EmployeeTypeId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.EmployeeTypeIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EmployeeTypeId' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.EmployeeTypeIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DesignationId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.DesignationIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DesignationId' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.DesignationIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EmployeeGradeId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.EmployeeGradeIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EmployeeGradeId' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.EmployeeGradeIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GradeEffectiveDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.GradeEffectiveDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GradeEffectiveDate' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.GradeEffectiveDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ProbationEndDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.ProbationEndDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProbationEndDate' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.ProbationEndDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JoiningDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.JoiningDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JoiningDate' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.JoiningDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ConfirmationDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.ConfirmationDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ConfirmationDate' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.ConfirmationDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ContractStartDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.ContractStartDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ContractStartDate' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.ContractStartDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ContractEndDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.ContractEndDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ContractEndDate' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.ContractEndDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Category() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.CategoryColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Category' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.CategoryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JobDescription() As String
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.JobDescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JobDescription' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.JobDescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ContactPresentAddress() As String
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.ContactPresentAddressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ContactPresentAddress' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.ContactPresentAddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ContactPresentCountryId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.ContactPresentCountryIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ContactPresentCountryId' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.ContactPresentCountryIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ContactPresentCityId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.ContactPresentCityIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ContactPresentCityId' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.ContactPresentCityIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ContactPresentPhone() As String
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.ContactPresentPhoneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ContactPresentPhone' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.ContactPresentPhoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ContactPresentMobile() As String
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.ContactPresentMobileColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ContactPresentMobile' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.ContactPresentMobileColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ContactPermanentAddress() As String
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.ContactPermanentAddressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ContactPermanentAddress' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.ContactPermanentAddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ContactPermanentCountryId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.ContactPermanentCountryIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ContactPermanentCountryId' in table 'EM_Employee' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.ContactPermanentCountryIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ContactPermanentCityId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.ContactPermanentCityIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ContactPermanentCityId' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.ContactPermanentCityIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ContactPermanentPhone() As String
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.ContactPermanentPhoneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ContactPermanentPhone' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.ContactPermanentPhoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ContactPersonalEmail() As String
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.ContactPersonalEmailColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ContactPersonalEmail' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.ContactPersonalEmailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ContactOfficialEmail() As String
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.ContactOfficialEmailColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ContactOfficialEmail' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.ContactOfficialEmailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CreditCardNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.CreditCardNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CreditCardNo' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.CreditCardNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Picture() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.PictureColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Picture' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.PictureColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ImageType() As String
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.ImageTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ImageType' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.ImageTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NationalityId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.NationalityIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NationalityId' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.NationalityIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DomicileId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.DomicileIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DomicileId' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.DomicileIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HeadOfDepartmentId() As Long
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.HeadOfDepartmentIdColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HeadOfDepartmentId' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.HeadOfDepartmentIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SupervisorEmployeeId() As Long
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.SupervisorEmployeeIdColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SupervisorEmployeeId' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.SupervisorEmployeeIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IsHeadOfDepartment() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.IsHeadOfDepartmentColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IsHeadOfDepartment' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.IsHeadOfDepartmentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IsForcePersonal() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.IsForcePersonalColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IsForcePersonal' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.IsForcePersonalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FPRetirementRankId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.FPRetirementRankIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FPRetirementRankId' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.FPRetirementRankIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property vcRank() As String
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.vcRankColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'vcRank' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.vcRankColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FPRetirementDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.FPRetirementDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FPRetirementDate' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.FPRetirementDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FPJobDescription() As String
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.FPJobDescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FPJobDescription' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.FPJobDescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FPCorpsId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.FPCorpsIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FPCorpsId' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.FPCorpsIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GuardianName() As String
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.GuardianNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GuardianName' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.GuardianNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GuardianRelationId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.GuardianRelationIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GuardianRelationId' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.GuardianRelationIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GuardianNIC() As String
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.GuardianNICColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GuardianNIC' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.GuardianNICColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GuardianPhone() As String
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.GuardianPhoneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GuardianPhone' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.GuardianPhoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GuardianAddress() As String
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.GuardianAddressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GuardianAddress' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.GuardianAddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DepartmentId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.DepartmentIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DepartmentId' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.DepartmentIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BranchId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.BranchIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BranchId' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.BranchIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BusinessUnitId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.BusinessUnitIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BusinessUnitId' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.BusinessUnitIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Scale() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.ScaleColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Scale' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.ScaleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IsActive() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.IsActiveColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IsActive' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.IsActiveColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CurrentStateId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.CurrentStateIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CurrentStateId' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.CurrentStateIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IsTechnical() As Short
            Get
                Return CType(Me(Me.tableEM_Employee.IsTechnicalColumn),Short)
            End Get
            Set
                Me(Me.tableEM_Employee.IsTechnicalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property vcRemarks() As String
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.vcRemarksColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'vcRemarks' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.vcRemarksColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property vcPosting() As String
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.vcPostingColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'vcPosting' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.vcPostingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dtmRenewalDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.dtmRenewalDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dtmRenewalDate' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.dtmRenewalDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dtmRetirementDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.dtmRetirementDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dtmRetirementDate' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.dtmRetirementDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClerkEmpNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.ClerkEmpNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClerkEmpNo' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.ClerkEmpNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RecommendedByEmpNo1() As String
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.RecommendedByEmpNo1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RecommendedByEmpNo1' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.RecommendedByEmpNo1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RecommendedByEmpNo2() As String
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.RecommendedByEmpNo2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RecommendedByEmpNo2' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.RecommendedByEmpNo2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SanctionedByEmpNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.SanctionedByEmpNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SanctionedByEmpNo' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.SanctionedByEmpNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GMEmpNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.GMEmpNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GMEmpNo' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.GMEmpNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ManagerEmpNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.ManagerEmpNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ManagerEmpNo' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.ManagerEmpNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property nSectionId() As Integer
            Get
                Return CType(Me(Me.tableEM_Employee.nSectionIdColumn),Integer)
            End Get
            Set
                Me(Me.tableEM_Employee.nSectionIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property vcVehicleAccCode() As String
            Get
                Return CType(Me(Me.tableEM_Employee.vcVehicleAccCodeColumn),String)
            End Get
            Set
                Me(Me.tableEM_Employee.vcVehicleAccCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property vcMobileAccCode() As String
            Get
                Return CType(Me(Me.tableEM_Employee.vcMobileAccCodeColumn),String)
            End Get
            Set
                Me(Me.tableEM_Employee.vcMobileAccCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RoEmpNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.RoEmpNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RoEmpNo' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.RoEmpNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SroEmpNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.SroEmpNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SroEmpNo' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.SroEmpNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AttVerificationEmpNo1() As String
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.AttVerificationEmpNo1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AttVerificationEmpNo1' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.AttVerificationEmpNo1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AttVerificationEmpNo2() As String
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.AttVerificationEmpNo2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AttVerificationEmpNo2' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.AttVerificationEmpNo2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AttApprovingEmpNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.AttApprovingEmpNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AttApprovingEmpNo' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.AttApprovingEmpNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property nBirthCountry() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.nBirthCountryColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'nBirthCountry' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.nBirthCountryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property nBirthCity() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.nBirthCityColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'nBirthCity' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.nBirthCityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property nPreviousEmpId() As Long
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.nPreviousEmpIdColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'nPreviousEmpId' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.nPreviousEmpIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property nsStatusId() As Short
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.nsStatusIdColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'nsStatusId' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.nsStatusIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PassportCountryId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee.PassportCountryIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PassportCountryId' in table 'EM_Employee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee.PassportCountryIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFirstNameNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.FirstNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFirstNameNull()
            Me(Me.tableEM_Employee.FirstNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMiddleNameNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.MiddleNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMiddleNameNull()
            Me(Me.tableEM_Employee.MiddleNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLastNameNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.LastNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLastNameNull()
            Me(Me.tableEM_Employee.LastNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFullNameNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.FullNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFullNameNull()
            Me(Me.tableEM_Employee.FullNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFatherNameNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.FatherNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFatherNameNull()
            Me(Me.tableEM_Employee.FatherNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGenderNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.GenderColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGenderNull()
            Me(Me.tableEM_Employee.GenderColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsReligionNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.ReligionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetReligionNull()
            Me(Me.tableEM_Employee.ReligionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDateOfBirthNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.DateOfBirthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDateOfBirthNull()
            Me(Me.tableEM_Employee.DateOfBirthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBloodGroupNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.BloodGroupColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBloodGroupNull()
            Me(Me.tableEM_Employee.BloodGroupColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMaritalStatusNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.MaritalStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMaritalStatusNull()
            Me(Me.tableEM_Employee.MaritalStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMaritalStatusEffectiveDateNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.MaritalStatusEffectiveDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMaritalStatusEffectiveDateNull()
            Me(Me.tableEM_Employee.MaritalStatusEffectiveDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOldNICNoNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.OldNICNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOldNICNoNull()
            Me(Me.tableEM_Employee.OldNICNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNewNICNoNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.NewNICNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNewNICNoNull()
            Me(Me.tableEM_Employee.NewNICNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNationalTaxNoNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.NationalTaxNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNationalTaxNoNull()
            Me(Me.tableEM_Employee.NationalTaxNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDrivingLicenseNoNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.DrivingLicenseNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDrivingLicenseNoNull()
            Me(Me.tableEM_Employee.DrivingLicenseNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPassportNoNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.PassportNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPassportNoNull()
            Me(Me.tableEM_Employee.PassportNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPassportIssueDateNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.PassportIssueDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPassportIssueDateNull()
            Me(Me.tableEM_Employee.PassportIssueDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPassportExpiryDateNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.PassportExpiryDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPassportExpiryDateNull()
            Me(Me.tableEM_Employee.PassportExpiryDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsContractTypeIdNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.ContractTypeIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetContractTypeIdNull()
            Me(Me.tableEM_Employee.ContractTypeIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEmployeeTypeIdNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.EmployeeTypeIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEmployeeTypeIdNull()
            Me(Me.tableEM_Employee.EmployeeTypeIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDesignationIdNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.DesignationIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDesignationIdNull()
            Me(Me.tableEM_Employee.DesignationIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEmployeeGradeIdNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.EmployeeGradeIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEmployeeGradeIdNull()
            Me(Me.tableEM_Employee.EmployeeGradeIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGradeEffectiveDateNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.GradeEffectiveDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGradeEffectiveDateNull()
            Me(Me.tableEM_Employee.GradeEffectiveDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProbationEndDateNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.ProbationEndDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProbationEndDateNull()
            Me(Me.tableEM_Employee.ProbationEndDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJoiningDateNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.JoiningDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJoiningDateNull()
            Me(Me.tableEM_Employee.JoiningDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsConfirmationDateNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.ConfirmationDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetConfirmationDateNull()
            Me(Me.tableEM_Employee.ConfirmationDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsContractStartDateNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.ContractStartDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetContractStartDateNull()
            Me(Me.tableEM_Employee.ContractStartDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsContractEndDateNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.ContractEndDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetContractEndDateNull()
            Me(Me.tableEM_Employee.ContractEndDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCategoryNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.CategoryColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCategoryNull()
            Me(Me.tableEM_Employee.CategoryColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJobDescriptionNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.JobDescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJobDescriptionNull()
            Me(Me.tableEM_Employee.JobDescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsContactPresentAddressNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.ContactPresentAddressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetContactPresentAddressNull()
            Me(Me.tableEM_Employee.ContactPresentAddressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsContactPresentCountryIdNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.ContactPresentCountryIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetContactPresentCountryIdNull()
            Me(Me.tableEM_Employee.ContactPresentCountryIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsContactPresentCityIdNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.ContactPresentCityIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetContactPresentCityIdNull()
            Me(Me.tableEM_Employee.ContactPresentCityIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsContactPresentPhoneNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.ContactPresentPhoneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetContactPresentPhoneNull()
            Me(Me.tableEM_Employee.ContactPresentPhoneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsContactPresentMobileNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.ContactPresentMobileColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetContactPresentMobileNull()
            Me(Me.tableEM_Employee.ContactPresentMobileColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsContactPermanentAddressNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.ContactPermanentAddressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetContactPermanentAddressNull()
            Me(Me.tableEM_Employee.ContactPermanentAddressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsContactPermanentCountryIdNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.ContactPermanentCountryIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetContactPermanentCountryIdNull()
            Me(Me.tableEM_Employee.ContactPermanentCountryIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsContactPermanentCityIdNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.ContactPermanentCityIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetContactPermanentCityIdNull()
            Me(Me.tableEM_Employee.ContactPermanentCityIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsContactPermanentPhoneNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.ContactPermanentPhoneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetContactPermanentPhoneNull()
            Me(Me.tableEM_Employee.ContactPermanentPhoneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsContactPersonalEmailNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.ContactPersonalEmailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetContactPersonalEmailNull()
            Me(Me.tableEM_Employee.ContactPersonalEmailColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsContactOfficialEmailNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.ContactOfficialEmailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetContactOfficialEmailNull()
            Me(Me.tableEM_Employee.ContactOfficialEmailColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCreditCardNoNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.CreditCardNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCreditCardNoNull()
            Me(Me.tableEM_Employee.CreditCardNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPictureNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.PictureColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPictureNull()
            Me(Me.tableEM_Employee.PictureColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsImageTypeNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.ImageTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetImageTypeNull()
            Me(Me.tableEM_Employee.ImageTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNationalityIdNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.NationalityIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNationalityIdNull()
            Me(Me.tableEM_Employee.NationalityIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDomicileIdNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.DomicileIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDomicileIdNull()
            Me(Me.tableEM_Employee.DomicileIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHeadOfDepartmentIdNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.HeadOfDepartmentIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHeadOfDepartmentIdNull()
            Me(Me.tableEM_Employee.HeadOfDepartmentIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSupervisorEmployeeIdNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.SupervisorEmployeeIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSupervisorEmployeeIdNull()
            Me(Me.tableEM_Employee.SupervisorEmployeeIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIsHeadOfDepartmentNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.IsHeadOfDepartmentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIsHeadOfDepartmentNull()
            Me(Me.tableEM_Employee.IsHeadOfDepartmentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIsForcePersonalNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.IsForcePersonalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIsForcePersonalNull()
            Me(Me.tableEM_Employee.IsForcePersonalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFPRetirementRankIdNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.FPRetirementRankIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFPRetirementRankIdNull()
            Me(Me.tableEM_Employee.FPRetirementRankIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsvcRankNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.vcRankColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetvcRankNull()
            Me(Me.tableEM_Employee.vcRankColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFPRetirementDateNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.FPRetirementDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFPRetirementDateNull()
            Me(Me.tableEM_Employee.FPRetirementDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFPJobDescriptionNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.FPJobDescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFPJobDescriptionNull()
            Me(Me.tableEM_Employee.FPJobDescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFPCorpsIdNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.FPCorpsIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFPCorpsIdNull()
            Me(Me.tableEM_Employee.FPCorpsIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGuardianNameNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.GuardianNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGuardianNameNull()
            Me(Me.tableEM_Employee.GuardianNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGuardianRelationIdNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.GuardianRelationIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGuardianRelationIdNull()
            Me(Me.tableEM_Employee.GuardianRelationIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGuardianNICNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.GuardianNICColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGuardianNICNull()
            Me(Me.tableEM_Employee.GuardianNICColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGuardianPhoneNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.GuardianPhoneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGuardianPhoneNull()
            Me(Me.tableEM_Employee.GuardianPhoneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGuardianAddressNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.GuardianAddressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGuardianAddressNull()
            Me(Me.tableEM_Employee.GuardianAddressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDepartmentIdNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.DepartmentIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDepartmentIdNull()
            Me(Me.tableEM_Employee.DepartmentIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBranchIdNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.BranchIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBranchIdNull()
            Me(Me.tableEM_Employee.BranchIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBusinessUnitIdNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.BusinessUnitIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBusinessUnitIdNull()
            Me(Me.tableEM_Employee.BusinessUnitIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsScaleNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.ScaleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetScaleNull()
            Me(Me.tableEM_Employee.ScaleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIsActiveNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.IsActiveColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIsActiveNull()
            Me(Me.tableEM_Employee.IsActiveColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCurrentStateIdNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.CurrentStateIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCurrentStateIdNull()
            Me(Me.tableEM_Employee.CurrentStateIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsvcRemarksNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.vcRemarksColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetvcRemarksNull()
            Me(Me.tableEM_Employee.vcRemarksColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsvcPostingNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.vcPostingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetvcPostingNull()
            Me(Me.tableEM_Employee.vcPostingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdtmRenewalDateNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.dtmRenewalDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdtmRenewalDateNull()
            Me(Me.tableEM_Employee.dtmRenewalDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdtmRetirementDateNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.dtmRetirementDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdtmRetirementDateNull()
            Me(Me.tableEM_Employee.dtmRetirementDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsClerkEmpNoNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.ClerkEmpNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetClerkEmpNoNull()
            Me(Me.tableEM_Employee.ClerkEmpNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRecommendedByEmpNo1Null() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.RecommendedByEmpNo1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRecommendedByEmpNo1Null()
            Me(Me.tableEM_Employee.RecommendedByEmpNo1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRecommendedByEmpNo2Null() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.RecommendedByEmpNo2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRecommendedByEmpNo2Null()
            Me(Me.tableEM_Employee.RecommendedByEmpNo2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSanctionedByEmpNoNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.SanctionedByEmpNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSanctionedByEmpNoNull()
            Me(Me.tableEM_Employee.SanctionedByEmpNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGMEmpNoNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.GMEmpNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGMEmpNoNull()
            Me(Me.tableEM_Employee.GMEmpNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsManagerEmpNoNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.ManagerEmpNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetManagerEmpNoNull()
            Me(Me.tableEM_Employee.ManagerEmpNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRoEmpNoNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.RoEmpNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRoEmpNoNull()
            Me(Me.tableEM_Employee.RoEmpNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSroEmpNoNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.SroEmpNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSroEmpNoNull()
            Me(Me.tableEM_Employee.SroEmpNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAttVerificationEmpNo1Null() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.AttVerificationEmpNo1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAttVerificationEmpNo1Null()
            Me(Me.tableEM_Employee.AttVerificationEmpNo1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAttVerificationEmpNo2Null() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.AttVerificationEmpNo2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAttVerificationEmpNo2Null()
            Me(Me.tableEM_Employee.AttVerificationEmpNo2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAttApprovingEmpNoNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.AttApprovingEmpNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAttApprovingEmpNoNull()
            Me(Me.tableEM_Employee.AttApprovingEmpNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsnBirthCountryNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.nBirthCountryColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetnBirthCountryNull()
            Me(Me.tableEM_Employee.nBirthCountryColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsnBirthCityNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.nBirthCityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetnBirthCityNull()
            Me(Me.tableEM_Employee.nBirthCityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsnPreviousEmpIdNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.nPreviousEmpIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetnPreviousEmpIdNull()
            Me(Me.tableEM_Employee.nPreviousEmpIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsnsStatusIdNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.nsStatusIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetnsStatusIdNull()
            Me(Me.tableEM_Employee.nsStatusIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPassportCountryIdNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee.PassportCountryIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPassportCountryIdNull()
            Me(Me.tableEM_Employee.PassportCountryIdColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class EM_Employee_AuditRow
        Inherits Global.System.Data.DataRow
        
        Private tableEM_Employee_Audit As EM_Employee_AuditDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableEM_Employee_Audit = CType(Me.Table,EM_Employee_AuditDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property vcAction() As String
            Get
                Return CType(Me(Me.tableEM_Employee_Audit.vcActionColumn),String)
            End Get
            Set
                Me(Me.tableEM_Employee_Audit.vcActionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dtmActionDate() As Date
            Get
                Return CType(Me(Me.tableEM_Employee_Audit.dtmActionDateColumn),Date)
            End Get
            Set
                Me(Me.tableEM_Employee_Audit.dtmActionDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property vcUserId() As String
            Get
                Return CType(Me(Me.tableEM_Employee_Audit.vcUserIdColumn),String)
            End Get
            Set
                Me(Me.tableEM_Employee_Audit.vcUserIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property vcDocumentId() As String
            Get
                Return CType(Me(Me.tableEM_Employee_Audit.vcDocumentIdColumn),String)
            End Get
            Set
                Me(Me.tableEM_Employee_Audit.vcDocumentIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property vcWorkStation() As String
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee_Audit.vcWorkStationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'vcWorkStation' in table 'EM_Employee_Audit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee_Audit.vcWorkStationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property vcIP() As String
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee_Audit.vcIPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'vcIP' in table 'EM_Employee_Audit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee_Audit.vcIPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property vcActionRemarks() As String
            Get
                Try 
                    Return CType(Me(Me.tableEM_Employee_Audit.vcActionRemarksColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'vcActionRemarks' in table 'EM_Employee_Audit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEM_Employee_Audit.vcActionRemarksColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property rowguid() As System.Guid
            Get
                Return CType(Me(Me.tableEM_Employee_Audit.rowguidColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableEM_Employee_Audit.rowguidColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsvcWorkStationNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee_Audit.vcWorkStationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetvcWorkStationNull()
            Me(Me.tableEM_Employee_Audit.vcWorkStationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsvcIPNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee_Audit.vcIPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetvcIPNull()
            Me(Me.tableEM_Employee_Audit.vcIPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsvcActionRemarksNull() As Boolean
            Return Me.IsNull(Me.tableEM_Employee_Audit.vcActionRemarksColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetvcActionRemarksNull()
            Me(Me.tableEM_Employee_Audit.vcActionRemarksColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class HR_PRMBankRow
        Inherits Global.System.Data.DataRow
        
        Private tableHR_PRMBank As HR_PRMBankDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableHR_PRMBank = CType(Me.Table,HR_PRMBankDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Id() As Long
            Get
                Return CType(Me(Me.tableHR_PRMBank.IdColumn),Long)
            End Get
            Set
                Me(Me.tableHR_PRMBank.IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Description() As String
            Get
                Return CType(Me(Me.tableHR_PRMBank.DescriptionColumn),String)
            End Get
            Set
                Me(Me.tableHR_PRMBank.DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CountryId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableHR_PRMBank.CountryIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CountryId' in table 'HR_PRMBank' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHR_PRMBank.CountryIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CityId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableHR_PRMBank.CityIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CityId' in table 'HR_PRMBank' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHR_PRMBank.CityIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Address() As String
            Get
                Return CType(Me(Me.tableHR_PRMBank.AddressColumn),String)
            End Get
            Set
                Me(Me.tableHR_PRMBank.AddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PhoneNo() As String
            Get
                Return CType(Me(Me.tableHR_PRMBank.PhoneNoColumn),String)
            End Get
            Set
                Me(Me.tableHR_PRMBank.PhoneNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BusinessUnitId() As Integer
            Get
                Return CType(Me(Me.tableHR_PRMBank.BusinessUnitIdColumn),Integer)
            End Get
            Set
                Me(Me.tableHR_PRMBank.BusinessUnitIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Status() As Boolean
            Get
                Return CType(Me(Me.tableHR_PRMBank.StatusColumn),Boolean)
            End Get
            Set
                Me(Me.tableHR_PRMBank.StatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property rowguid() As System.Guid
            Get
                Return CType(Me(Me.tableHR_PRMBank.rowguidColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableHR_PRMBank.rowguidColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCountryIdNull() As Boolean
            Return Me.IsNull(Me.tableHR_PRMBank.CountryIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCountryIdNull()
            Me(Me.tableHR_PRMBank.CountryIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCityIdNull() As Boolean
            Return Me.IsNull(Me.tableHR_PRMBank.CityIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCityIdNull()
            Me(Me.tableHR_PRMBank.CityIdColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class HR_PRMBranchRow
        Inherits Global.System.Data.DataRow
        
        Private tableHR_PRMBranch As HR_PRMBranchDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableHR_PRMBranch = CType(Me.Table,HR_PRMBranchDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Id() As Long
            Get
                Return CType(Me(Me.tableHR_PRMBranch.IdColumn),Long)
            End Get
            Set
                Me(Me.tableHR_PRMBranch.IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BusinessUnitId() As Integer
            Get
                Return CType(Me(Me.tableHR_PRMBranch.BusinessUnitIdColumn),Integer)
            End Get
            Set
                Me(Me.tableHR_PRMBranch.BusinessUnitIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BranchName() As String
            Get
                Return CType(Me(Me.tableHR_PRMBranch.BranchNameColumn),String)
            End Get
            Set
                Me(Me.tableHR_PRMBranch.BranchNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Abbreviation() As String
            Get
                Try 
                    Return CType(Me(Me.tableHR_PRMBranch.AbbreviationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Abbreviation' in table 'HR_PRMBranch' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHR_PRMBranch.AbbreviationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ParentBranchId() As Long
            Get
                Try 
                    Return CType(Me(Me.tableHR_PRMBranch.ParentBranchIdColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ParentBranchId' in table 'HR_PRMBranch' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHR_PRMBranch.ParentBranchIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PostalAddress() As String
            Get
                Try 
                    Return CType(Me(Me.tableHR_PRMBranch.PostalAddressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PostalAddress' in table 'HR_PRMBranch' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHR_PRMBranch.PostalAddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WebAddress() As String
            Get
                Try 
                    Return CType(Me(Me.tableHR_PRMBranch.WebAddressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WebAddress' in table 'HR_PRMBranch' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHR_PRMBranch.WebAddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Remarks() As String
            Get
                Try 
                    Return CType(Me(Me.tableHR_PRMBranch.RemarksColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Remarks' in table 'HR_PRMBranch' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHR_PRMBranch.RemarksColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Status() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableHR_PRMBranch.StatusColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Status' in table 'HR_PRMBranch' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHR_PRMBranch.StatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAbbreviationNull() As Boolean
            Return Me.IsNull(Me.tableHR_PRMBranch.AbbreviationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAbbreviationNull()
            Me(Me.tableHR_PRMBranch.AbbreviationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsParentBranchIdNull() As Boolean
            Return Me.IsNull(Me.tableHR_PRMBranch.ParentBranchIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetParentBranchIdNull()
            Me(Me.tableHR_PRMBranch.ParentBranchIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPostalAddressNull() As Boolean
            Return Me.IsNull(Me.tableHR_PRMBranch.PostalAddressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPostalAddressNull()
            Me(Me.tableHR_PRMBranch.PostalAddressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWebAddressNull() As Boolean
            Return Me.IsNull(Me.tableHR_PRMBranch.WebAddressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWebAddressNull()
            Me(Me.tableHR_PRMBranch.WebAddressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRemarksNull() As Boolean
            Return Me.IsNull(Me.tableHR_PRMBranch.RemarksColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRemarksNull()
            Me(Me.tableHR_PRMBranch.RemarksColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsStatusNull() As Boolean
            Return Me.IsNull(Me.tableHR_PRMBranch.StatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetStatusNull()
            Me(Me.tableHR_PRMBranch.StatusColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class HR_PRMBusinessUnitRow
        Inherits Global.System.Data.DataRow
        
        Private tableHR_PRMBusinessUnit As HR_PRMBusinessUnitDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableHR_PRMBusinessUnit = CType(Me.Table,HR_PRMBusinessUnitDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Id() As Integer
            Get
                Return CType(Me(Me.tableHR_PRMBusinessUnit.IdColumn),Integer)
            End Get
            Set
                Me(Me.tableHR_PRMBusinessUnit.IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OrganizationName() As String
            Get
                Return CType(Me(Me.tableHR_PRMBusinessUnit.OrganizationNameColumn),String)
            End Get
            Set
                Me(Me.tableHR_PRMBusinessUnit.OrganizationNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Abbreviation() As String
            Get
                Return CType(Me(Me.tableHR_PRMBusinessUnit.AbbreviationColumn),String)
            End Get
            Set
                Me(Me.tableHR_PRMBusinessUnit.AbbreviationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ParentOrganizationId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableHR_PRMBusinessUnit.ParentOrganizationIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ParentOrganizationId' in table 'HR_PRMBusinessUnit' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableHR_PRMBusinessUnit.ParentOrganizationIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ManagingOrganizationId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableHR_PRMBusinessUnit.ManagingOrganizationIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ManagingOrganizationId' in table 'HR_PRMBusinessUnit' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableHR_PRMBusinessUnit.ManagingOrganizationIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PostalAddress() As String
            Get
                Try 
                    Return CType(Me(Me.tableHR_PRMBusinessUnit.PostalAddressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PostalAddress' in table 'HR_PRMBusinessUnit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHR_PRMBusinessUnit.PostalAddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WebAddress() As String
            Get
                Try 
                    Return CType(Me(Me.tableHR_PRMBusinessUnit.WebAddressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WebAddress' in table 'HR_PRMBusinessUnit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHR_PRMBusinessUnit.WebAddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Remarks() As String
            Get
                Try 
                    Return CType(Me(Me.tableHR_PRMBusinessUnit.RemarksColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Remarks' in table 'HR_PRMBusinessUnit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHR_PRMBusinessUnit.RemarksColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsParentOrganizationIdNull() As Boolean
            Return Me.IsNull(Me.tableHR_PRMBusinessUnit.ParentOrganizationIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetParentOrganizationIdNull()
            Me(Me.tableHR_PRMBusinessUnit.ParentOrganizationIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsManagingOrganizationIdNull() As Boolean
            Return Me.IsNull(Me.tableHR_PRMBusinessUnit.ManagingOrganizationIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetManagingOrganizationIdNull()
            Me(Me.tableHR_PRMBusinessUnit.ManagingOrganizationIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPostalAddressNull() As Boolean
            Return Me.IsNull(Me.tableHR_PRMBusinessUnit.PostalAddressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPostalAddressNull()
            Me(Me.tableHR_PRMBusinessUnit.PostalAddressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWebAddressNull() As Boolean
            Return Me.IsNull(Me.tableHR_PRMBusinessUnit.WebAddressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWebAddressNull()
            Me(Me.tableHR_PRMBusinessUnit.WebAddressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRemarksNull() As Boolean
            Return Me.IsNull(Me.tableHR_PRMBusinessUnit.RemarksColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRemarksNull()
            Me(Me.tableHR_PRMBusinessUnit.RemarksColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class HR_PRMCityRow
        Inherits Global.System.Data.DataRow
        
        Private tableHR_PRMCity As HR_PRMCityDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableHR_PRMCity = CType(Me.Table,HR_PRMCityDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Id() As Integer
            Get
                Return CType(Me(Me.tableHR_PRMCity.IdColumn),Integer)
            End Get
            Set
                Me(Me.tableHR_PRMCity.IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Description() As String
            Get
                Return CType(Me(Me.tableHR_PRMCity.DescriptionColumn),String)
            End Get
            Set
                Me(Me.tableHR_PRMCity.DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Status() As Boolean
            Get
                Return CType(Me(Me.tableHR_PRMCity.StatusColumn),Boolean)
            End Get
            Set
                Me(Me.tableHR_PRMCity.StatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CountryId() As Integer
            Get
                Return CType(Me(Me.tableHR_PRMCity.CountryIdColumn),Integer)
            End Get
            Set
                Me(Me.tableHR_PRMCity.CountryIdColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class HR_PRMDEGREERow
        Inherits Global.System.Data.DataRow
        
        Private tableHR_PRMDEGREE As HR_PRMDEGREEDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableHR_PRMDEGREE = CType(Me.Table,HR_PRMDEGREEDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Id() As Integer
            Get
                Return CType(Me(Me.tableHR_PRMDEGREE.IdColumn),Integer)
            End Get
            Set
                Me(Me.tableHR_PRMDEGREE.IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STATUS() As String
            Get
                Try 
                    Return CType(Me(Me.tableHR_PRMDEGREE.STATUSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STATUS' in table 'HR_PRMDEGREE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHR_PRMDEGREE.STATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Description() As String
            Get
                Return CType(Me(Me.tableHR_PRMDEGREE.DescriptionColumn),String)
            End Get
            Set
                Me(Me.tableHR_PRMDEGREE.DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PARA_Type() As Byte
            Get
                Return CType(Me(Me.tableHR_PRMDEGREE.PARA_TypeColumn),Byte)
            End Get
            Set
                Me(Me.tableHR_PRMDEGREE.PARA_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTATUSNull() As Boolean
            Return Me.IsNull(Me.tableHR_PRMDEGREE.STATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTATUSNull()
            Me(Me.tableHR_PRMDEGREE.STATUSColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class HR_PRMDepartmentsRow
        Inherits Global.System.Data.DataRow
        
        Private tableHR_PRMDepartments As HR_PRMDepartmentsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableHR_PRMDepartments = CType(Me.Table,HR_PRMDepartmentsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Id() As Long
            Get
                Return CType(Me(Me.tableHR_PRMDepartments.IdColumn),Long)
            End Get
            Set
                Me(Me.tableHR_PRMDepartments.IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableHR_PRMDepartments.DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Description' in table 'HR_PRMDepartments' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHR_PRMDepartments.DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BusinessUnitId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableHR_PRMDepartments.BusinessUnitIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BusinessUnitId' in table 'HR_PRMDepartments' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHR_PRMDepartments.BusinessUnitIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BranchId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableHR_PRMDepartments.BranchIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BranchId' in table 'HR_PRMDepartments' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHR_PRMDepartments.BranchIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Status() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableHR_PRMDepartments.StatusColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Status' in table 'HR_PRMDepartments' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHR_PRMDepartments.StatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ParentNameId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableHR_PRMDepartments.ParentNameIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ParentNameId' in table 'HR_PRMDepartments' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHR_PRMDepartments.ParentNameIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Abbreviation() As String
            Get
                Try 
                    Return CType(Me(Me.tableHR_PRMDepartments.AbbreviationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Abbreviation' in table 'HR_PRMDepartments' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHR_PRMDepartments.AbbreviationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property nLocationId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableHR_PRMDepartments.nLocationIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'nLocationId' in table 'HR_PRMDepartments' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHR_PRMDepartments.nLocationIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDescriptionNull() As Boolean
            Return Me.IsNull(Me.tableHR_PRMDepartments.DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDescriptionNull()
            Me(Me.tableHR_PRMDepartments.DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBusinessUnitIdNull() As Boolean
            Return Me.IsNull(Me.tableHR_PRMDepartments.BusinessUnitIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBusinessUnitIdNull()
            Me(Me.tableHR_PRMDepartments.BusinessUnitIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBranchIdNull() As Boolean
            Return Me.IsNull(Me.tableHR_PRMDepartments.BranchIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBranchIdNull()
            Me(Me.tableHR_PRMDepartments.BranchIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsStatusNull() As Boolean
            Return Me.IsNull(Me.tableHR_PRMDepartments.StatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetStatusNull()
            Me(Me.tableHR_PRMDepartments.StatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsParentNameIdNull() As Boolean
            Return Me.IsNull(Me.tableHR_PRMDepartments.ParentNameIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetParentNameIdNull()
            Me(Me.tableHR_PRMDepartments.ParentNameIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAbbreviationNull() As Boolean
            Return Me.IsNull(Me.tableHR_PRMDepartments.AbbreviationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAbbreviationNull()
            Me(Me.tableHR_PRMDepartments.AbbreviationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsnLocationIdNull() As Boolean
            Return Me.IsNull(Me.tableHR_PRMDepartments.nLocationIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetnLocationIdNull()
            Me(Me.tableHR_PRMDepartments.nLocationIdColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class HR_PRMGradesRow
        Inherits Global.System.Data.DataRow
        
        Private tableHR_PRMGrades As HR_PRMGradesDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableHR_PRMGrades = CType(Me.Table,HR_PRMGradesDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Id() As Long
            Get
                Return CType(Me(Me.tableHR_PRMGrades.IdColumn),Long)
            End Get
            Set
                Me(Me.tableHR_PRMGrades.IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GradeNo() As String
            Get
                Return CType(Me(Me.tableHR_PRMGrades.GradeNoColumn),String)
            End Get
            Set
                Me(Me.tableHR_PRMGrades.GradeNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EmployeeTypeId() As Integer
            Get
                Return CType(Me(Me.tableHR_PRMGrades.EmployeeTypeIdColumn),Integer)
            End Get
            Set
                Me(Me.tableHR_PRMGrades.EmployeeTypeIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Abreviation() As String
            Get
                Return CType(Me(Me.tableHR_PRMGrades.AbreviationColumn),String)
            End Get
            Set
                Me(Me.tableHR_PRMGrades.AbreviationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Description() As String
            Get
                Return CType(Me(Me.tableHR_PRMGrades.DescriptionColumn),String)
            End Get
            Set
                Me(Me.tableHR_PRMGrades.DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BasicPay() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableHR_PRMGrades.BasicPayColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BasicPay' in table 'HR_PRMGrades' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHR_PRMGrades.BasicPayColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SubScales() As Short
            Get
                Return CType(Me(Me.tableHR_PRMGrades.SubScalesColumn),Short)
            End Get
            Set
                Me(Me.tableHR_PRMGrades.SubScalesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LevelId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableHR_PRMGrades.LevelIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LevelId' in table 'HR_PRMGrades' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHR_PRMGrades.LevelIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BusinessUnitId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableHR_PRMGrades.BusinessUnitIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BusinessUnitId' in table 'HR_PRMGrades' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHR_PRMGrades.BusinessUnitIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Last_Modification_Date() As Date
            Get
                Return CType(Me(Me.tableHR_PRMGrades.Last_Modification_DateColumn),Date)
            End Get
            Set
                Me(Me.tableHR_PRMGrades.Last_Modification_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EffectiveFrom() As Date
            Get
                Try 
                    Return CType(Me(Me.tableHR_PRMGrades.EffectiveFromColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EffectiveFrom' in table 'HR_PRMGrades' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHR_PRMGrades.EffectiveFromColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ScaleValue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableHR_PRMGrades.ScaleValueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ScaleValue' in table 'HR_PRMGrades' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHR_PRMGrades.ScaleValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBasicPayNull() As Boolean
            Return Me.IsNull(Me.tableHR_PRMGrades.BasicPayColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBasicPayNull()
            Me(Me.tableHR_PRMGrades.BasicPayColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLevelIdNull() As Boolean
            Return Me.IsNull(Me.tableHR_PRMGrades.LevelIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLevelIdNull()
            Me(Me.tableHR_PRMGrades.LevelIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBusinessUnitIdNull() As Boolean
            Return Me.IsNull(Me.tableHR_PRMGrades.BusinessUnitIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBusinessUnitIdNull()
            Me(Me.tableHR_PRMGrades.BusinessUnitIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEffectiveFromNull() As Boolean
            Return Me.IsNull(Me.tableHR_PRMGrades.EffectiveFromColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEffectiveFromNull()
            Me(Me.tableHR_PRMGrades.EffectiveFromColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsScaleValueNull() As Boolean
            Return Me.IsNull(Me.tableHR_PRMGrades.ScaleValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetScaleValueNull()
            Me(Me.tableHR_PRMGrades.ScaleValueColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class HR_PRMGradeScaleRow
        Inherits Global.System.Data.DataRow
        
        Private tableHR_PRMGradeScale As HR_PRMGradeScaleDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableHR_PRMGradeScale = CType(Me.Table,HR_PRMGradeScaleDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GradeId() As Long
            Get
                Return CType(Me(Me.tableHR_PRMGradeScale.GradeIdColumn),Long)
            End Get
            Set
                Me(Me.tableHR_PRMGradeScale.GradeIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ScaleIndex() As Short
            Get
                Return CType(Me(Me.tableHR_PRMGradeScale.ScaleIndexColumn),Short)
            End Get
            Set
                Me(Me.tableHR_PRMGradeScale.ScaleIndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ScaleAmount() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableHR_PRMGradeScale.ScaleAmountColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ScaleAmount' in table 'HR_PRMGradeScale' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHR_PRMGradeScale.ScaleAmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsScaleAmountNull() As Boolean
            Return Me.IsNull(Me.tableHR_PRMGradeScale.ScaleAmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetScaleAmountNull()
            Me(Me.tableHR_PRMGradeScale.ScaleAmountColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class HR_PRMParametersRow
        Inherits Global.System.Data.DataRow
        
        Private tableHR_PRMParameters As HR_PRMParametersDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableHR_PRMParameters = CType(Me.Table,HR_PRMParametersDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Id() As Integer
            Get
                Return CType(Me(Me.tableHR_PRMParameters.IdColumn),Integer)
            End Get
            Set
                Me(Me.tableHR_PRMParameters.IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Description() As String
            Get
                Return CType(Me(Me.tableHR_PRMParameters.DescriptionColumn),String)
            End Get
            Set
                Me(Me.tableHR_PRMParameters.DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Type() As Byte
            Get
                Return CType(Me(Me.tableHR_PRMParameters.TypeColumn),Byte)
            End Get
            Set
                Me(Me.tableHR_PRMParameters.TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BusinessUnitId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableHR_PRMParameters.BusinessUnitIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BusinessUnitId' in table 'HR_PRMParameters' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHR_PRMParameters.BusinessUnitIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Status() As Boolean
            Get
                Return CType(Me(Me.tableHR_PRMParameters.StatusColumn),Boolean)
            End Get
            Set
                Me(Me.tableHR_PRMParameters.StatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property rowguid() As System.Guid
            Get
                Return CType(Me(Me.tableHR_PRMParameters.rowguidColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableHR_PRMParameters.rowguidColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBusinessUnitIdNull() As Boolean
            Return Me.IsNull(Me.tableHR_PRMParameters.BusinessUnitIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBusinessUnitIdNull()
            Me(Me.tableHR_PRMParameters.BusinessUnitIdColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class HR_PRMParameterTypeRow
        Inherits Global.System.Data.DataRow
        
        Private tableHR_PRMParameterType As HR_PRMParameterTypeDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableHR_PRMParameterType = CType(Me.Table,HR_PRMParameterTypeDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Id() As Long
            Get
                Try 
                    Return CType(Me(Me.tableHR_PRMParameterType.IdColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Id' in table 'HR_PRMParameterType' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHR_PRMParameterType.IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableHR_PRMParameterType.DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Description' in table 'HR_PRMParameterType' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHR_PRMParameterType.DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Status() As Boolean
            Get
                Return CType(Me(Me.tableHR_PRMParameterType.StatusColumn),Boolean)
            End Get
            Set
                Me(Me.tableHR_PRMParameterType.StatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IsBusinessUnitLevel() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableHR_PRMParameterType.IsBusinessUnitLevelColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IsBusinessUnitLevel' in table 'HR_PRMParameterType' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableHR_PRMParameterType.IsBusinessUnitLevelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIdNull() As Boolean
            Return Me.IsNull(Me.tableHR_PRMParameterType.IdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIdNull()
            Me(Me.tableHR_PRMParameterType.IdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDescriptionNull() As Boolean
            Return Me.IsNull(Me.tableHR_PRMParameterType.DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDescriptionNull()
            Me(Me.tableHR_PRMParameterType.DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIsBusinessUnitLevelNull() As Boolean
            Return Me.IsNull(Me.tableHR_PRMParameterType.IsBusinessUnitLevelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIsBusinessUnitLevelNull()
            Me(Me.tableHR_PRMParameterType.IsBusinessUnitLevelColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class HR_PRMRelationsRow
        Inherits Global.System.Data.DataRow
        
        Private tableHR_PRMRelations As HR_PRMRelationsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableHR_PRMRelations = CType(Me.Table,HR_PRMRelationsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Id() As Integer
            Get
                Return CType(Me(Me.tableHR_PRMRelations.IdColumn),Integer)
            End Get
            Set
                Me(Me.tableHR_PRMRelations.IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Description() As String
            Get
                Return CType(Me(Me.tableHR_PRMRelations.DescriptionColumn),String)
            End Get
            Set
                Me(Me.tableHR_PRMRelations.DescriptionColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class EM_EmployeeRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As EM_EmployeeRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As EM_EmployeeRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As EM_EmployeeRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class EM_Employee_AuditRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As EM_Employee_AuditRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As EM_Employee_AuditRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As EM_Employee_AuditRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class HR_PRMBankRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As HR_PRMBankRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As HR_PRMBankRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As HR_PRMBankRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class HR_PRMBranchRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As HR_PRMBranchRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As HR_PRMBranchRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As HR_PRMBranchRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class HR_PRMBusinessUnitRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As HR_PRMBusinessUnitRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As HR_PRMBusinessUnitRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As HR_PRMBusinessUnitRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class HR_PRMCityRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As HR_PRMCityRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As HR_PRMCityRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As HR_PRMCityRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class HR_PRMDEGREERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As HR_PRMDEGREERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As HR_PRMDEGREERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As HR_PRMDEGREERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class HR_PRMDepartmentsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As HR_PRMDepartmentsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As HR_PRMDepartmentsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As HR_PRMDepartmentsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class HR_PRMGradesRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As HR_PRMGradesRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As HR_PRMGradesRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As HR_PRMGradesRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class HR_PRMGradeScaleRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As HR_PRMGradeScaleRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As HR_PRMGradeScaleRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As HR_PRMGradeScaleRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class HR_PRMParametersRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As HR_PRMParametersRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As HR_PRMParametersRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As HR_PRMParametersRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class HR_PRMParameterTypeRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As HR_PRMParameterTypeRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As HR_PRMParameterTypeRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As HR_PRMParameterTypeRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class HR_PRMRelationsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As HR_PRMRelationsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As HR_PRMRelationsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As HR_PRMRelationsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace dsFCCLTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class EM_EmployeeTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "EM_Employee"
            tableMapping.ColumnMappings.Add("Id", "Id")
            tableMapping.ColumnMappings.Add("EmployeeNo", "EmployeeNo")
            tableMapping.ColumnMappings.Add("FirstName", "FirstName")
            tableMapping.ColumnMappings.Add("MiddleName", "MiddleName")
            tableMapping.ColumnMappings.Add("LastName", "LastName")
            tableMapping.ColumnMappings.Add("FullName", "FullName")
            tableMapping.ColumnMappings.Add("FatherName", "FatherName")
            tableMapping.ColumnMappings.Add("Gender", "Gender")
            tableMapping.ColumnMappings.Add("Religion", "Religion")
            tableMapping.ColumnMappings.Add("DateOfBirth", "DateOfBirth")
            tableMapping.ColumnMappings.Add("BloodGroup", "BloodGroup")
            tableMapping.ColumnMappings.Add("MaritalStatus", "MaritalStatus")
            tableMapping.ColumnMappings.Add("MaritalStatusEffectiveDate", "MaritalStatusEffectiveDate")
            tableMapping.ColumnMappings.Add("OldNICNo", "OldNICNo")
            tableMapping.ColumnMappings.Add("NewNICNo", "NewNICNo")
            tableMapping.ColumnMappings.Add("NationalTaxNo", "NationalTaxNo")
            tableMapping.ColumnMappings.Add("DrivingLicenseNo", "DrivingLicenseNo")
            tableMapping.ColumnMappings.Add("PassportNo", "PassportNo")
            tableMapping.ColumnMappings.Add("PassportIssueDate", "PassportIssueDate")
            tableMapping.ColumnMappings.Add("PassportExpiryDate", "PassportExpiryDate")
            tableMapping.ColumnMappings.Add("ContractTypeId", "ContractTypeId")
            tableMapping.ColumnMappings.Add("EmployeeTypeId", "EmployeeTypeId")
            tableMapping.ColumnMappings.Add("DesignationId", "DesignationId")
            tableMapping.ColumnMappings.Add("EmployeeGradeId", "EmployeeGradeId")
            tableMapping.ColumnMappings.Add("GradeEffectiveDate", "GradeEffectiveDate")
            tableMapping.ColumnMappings.Add("ProbationEndDate", "ProbationEndDate")
            tableMapping.ColumnMappings.Add("JoiningDate", "JoiningDate")
            tableMapping.ColumnMappings.Add("ConfirmationDate", "ConfirmationDate")
            tableMapping.ColumnMappings.Add("ContractStartDate", "ContractStartDate")
            tableMapping.ColumnMappings.Add("ContractEndDate", "ContractEndDate")
            tableMapping.ColumnMappings.Add("Category", "Category")
            tableMapping.ColumnMappings.Add("JobDescription", "JobDescription")
            tableMapping.ColumnMappings.Add("ContactPresentAddress", "ContactPresentAddress")
            tableMapping.ColumnMappings.Add("ContactPresentCountryId", "ContactPresentCountryId")
            tableMapping.ColumnMappings.Add("ContactPresentCityId", "ContactPresentCityId")
            tableMapping.ColumnMappings.Add("ContactPresentPhone", "ContactPresentPhone")
            tableMapping.ColumnMappings.Add("ContactPresentMobile", "ContactPresentMobile")
            tableMapping.ColumnMappings.Add("ContactPermanentAddress", "ContactPermanentAddress")
            tableMapping.ColumnMappings.Add("ContactPermanentCountryId", "ContactPermanentCountryId")
            tableMapping.ColumnMappings.Add("ContactPermanentCityId", "ContactPermanentCityId")
            tableMapping.ColumnMappings.Add("ContactPermanentPhone", "ContactPermanentPhone")
            tableMapping.ColumnMappings.Add("ContactPersonalEmail", "ContactPersonalEmail")
            tableMapping.ColumnMappings.Add("ContactOfficialEmail", "ContactOfficialEmail")
            tableMapping.ColumnMappings.Add("CreditCardNo", "CreditCardNo")
            tableMapping.ColumnMappings.Add("Picture", "Picture")
            tableMapping.ColumnMappings.Add("ImageType", "ImageType")
            tableMapping.ColumnMappings.Add("NationalityId", "NationalityId")
            tableMapping.ColumnMappings.Add("DomicileId", "DomicileId")
            tableMapping.ColumnMappings.Add("HeadOfDepartmentId", "HeadOfDepartmentId")
            tableMapping.ColumnMappings.Add("SupervisorEmployeeId", "SupervisorEmployeeId")
            tableMapping.ColumnMappings.Add("IsHeadOfDepartment", "IsHeadOfDepartment")
            tableMapping.ColumnMappings.Add("IsForcePersonal", "IsForcePersonal")
            tableMapping.ColumnMappings.Add("FPRetirementRankId", "FPRetirementRankId")
            tableMapping.ColumnMappings.Add("vcRank", "vcRank")
            tableMapping.ColumnMappings.Add("FPRetirementDate", "FPRetirementDate")
            tableMapping.ColumnMappings.Add("FPJobDescription", "FPJobDescription")
            tableMapping.ColumnMappings.Add("FPCorpsId", "FPCorpsId")
            tableMapping.ColumnMappings.Add("GuardianName", "GuardianName")
            tableMapping.ColumnMappings.Add("GuardianRelationId", "GuardianRelationId")
            tableMapping.ColumnMappings.Add("GuardianNIC", "GuardianNIC")
            tableMapping.ColumnMappings.Add("GuardianPhone", "GuardianPhone")
            tableMapping.ColumnMappings.Add("GuardianAddress", "GuardianAddress")
            tableMapping.ColumnMappings.Add("DepartmentId", "DepartmentId")
            tableMapping.ColumnMappings.Add("BranchId", "BranchId")
            tableMapping.ColumnMappings.Add("BusinessUnitId", "BusinessUnitId")
            tableMapping.ColumnMappings.Add("Scale", "Scale")
            tableMapping.ColumnMappings.Add("IsActive", "IsActive")
            tableMapping.ColumnMappings.Add("CurrentStateId", "CurrentStateId")
            tableMapping.ColumnMappings.Add("IsTechnical", "IsTechnical")
            tableMapping.ColumnMappings.Add("vcRemarks", "vcRemarks")
            tableMapping.ColumnMappings.Add("vcPosting", "vcPosting")
            tableMapping.ColumnMappings.Add("dtmRenewalDate", "dtmRenewalDate")
            tableMapping.ColumnMappings.Add("dtmRetirementDate", "dtmRetirementDate")
            tableMapping.ColumnMappings.Add("ClerkEmpNo", "ClerkEmpNo")
            tableMapping.ColumnMappings.Add("RecommendedByEmpNo1", "RecommendedByEmpNo1")
            tableMapping.ColumnMappings.Add("RecommendedByEmpNo2", "RecommendedByEmpNo2")
            tableMapping.ColumnMappings.Add("SanctionedByEmpNo", "SanctionedByEmpNo")
            tableMapping.ColumnMappings.Add("GMEmpNo", "GMEmpNo")
            tableMapping.ColumnMappings.Add("ManagerEmpNo", "ManagerEmpNo")
            tableMapping.ColumnMappings.Add("nSectionId", "nSectionId")
            tableMapping.ColumnMappings.Add("vcVehicleAccCode", "vcVehicleAccCode")
            tableMapping.ColumnMappings.Add("vcMobileAccCode", "vcMobileAccCode")
            tableMapping.ColumnMappings.Add("RoEmpNo", "RoEmpNo")
            tableMapping.ColumnMappings.Add("SroEmpNo", "SroEmpNo")
            tableMapping.ColumnMappings.Add("AttVerificationEmpNo1", "AttVerificationEmpNo1")
            tableMapping.ColumnMappings.Add("AttVerificationEmpNo2", "AttVerificationEmpNo2")
            tableMapping.ColumnMappings.Add("AttApprovingEmpNo", "AttApprovingEmpNo")
            tableMapping.ColumnMappings.Add("nBirthCountry", "nBirthCountry")
            tableMapping.ColumnMappings.Add("nBirthCity", "nBirthCity")
            tableMapping.ColumnMappings.Add("nPreviousEmpId", "nPreviousEmpId")
            tableMapping.ColumnMappings.Add("nsStatusId", "nsStatusId")
            tableMapping.ColumnMappings.Add("PassportCountryId", "PassportCountryId")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [ERP_FCCL_21_Aug_15].[dbo].[EM_Employee] WHERE (([Id] = ?) AND ([Empl"& _ 
                "oyeeNo] = ?) AND ((? = 1 AND [FirstName] IS NULL) OR ([FirstName] = ?)) AND ((? "& _ 
                "= 1 AND [MiddleName] IS NULL) OR ([MiddleName] = ?)) AND ((? = 1 AND [LastName] "& _ 
                "IS NULL) OR ([LastName] = ?)) AND ((? = 1 AND [FullName] IS NULL) OR ([FullName]"& _ 
                " = ?)) AND ((? = 1 AND [FatherName] IS NULL) OR ([FatherName] = ?)) AND ((? = 1 "& _ 
                "AND [Gender] IS NULL) OR ([Gender] = ?)) AND ((? = 1 AND [Religion] IS NULL) OR "& _ 
                "([Religion] = ?)) AND ((? = 1 AND [DateOfBirth] IS NULL) OR ([DateOfBirth] = ?))"& _ 
                " AND ((? = 1 AND [BloodGroup] IS NULL) OR ([BloodGroup] = ?)) AND ((? = 1 AND [M"& _ 
                "aritalStatus] IS NULL) OR ([MaritalStatus] = ?)) AND ((? = 1 AND [MaritalStatusE"& _ 
                "ffectiveDate] IS NULL) OR ([MaritalStatusEffectiveDate] = ?)) AND ((? = 1 AND [O"& _ 
                "ldNICNo] IS NULL) OR ([OldNICNo] = ?)) AND ((? = 1 AND [NewNICNo] IS NULL) OR (["& _ 
                "NewNICNo] = ?)) AND ((? = 1 AND [NationalTaxNo] IS NULL) OR ([NationalTaxNo] = ?"& _ 
                ")) AND ((? = 1 AND [DrivingLicenseNo] IS NULL) OR ([DrivingLicenseNo] = ?)) AND "& _ 
                "((? = 1 AND [PassportNo] IS NULL) OR ([PassportNo] = ?)) AND ((? = 1 AND [Passpo"& _ 
                "rtIssueDate] IS NULL) OR ([PassportIssueDate] = ?)) AND ((? = 1 AND [PassportExp"& _ 
                "iryDate] IS NULL) OR ([PassportExpiryDate] = ?)) AND ((? = 1 AND [ContractTypeId"& _ 
                "] IS NULL) OR ([ContractTypeId] = ?)) AND ((? = 1 AND [EmployeeTypeId] IS NULL) "& _ 
                "OR ([EmployeeTypeId] = ?)) AND ((? = 1 AND [DesignationId] IS NULL) OR ([Designa"& _ 
                "tionId] = ?)) AND ((? = 1 AND [EmployeeGradeId] IS NULL) OR ([EmployeeGradeId] ="& _ 
                " ?)) AND ((? = 1 AND [GradeEffectiveDate] IS NULL) OR ([GradeEffectiveDate] = ?)"& _ 
                ") AND ((? = 1 AND [ProbationEndDate] IS NULL) OR ([ProbationEndDate] = ?)) AND ("& _ 
                "(? = 1 AND [JoiningDate] IS NULL) OR ([JoiningDate] = ?)) AND ((? = 1 AND [Confi"& _ 
                "rmationDate] IS NULL) OR ([ConfirmationDate] = ?)) AND ((? = 1 AND [ContractStar"& _ 
                "tDate] IS NULL) OR ([ContractStartDate] = ?)) AND ((? = 1 AND [ContractEndDate] "& _ 
                "IS NULL) OR ([ContractEndDate] = ?)) AND ((? = 1 AND [Category] IS NULL) OR ([Ca"& _ 
                "tegory] = ?)) AND ((? = 1 AND [JobDescription] IS NULL) OR ([JobDescription] = ?"& _ 
                ")) AND ((? = 1 AND [ContactPresentAddress] IS NULL) OR ([ContactPresentAddress] "& _ 
                "= ?)) AND ((? = 1 AND [ContactPresentCountryId] IS NULL) OR ([ContactPresentCoun"& _ 
                "tryId] = ?)) AND ((? = 1 AND [ContactPresentCityId] IS NULL) OR ([ContactPresent"& _ 
                "CityId] = ?)) AND ((? = 1 AND [ContactPresentPhone] IS NULL) OR ([ContactPresent"& _ 
                "Phone] = ?)) AND ((? = 1 AND [ContactPresentMobile] IS NULL) OR ([ContactPresent"& _ 
                "Mobile] = ?)) AND ((? = 1 AND [ContactPermanentAddress] IS NULL) OR ([ContactPer"& _ 
                "manentAddress] = ?)) AND ((? = 1 AND [ContactPermanentCountryId] IS NULL) OR ([C"& _ 
                "ontactPermanentCountryId] = ?)) AND ((? = 1 AND [ContactPermanentCityId] IS NULL"& _ 
                ") OR ([ContactPermanentCityId] = ?)) AND ((? = 1 AND [ContactPermanentPhone] IS "& _ 
                "NULL) OR ([ContactPermanentPhone] = ?)) AND ((? = 1 AND [ContactPersonalEmail] I"& _ 
                "S NULL) OR ([ContactPersonalEmail] = ?)) AND ((? = 1 AND [ContactOfficialEmail] "& _ 
                "IS NULL) OR ([ContactOfficialEmail] = ?)) AND ((? = 1 AND [CreditCardNo] IS NULL"& _ 
                ") OR ([CreditCardNo] = ?)) AND ((? = 1 AND [ImageType] IS NULL) OR ([ImageType] "& _ 
                "= ?)) AND ((? = 1 AND [NationalityId] IS NULL) OR ([NationalityId] = ?)) AND ((?"& _ 
                " = 1 AND [DomicileId] IS NULL) OR ([DomicileId] = ?)) AND ((? = 1 AND [HeadOfDep"& _ 
                "artmentId] IS NULL) OR ([HeadOfDepartmentId] = ?)) AND ((? = 1 AND [SupervisorEm"& _ 
                "ployeeId] IS NULL) OR ([SupervisorEmployeeId] = ?)) AND ((? = 1 AND [IsHeadOfDep"& _ 
                "artment] IS NULL) OR ([IsHeadOfDepartment] = ?)) AND ((? = 1 AND [IsForcePersona"& _ 
                "l] IS NULL) OR ([IsForcePersonal] = ?)) AND ((? = 1 AND [FPRetirementRankId] IS "& _ 
                "NULL) OR ([FPRetirementRankId] = ?)) AND ((? = 1 AND [vcRank] IS NULL) OR ([vcRa"& _ 
                "nk] = ?)) AND ((? = 1 AND [FPRetirementDate] IS NULL) OR ([FPRetirementDate] = ?"& _ 
                ")) AND ((? = 1 AND [FPJobDescription] IS NULL) OR ([FPJobDescription] = ?)) AND "& _ 
                "((? = 1 AND [FPCorpsId] IS NULL) OR ([FPCorpsId] = ?)) AND ((? = 1 AND [Guardian"& _ 
                "Name] IS NULL) OR ([GuardianName] = ?)) AND ((? = 1 AND [GuardianRelationId] IS "& _ 
                "NULL) OR ([GuardianRelationId] = ?)) AND ((? = 1 AND [GuardianNIC] IS NULL) OR ("& _ 
                "[GuardianNIC] = ?)) AND ((? = 1 AND [GuardianPhone] IS NULL) OR ([GuardianPhone]"& _ 
                " = ?)) AND ((? = 1 AND [GuardianAddress] IS NULL) OR ([GuardianAddress] = ?)) AN"& _ 
                "D ((? = 1 AND [DepartmentId] IS NULL) OR ([DepartmentId] = ?)) AND ((? = 1 AND ["& _ 
                "BranchId] IS NULL) OR ([BranchId] = ?)) AND ((? = 1 AND [BusinessUnitId] IS NULL"& _ 
                ") OR ([BusinessUnitId] = ?)) AND ((? = 1 AND [Scale] IS NULL) OR ([Scale] = ?)) "& _ 
                "AND ((? = 1 AND [IsActive] IS NULL) OR ([IsActive] = ?)) AND ((? = 1 AND [Curren"& _ 
                "tStateId] IS NULL) OR ([CurrentStateId] = ?)) AND ([IsTechnical] = ?) AND ((? = "& _ 
                "1 AND [vcRemarks] IS NULL) OR ([vcRemarks] = ?)) AND ((? = 1 AND [vcPosting] IS "& _ 
                "NULL) OR ([vcPosting] = ?)) AND ((? = 1 AND [dtmRenewalDate] IS NULL) OR ([dtmRe"& _ 
                "newalDate] = ?)) AND ((? = 1 AND [dtmRetirementDate] IS NULL) OR ([dtmRetirement"& _ 
                "Date] = ?)) AND ((? = 1 AND [ClerkEmpNo] IS NULL) OR ([ClerkEmpNo] = ?)) AND ((?"& _ 
                " = 1 AND [RecommendedByEmpNo1] IS NULL) OR ([RecommendedByEmpNo1] = ?)) AND ((? "& _ 
                "= 1 AND [RecommendedByEmpNo2] IS NULL) OR ([RecommendedByEmpNo2] = ?)) AND ((? ="& _ 
                " 1 AND [SanctionedByEmpNo] IS NULL) OR ([SanctionedByEmpNo] = ?)) AND ((? = 1 AN"& _ 
                "D [GMEmpNo] IS NULL) OR ([GMEmpNo] = ?)) AND ((? = 1 AND [ManagerEmpNo] IS NULL)"& _ 
                " OR ([ManagerEmpNo] = ?)) AND ([nSectionId] = ?) AND ([vcVehicleAccCode] = ?) AN"& _ 
                "D ([vcMobileAccCode] = ?) AND ((? = 1 AND [RoEmpNo] IS NULL) OR ([RoEmpNo] = ?))"& _ 
                " AND ((? = 1 AND [SroEmpNo] IS NULL) OR ([SroEmpNo] = ?)) AND ((? = 1 AND [AttVe"& _ 
                "rificationEmpNo1] IS NULL) OR ([AttVerificationEmpNo1] = ?)) AND ((? = 1 AND [At"& _ 
                "tVerificationEmpNo2] IS NULL) OR ([AttVerificationEmpNo2] = ?)) AND ((? = 1 AND "& _ 
                "[AttApprovingEmpNo] IS NULL) OR ([AttApprovingEmpNo] = ?)) AND ((? = 1 AND [nBir"& _ 
                "thCountry] IS NULL) OR ([nBirthCountry] = ?)) AND ((? = 1 AND [nBirthCity] IS NU"& _ 
                "LL) OR ([nBirthCity] = ?)) AND ((? = 1 AND [nPreviousEmpId] IS NULL) OR ([nPrevi"& _ 
                "ousEmpId] = ?)) AND ((? = 1 AND [nsStatusId] IS NULL) OR ([nsStatusId] = ?)) AND"& _ 
                " ((? = 1 AND [PassportCountryId] IS NULL) OR ([PassportCountryId] = ?)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Id", Global.System.Data.Odbc.OdbcType.BigInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Id", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_EmployeeNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EmployeeNo", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_FirstName", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FirstName", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_FirstName", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FirstName", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_MiddleName", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "MiddleName", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_MiddleName", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "MiddleName", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_LastName", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LastName", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LastName", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LastName", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_FullName", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FullName", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_FullName", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FullName", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_FatherName", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FatherName", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_FatherName", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FatherName", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Gender", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Gender", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Gender", Global.System.Data.Odbc.OdbcType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Gender", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Religion", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Religion", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Religion", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Religion", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DateOfBirth", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DateOfBirth", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DateOfBirth", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DateOfBirth", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_BloodGroup", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BloodGroup", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_BloodGroup", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BloodGroup", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_MaritalStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "MaritalStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_MaritalStatus", Global.System.Data.Odbc.OdbcType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "MaritalStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_MaritalStatusEffectiveDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "MaritalStatusEffectiveDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_MaritalStatusEffectiveDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "MaritalStatusEffectiveDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_OldNICNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OldNICNo", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_OldNICNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OldNICNo", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_NewNICNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NewNICNo", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_NewNICNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NewNICNo", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_NationalTaxNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NationalTaxNo", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_NationalTaxNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NationalTaxNo", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DrivingLicenseNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DrivingLicenseNo", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DrivingLicenseNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DrivingLicenseNo", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PassportNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PassportNo", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PassportNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PassportNo", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PassportIssueDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PassportIssueDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PassportIssueDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PassportIssueDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PassportExpiryDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PassportExpiryDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PassportExpiryDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PassportExpiryDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ContractTypeId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContractTypeId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ContractTypeId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContractTypeId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_EmployeeTypeId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EmployeeTypeId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_EmployeeTypeId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EmployeeTypeId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DesignationId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DesignationId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DesignationId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DesignationId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_EmployeeGradeId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EmployeeGradeId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_EmployeeGradeId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EmployeeGradeId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_GradeEffectiveDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GradeEffectiveDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_GradeEffectiveDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GradeEffectiveDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ProbationEndDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ProbationEndDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ProbationEndDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ProbationEndDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_JoiningDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "JoiningDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_JoiningDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "JoiningDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ConfirmationDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ConfirmationDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ConfirmationDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ConfirmationDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ContractStartDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContractStartDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ContractStartDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContractStartDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ContractEndDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContractEndDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ContractEndDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContractEndDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Category", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Category", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Category", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Category", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_JobDescription", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "JobDescription", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_JobDescription", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "JobDescription", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ContactPresentAddress", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPresentAddress", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ContactPresentAddress", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPresentAddress", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ContactPresentCountryId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPresentCountryId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ContactPresentCountryId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPresentCountryId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ContactPresentCityId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPresentCityId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ContactPresentCityId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPresentCityId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ContactPresentPhone", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPresentPhone", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ContactPresentPhone", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPresentPhone", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ContactPresentMobile", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPresentMobile", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ContactPresentMobile", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPresentMobile", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ContactPermanentAddress", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPermanentAddress", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ContactPermanentAddress", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPermanentAddress", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ContactPermanentCountryId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPermanentCountryId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ContactPermanentCountryId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPermanentCountryId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ContactPermanentCityId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPermanentCityId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ContactPermanentCityId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPermanentCityId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ContactPermanentPhone", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPermanentPhone", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ContactPermanentPhone", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPermanentPhone", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ContactPersonalEmail", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPersonalEmail", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ContactPersonalEmail", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPersonalEmail", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ContactOfficialEmail", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactOfficialEmail", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ContactOfficialEmail", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactOfficialEmail", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CreditCardNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CreditCardNo", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CreditCardNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CreditCardNo", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ImageType", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ImageType", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ImageType", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ImageType", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_NationalityId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NationalityId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_NationalityId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NationalityId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DomicileId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DomicileId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DomicileId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DomicileId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_HeadOfDepartmentId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HeadOfDepartmentId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_HeadOfDepartmentId", Global.System.Data.Odbc.OdbcType.BigInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HeadOfDepartmentId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_SupervisorEmployeeId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SupervisorEmployeeId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_SupervisorEmployeeId", Global.System.Data.Odbc.OdbcType.BigInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SupervisorEmployeeId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_IsHeadOfDepartment", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IsHeadOfDepartment", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_IsHeadOfDepartment", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IsHeadOfDepartment", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_IsForcePersonal", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IsForcePersonal", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_IsForcePersonal", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IsForcePersonal", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_FPRetirementRankId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FPRetirementRankId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_FPRetirementRankId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FPRetirementRankId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_vcRank", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vcRank", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_vcRank", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vcRank", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_FPRetirementDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FPRetirementDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_FPRetirementDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FPRetirementDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_FPJobDescription", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FPJobDescription", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_FPJobDescription", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FPJobDescription", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_FPCorpsId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FPCorpsId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_FPCorpsId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FPCorpsId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_GuardianName", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GuardianName", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_GuardianName", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GuardianName", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_GuardianRelationId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GuardianRelationId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_GuardianRelationId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GuardianRelationId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_GuardianNIC", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GuardianNIC", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_GuardianNIC", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GuardianNIC", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_GuardianPhone", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GuardianPhone", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_GuardianPhone", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GuardianPhone", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_GuardianAddress", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GuardianAddress", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_GuardianAddress", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GuardianAddress", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DepartmentId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DepartmentId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DepartmentId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DepartmentId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_BranchId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BranchId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_BranchId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BranchId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_BusinessUnitId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BusinessUnitId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_BusinessUnitId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BusinessUnitId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Scale", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Scale", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Scale", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Scale", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_IsActive", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IsActive", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_IsActive", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IsActive", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CurrentStateId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CurrentStateId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CurrentStateId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CurrentStateId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_IsTechnical", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IsTechnical", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_vcRemarks", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vcRemarks", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_vcRemarks", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vcRemarks", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_vcPosting", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vcPosting", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_vcPosting", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vcPosting", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_dtmRenewalDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "dtmRenewalDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_dtmRenewalDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "dtmRenewalDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_dtmRetirementDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "dtmRetirementDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_dtmRetirementDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "dtmRetirementDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ClerkEmpNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ClerkEmpNo", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ClerkEmpNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ClerkEmpNo", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_RecommendedByEmpNo1", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RecommendedByEmpNo1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_RecommendedByEmpNo1", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RecommendedByEmpNo1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_RecommendedByEmpNo2", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RecommendedByEmpNo2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_RecommendedByEmpNo2", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RecommendedByEmpNo2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_SanctionedByEmpNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SanctionedByEmpNo", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_SanctionedByEmpNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SanctionedByEmpNo", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_GMEmpNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GMEmpNo", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_GMEmpNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GMEmpNo", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ManagerEmpNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ManagerEmpNo", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ManagerEmpNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ManagerEmpNo", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_nSectionId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nSectionId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_vcVehicleAccCode", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vcVehicleAccCode", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_vcMobileAccCode", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vcMobileAccCode", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_RoEmpNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RoEmpNo", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_RoEmpNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RoEmpNo", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_SroEmpNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SroEmpNo", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_SroEmpNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SroEmpNo", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_AttVerificationEmpNo1", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AttVerificationEmpNo1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_AttVerificationEmpNo1", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AttVerificationEmpNo1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_AttVerificationEmpNo2", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AttVerificationEmpNo2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_AttVerificationEmpNo2", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AttVerificationEmpNo2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_AttApprovingEmpNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AttApprovingEmpNo", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_AttApprovingEmpNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AttApprovingEmpNo", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_nBirthCountry", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nBirthCountry", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_nBirthCountry", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nBirthCountry", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_nBirthCity", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nBirthCity", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_nBirthCity", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nBirthCity", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_nPreviousEmpId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nPreviousEmpId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_nPreviousEmpId", Global.System.Data.Odbc.OdbcType.BigInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nPreviousEmpId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_nsStatusId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nsStatusId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_nsStatusId", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nsStatusId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PassportCountryId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PassportCountryId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PassportCountryId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PassportCountryId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [ERP_FCCL_21_Aug_15].[dbo].[EM_Employee] ([Id], [EmployeeNo], [FirstN"& _ 
                "ame], [MiddleName], [LastName], [FullName], [FatherName], [Gender], [Religion], "& _ 
                "[DateOfBirth], [BloodGroup], [MaritalStatus], [MaritalStatusEffectiveDate], [Old"& _ 
                "NICNo], [NewNICNo], [NationalTaxNo], [DrivingLicenseNo], [PassportNo], [Passport"& _ 
                "IssueDate], [PassportExpiryDate], [ContractTypeId], [EmployeeTypeId], [Designati"& _ 
                "onId], [EmployeeGradeId], [GradeEffectiveDate], [ProbationEndDate], [JoiningDate"& _ 
                "], [ConfirmationDate], [ContractStartDate], [ContractEndDate], [Category], [JobD"& _ 
                "escription], [ContactPresentAddress], [ContactPresentCountryId], [ContactPresent"& _ 
                "CityId], [ContactPresentPhone], [ContactPresentMobile], [ContactPermanentAddress"& _ 
                "], [ContactPermanentCountryId], [ContactPermanentCityId], [ContactPermanentPhone"& _ 
                "], [ContactPersonalEmail], [ContactOfficialEmail], [CreditCardNo], [Picture], [I"& _ 
                "mageType], [NationalityId], [DomicileId], [HeadOfDepartmentId], [SupervisorEmplo"& _ 
                "yeeId], [IsHeadOfDepartment], [IsForcePersonal], [FPRetirementRankId], [vcRank],"& _ 
                " [FPRetirementDate], [FPJobDescription], [FPCorpsId], [GuardianName], [GuardianR"& _ 
                "elationId], [GuardianNIC], [GuardianPhone], [GuardianAddress], [DepartmentId], ["& _ 
                "BranchId], [BusinessUnitId], [Scale], [IsActive], [CurrentStateId], [IsTechnical"& _ 
                "], [vcRemarks], [vcPosting], [dtmRenewalDate], [dtmRetirementDate], [ClerkEmpNo]"& _ 
                ", [RecommendedByEmpNo1], [RecommendedByEmpNo2], [SanctionedByEmpNo], [GMEmpNo], "& _ 
                "[ManagerEmpNo], [nSectionId], [vcVehicleAccCode], [vcMobileAccCode], [RoEmpNo], "& _ 
                "[SroEmpNo], [AttVerificationEmpNo1], [AttVerificationEmpNo2], [AttApprovingEmpNo"& _ 
                "], [nBirthCountry], [nBirthCity], [nPreviousEmpId], [nsStatusId], [PassportCount"& _ 
                "ryId]) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,"& _ 
                " ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?"& _ 
                ", ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, "& _ 
                "?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Id", Global.System.Data.Odbc.OdbcType.BigInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Id", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("EmployeeNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EmployeeNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("FirstName", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FirstName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("MiddleName", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "MiddleName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LastName", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LastName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("FullName", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FullName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("FatherName", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FatherName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Gender", Global.System.Data.Odbc.OdbcType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Gender", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Religion", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Religion", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DateOfBirth", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DateOfBirth", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BloodGroup", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BloodGroup", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("MaritalStatus", Global.System.Data.Odbc.OdbcType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "MaritalStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("MaritalStatusEffectiveDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "MaritalStatusEffectiveDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("OldNICNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OldNICNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("NewNICNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NewNICNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("NationalTaxNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NationalTaxNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DrivingLicenseNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DrivingLicenseNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PassportNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PassportNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PassportIssueDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PassportIssueDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PassportExpiryDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PassportExpiryDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ContractTypeId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContractTypeId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("EmployeeTypeId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EmployeeTypeId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DesignationId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DesignationId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("EmployeeGradeId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EmployeeGradeId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("GradeEffectiveDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GradeEffectiveDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ProbationEndDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ProbationEndDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("JoiningDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "JoiningDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ConfirmationDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ConfirmationDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ContractStartDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContractStartDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ContractEndDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContractEndDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Category", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Category", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("JobDescription", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "JobDescription", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ContactPresentAddress", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPresentAddress", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ContactPresentCountryId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPresentCountryId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ContactPresentCityId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPresentCityId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ContactPresentPhone", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPresentPhone", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ContactPresentMobile", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPresentMobile", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ContactPermanentAddress", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPermanentAddress", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ContactPermanentCountryId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPermanentCountryId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ContactPermanentCityId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPermanentCityId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ContactPermanentPhone", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPermanentPhone", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ContactPersonalEmail", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPersonalEmail", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ContactOfficialEmail", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactOfficialEmail", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CreditCardNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CreditCardNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Picture", Global.System.Data.Odbc.OdbcType.Image, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Picture", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ImageType", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ImageType", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("NationalityId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NationalityId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DomicileId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DomicileId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("HeadOfDepartmentId", Global.System.Data.Odbc.OdbcType.BigInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HeadOfDepartmentId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("SupervisorEmployeeId", Global.System.Data.Odbc.OdbcType.BigInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SupervisorEmployeeId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsHeadOfDepartment", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IsHeadOfDepartment", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsForcePersonal", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IsForcePersonal", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("FPRetirementRankId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FPRetirementRankId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("vcRank", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vcRank", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("FPRetirementDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FPRetirementDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("FPJobDescription", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FPJobDescription", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("FPCorpsId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FPCorpsId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("GuardianName", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GuardianName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("GuardianRelationId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GuardianRelationId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("GuardianNIC", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GuardianNIC", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("GuardianPhone", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GuardianPhone", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("GuardianAddress", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GuardianAddress", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DepartmentId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DepartmentId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BranchId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BranchId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BusinessUnitId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BusinessUnitId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Scale", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Scale", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsActive", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IsActive", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CurrentStateId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CurrentStateId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsTechnical", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IsTechnical", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("vcRemarks", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vcRemarks", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("vcPosting", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vcPosting", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("dtmRenewalDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "dtmRenewalDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("dtmRetirementDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "dtmRetirementDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ClerkEmpNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ClerkEmpNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("RecommendedByEmpNo1", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RecommendedByEmpNo1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("RecommendedByEmpNo2", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RecommendedByEmpNo2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("SanctionedByEmpNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SanctionedByEmpNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("GMEmpNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GMEmpNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ManagerEmpNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ManagerEmpNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("nSectionId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nSectionId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("vcVehicleAccCode", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vcVehicleAccCode", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("vcMobileAccCode", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vcMobileAccCode", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("RoEmpNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RoEmpNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("SroEmpNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SroEmpNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("AttVerificationEmpNo1", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AttVerificationEmpNo1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("AttVerificationEmpNo2", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AttVerificationEmpNo2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("AttApprovingEmpNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AttApprovingEmpNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("nBirthCountry", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nBirthCountry", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("nBirthCity", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nBirthCity", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("nPreviousEmpId", Global.System.Data.Odbc.OdbcType.BigInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nPreviousEmpId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("nsStatusId", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nsStatusId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PassportCountryId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PassportCountryId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [ERP_FCCL_21_Aug_15].[dbo].[EM_Employee] SET [Id] = ?, [EmployeeNo] = ?, ["& _ 
                "FirstName] = ?, [MiddleName] = ?, [LastName] = ?, [FullName] = ?, [FatherName] ="& _ 
                " ?, [Gender] = ?, [Religion] = ?, [DateOfBirth] = ?, [BloodGroup] = ?, [MaritalS"& _ 
                "tatus] = ?, [MaritalStatusEffectiveDate] = ?, [OldNICNo] = ?, [NewNICNo] = ?, [N"& _ 
                "ationalTaxNo] = ?, [DrivingLicenseNo] = ?, [PassportNo] = ?, [PassportIssueDate]"& _ 
                " = ?, [PassportExpiryDate] = ?, [ContractTypeId] = ?, [EmployeeTypeId] = ?, [Des"& _ 
                "ignationId] = ?, [EmployeeGradeId] = ?, [GradeEffectiveDate] = ?, [ProbationEndD"& _ 
                "ate] = ?, [JoiningDate] = ?, [ConfirmationDate] = ?, [ContractStartDate] = ?, [C"& _ 
                "ontractEndDate] = ?, [Category] = ?, [JobDescription] = ?, [ContactPresentAddres"& _ 
                "s] = ?, [ContactPresentCountryId] = ?, [ContactPresentCityId] = ?, [ContactPrese"& _ 
                "ntPhone] = ?, [ContactPresentMobile] = ?, [ContactPermanentAddress] = ?, [Contac"& _ 
                "tPermanentCountryId] = ?, [ContactPermanentCityId] = ?, [ContactPermanentPhone] "& _ 
                "= ?, [ContactPersonalEmail] = ?, [ContactOfficialEmail] = ?, [CreditCardNo] = ?,"& _ 
                " [Picture] = ?, [ImageType] = ?, [NationalityId] = ?, [DomicileId] = ?, [HeadOfD"& _ 
                "epartmentId] = ?, [SupervisorEmployeeId] = ?, [IsHeadOfDepartment] = ?, [IsForce"& _ 
                "Personal] = ?, [FPRetirementRankId] = ?, [vcRank] = ?, [FPRetirementDate] = ?, ["& _ 
                "FPJobDescription] = ?, [FPCorpsId] = ?, [GuardianName] = ?, [GuardianRelationId]"& _ 
                " = ?, [GuardianNIC] = ?, [GuardianPhone] = ?, [GuardianAddress] = ?, [Department"& _ 
                "Id] = ?, [BranchId] = ?, [BusinessUnitId] = ?, [Scale] = ?, [IsActive] = ?, [Cur"& _ 
                "rentStateId] = ?, [IsTechnical] = ?, [vcRemarks] = ?, [vcPosting] = ?, [dtmRenew"& _ 
                "alDate] = ?, [dtmRetirementDate] = ?, [ClerkEmpNo] = ?, [RecommendedByEmpNo1] = "& _ 
                "?, [RecommendedByEmpNo2] = ?, [SanctionedByEmpNo] = ?, [GMEmpNo] = ?, [ManagerEm"& _ 
                "pNo] = ?, [nSectionId] = ?, [vcVehicleAccCode] = ?, [vcMobileAccCode] = ?, [RoEm"& _ 
                "pNo] = ?, [SroEmpNo] = ?, [AttVerificationEmpNo1] = ?, [AttVerificationEmpNo2] ="& _ 
                " ?, [AttApprovingEmpNo] = ?, [nBirthCountry] = ?, [nBirthCity] = ?, [nPreviousEm"& _ 
                "pId] = ?, [nsStatusId] = ?, [PassportCountryId] = ? WHERE (([Id] = ?) AND ([Empl"& _ 
                "oyeeNo] = ?) AND ((? = 1 AND [FirstName] IS NULL) OR ([FirstName] = ?)) AND ((? "& _ 
                "= 1 AND [MiddleName] IS NULL) OR ([MiddleName] = ?)) AND ((? = 1 AND [LastName] "& _ 
                "IS NULL) OR ([LastName] = ?)) AND ((? = 1 AND [FullName] IS NULL) OR ([FullName]"& _ 
                " = ?)) AND ((? = 1 AND [FatherName] IS NULL) OR ([FatherName] = ?)) AND ((? = 1 "& _ 
                "AND [Gender] IS NULL) OR ([Gender] = ?)) AND ((? = 1 AND [Religion] IS NULL) OR "& _ 
                "([Religion] = ?)) AND ((? = 1 AND [DateOfBirth] IS NULL) OR ([DateOfBirth] = ?))"& _ 
                " AND ((? = 1 AND [BloodGroup] IS NULL) OR ([BloodGroup] = ?)) AND ((? = 1 AND [M"& _ 
                "aritalStatus] IS NULL) OR ([MaritalStatus] = ?)) AND ((? = 1 AND [MaritalStatusE"& _ 
                "ffectiveDate] IS NULL) OR ([MaritalStatusEffectiveDate] = ?)) AND ((? = 1 AND [O"& _ 
                "ldNICNo] IS NULL) OR ([OldNICNo] = ?)) AND ((? = 1 AND [NewNICNo] IS NULL) OR (["& _ 
                "NewNICNo] = ?)) AND ((? = 1 AND [NationalTaxNo] IS NULL) OR ([NationalTaxNo] = ?"& _ 
                ")) AND ((? = 1 AND [DrivingLicenseNo] IS NULL) OR ([DrivingLicenseNo] = ?)) AND "& _ 
                "((? = 1 AND [PassportNo] IS NULL) OR ([PassportNo] = ?)) AND ((? = 1 AND [Passpo"& _ 
                "rtIssueDate] IS NULL) OR ([PassportIssueDate] = ?)) AND ((? = 1 AND [PassportExp"& _ 
                "iryDate] IS NULL) OR ([PassportExpiryDate] = ?)) AND ((? = 1 AND [ContractTypeId"& _ 
                "] IS NULL) OR ([ContractTypeId] = ?)) AND ((? = 1 AND [EmployeeTypeId] IS NULL) "& _ 
                "OR ([EmployeeTypeId] = ?)) AND ((? = 1 AND [DesignationId] IS NULL) OR ([Designa"& _ 
                "tionId] = ?)) AND ((? = 1 AND [EmployeeGradeId] IS NULL) OR ([EmployeeGradeId] ="& _ 
                " ?)) AND ((? = 1 AND [GradeEffectiveDate] IS NULL) OR ([GradeEffectiveDate] = ?)"& _ 
                ") AND ((? = 1 AND [ProbationEndDate] IS NULL) OR ([ProbationEndDate] = ?)) AND ("& _ 
                "(? = 1 AND [JoiningDate] IS NULL) OR ([JoiningDate] = ?)) AND ((? = 1 AND [Confi"& _ 
                "rmationDate] IS NULL) OR ([ConfirmationDate] = ?)) AND ((? = 1 AND [ContractStar"& _ 
                "tDate] IS NULL) OR ([ContractStartDate] = ?)) AND ((? = 1 AND [ContractEndDate] "& _ 
                "IS NULL) OR ([ContractEndDate] = ?)) AND ((? = 1 AND [Category] IS NULL) OR ([Ca"& _ 
                "tegory] = ?)) AND ((? = 1 AND [JobDescription] IS NULL) OR ([JobDescription] = ?"& _ 
                ")) AND ((? = 1 AND [ContactPresentAddress] IS NULL) OR ([ContactPresentAddress] "& _ 
                "= ?)) AND ((? = 1 AND [ContactPresentCountryId] IS NULL) OR ([ContactPresentCoun"& _ 
                "tryId] = ?)) AND ((? = 1 AND [ContactPresentCityId] IS NULL) OR ([ContactPresent"& _ 
                "CityId] = ?)) AND ((? = 1 AND [ContactPresentPhone] IS NULL) OR ([ContactPresent"& _ 
                "Phone] = ?)) AND ((? = 1 AND [ContactPresentMobile] IS NULL) OR ([ContactPresent"& _ 
                "Mobile] = ?)) AND ((? = 1 AND [ContactPermanentAddress] IS NULL) OR ([ContactPer"& _ 
                "manentAddress] = ?)) AND ((? = 1 AND [ContactPermanentCountryId] IS NULL) OR ([C"& _ 
                "ontactPermanentCountryId] = ?)) AND ((? = 1 AND [ContactPermanentCityId] IS NULL"& _ 
                ") OR ([ContactPermanentCityId] = ?)) AND ((? = 1 AND [ContactPermanentPhone] IS "& _ 
                "NULL) OR ([ContactPermanentPhone] = ?)) AND ((? = 1 AND [ContactPersonalEmail] I"& _ 
                "S NULL) OR ([ContactPersonalEmail] = ?)) AND ((? = 1 AND [ContactOfficialEmail] "& _ 
                "IS NULL) OR ([ContactOfficialEmail] = ?)) AND ((? = 1 AND [CreditCardNo] IS NULL"& _ 
                ") OR ([CreditCardNo] = ?)) AND ((? = 1 AND [ImageType] IS NULL) OR ([ImageType] "& _ 
                "= ?)) AND ((? = 1 AND [NationalityId] IS NULL) OR ([NationalityId] = ?)) AND ((?"& _ 
                " = 1 AND [DomicileId] IS NULL) OR ([DomicileId] = ?)) AND ((? = 1 AND [HeadOfDep"& _ 
                "artmentId] IS NULL) OR ([HeadOfDepartmentId] = ?)) AND ((? = 1 AND [SupervisorEm"& _ 
                "ployeeId] IS NULL) OR ([SupervisorEmployeeId] = ?)) AND ((? = 1 AND [IsHeadOfDep"& _ 
                "artment] IS NULL) OR ([IsHeadOfDepartment] = ?)) AND ((? = 1 AND [IsForcePersona"& _ 
                "l] IS NULL) OR ([IsForcePersonal] = ?)) AND ((? = 1 AND [FPRetirementRankId] IS "& _ 
                "NULL) OR ([FPRetirementRankId] = ?)) AND ((? = 1 AND [vcRank] IS NULL) OR ([vcRa"& _ 
                "nk] = ?)) AND ((? = 1 AND [FPRetirementDate] IS NULL) OR ([FPRetirementDate] = ?"& _ 
                ")) AND ((? = 1 AND [FPJobDescription] IS NULL) OR ([FPJobDescription] = ?)) AND "& _ 
                "((? = 1 AND [FPCorpsId] IS NULL) OR ([FPCorpsId] = ?)) AND ((? = 1 AND [Guardian"& _ 
                "Name] IS NULL) OR ([GuardianName] = ?)) AND ((? = 1 AND [GuardianRelationId] IS "& _ 
                "NULL) OR ([GuardianRelationId] = ?)) AND ((? = 1 AND [GuardianNIC] IS NULL) OR ("& _ 
                "[GuardianNIC] = ?)) AND ((? = 1 AND [GuardianPhone] IS NULL) OR ([GuardianPhone]"& _ 
                " = ?)) AND ((? = 1 AND [GuardianAddress] IS NULL) OR ([GuardianAddress] = ?)) AN"& _ 
                "D ((? = 1 AND [DepartmentId] IS NULL) OR ([DepartmentId] = ?)) AND ((? = 1 AND ["& _ 
                "BranchId] IS NULL) OR ([BranchId] = ?)) AND ((? = 1 AND [BusinessUnitId] IS NULL"& _ 
                ") OR ([BusinessUnitId] = ?)) AND ((? = 1 AND [Scale] IS NULL) OR ([Scale] = ?)) "& _ 
                "AND ((? = 1 AND [IsActive] IS NULL) OR ([IsActive] = ?)) AND ((? = 1 AND [Curren"& _ 
                "tStateId] IS NULL) OR ([CurrentStateId] = ?)) AND ([IsTechnical] = ?) AND ((? = "& _ 
                "1 AND [vcRemarks] IS NULL) OR ([vcRemarks] = ?)) AND ((? = 1 AND [vcPosting] IS "& _ 
                "NULL) OR ([vcPosting] = ?)) AND ((? = 1 AND [dtmRenewalDate] IS NULL) OR ([dtmRe"& _ 
                "newalDate] = ?)) AND ((? = 1 AND [dtmRetirementDate] IS NULL) OR ([dtmRetirement"& _ 
                "Date] = ?)) AND ((? = 1 AND [ClerkEmpNo] IS NULL) OR ([ClerkEmpNo] = ?)) AND ((?"& _ 
                " = 1 AND [RecommendedByEmpNo1] IS NULL) OR ([RecommendedByEmpNo1] = ?)) AND ((? "& _ 
                "= 1 AND [RecommendedByEmpNo2] IS NULL) OR ([RecommendedByEmpNo2] = ?)) AND ((? ="& _ 
                " 1 AND [SanctionedByEmpNo] IS NULL) OR ([SanctionedByEmpNo] = ?)) AND ((? = 1 AN"& _ 
                "D [GMEmpNo] IS NULL) OR ([GMEmpNo] = ?)) AND ((? = 1 AND [ManagerEmpNo] IS NULL)"& _ 
                " OR ([ManagerEmpNo] = ?)) AND ([nSectionId] = ?) AND ([vcVehicleAccCode] = ?) AN"& _ 
                "D ([vcMobileAccCode] = ?) AND ((? = 1 AND [RoEmpNo] IS NULL) OR ([RoEmpNo] = ?))"& _ 
                " AND ((? = 1 AND [SroEmpNo] IS NULL) OR ([SroEmpNo] = ?)) AND ((? = 1 AND [AttVe"& _ 
                "rificationEmpNo1] IS NULL) OR ([AttVerificationEmpNo1] = ?)) AND ((? = 1 AND [At"& _ 
                "tVerificationEmpNo2] IS NULL) OR ([AttVerificationEmpNo2] = ?)) AND ((? = 1 AND "& _ 
                "[AttApprovingEmpNo] IS NULL) OR ([AttApprovingEmpNo] = ?)) AND ((? = 1 AND [nBir"& _ 
                "thCountry] IS NULL) OR ([nBirthCountry] = ?)) AND ((? = 1 AND [nBirthCity] IS NU"& _ 
                "LL) OR ([nBirthCity] = ?)) AND ((? = 1 AND [nPreviousEmpId] IS NULL) OR ([nPrevi"& _ 
                "ousEmpId] = ?)) AND ((? = 1 AND [nsStatusId] IS NULL) OR ([nsStatusId] = ?)) AND"& _ 
                " ((? = 1 AND [PassportCountryId] IS NULL) OR ([PassportCountryId] = ?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Id", Global.System.Data.Odbc.OdbcType.BigInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Id", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("EmployeeNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EmployeeNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("FirstName", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FirstName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("MiddleName", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "MiddleName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LastName", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LastName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("FullName", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FullName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("FatherName", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FatherName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Gender", Global.System.Data.Odbc.OdbcType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Gender", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Religion", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Religion", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DateOfBirth", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DateOfBirth", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BloodGroup", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BloodGroup", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("MaritalStatus", Global.System.Data.Odbc.OdbcType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "MaritalStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("MaritalStatusEffectiveDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "MaritalStatusEffectiveDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("OldNICNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OldNICNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("NewNICNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NewNICNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("NationalTaxNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NationalTaxNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DrivingLicenseNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DrivingLicenseNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PassportNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PassportNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PassportIssueDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PassportIssueDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PassportExpiryDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PassportExpiryDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ContractTypeId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContractTypeId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("EmployeeTypeId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EmployeeTypeId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DesignationId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DesignationId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("EmployeeGradeId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EmployeeGradeId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("GradeEffectiveDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GradeEffectiveDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ProbationEndDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ProbationEndDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("JoiningDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "JoiningDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ConfirmationDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ConfirmationDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ContractStartDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContractStartDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ContractEndDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContractEndDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Category", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Category", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("JobDescription", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "JobDescription", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ContactPresentAddress", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPresentAddress", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ContactPresentCountryId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPresentCountryId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ContactPresentCityId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPresentCityId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ContactPresentPhone", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPresentPhone", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ContactPresentMobile", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPresentMobile", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ContactPermanentAddress", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPermanentAddress", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ContactPermanentCountryId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPermanentCountryId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ContactPermanentCityId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPermanentCityId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ContactPermanentPhone", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPermanentPhone", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ContactPersonalEmail", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPersonalEmail", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ContactOfficialEmail", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactOfficialEmail", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CreditCardNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CreditCardNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Picture", Global.System.Data.Odbc.OdbcType.Image, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Picture", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ImageType", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ImageType", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("NationalityId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NationalityId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DomicileId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DomicileId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("HeadOfDepartmentId", Global.System.Data.Odbc.OdbcType.BigInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HeadOfDepartmentId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("SupervisorEmployeeId", Global.System.Data.Odbc.OdbcType.BigInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SupervisorEmployeeId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsHeadOfDepartment", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IsHeadOfDepartment", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsForcePersonal", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IsForcePersonal", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("FPRetirementRankId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FPRetirementRankId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("vcRank", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vcRank", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("FPRetirementDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FPRetirementDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("FPJobDescription", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FPJobDescription", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("FPCorpsId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FPCorpsId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("GuardianName", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GuardianName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("GuardianRelationId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GuardianRelationId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("GuardianNIC", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GuardianNIC", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("GuardianPhone", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GuardianPhone", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("GuardianAddress", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GuardianAddress", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DepartmentId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DepartmentId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BranchId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BranchId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BusinessUnitId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BusinessUnitId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Scale", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Scale", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsActive", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IsActive", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CurrentStateId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CurrentStateId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsTechnical", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IsTechnical", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("vcRemarks", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vcRemarks", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("vcPosting", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vcPosting", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("dtmRenewalDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "dtmRenewalDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("dtmRetirementDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "dtmRetirementDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ClerkEmpNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ClerkEmpNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("RecommendedByEmpNo1", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RecommendedByEmpNo1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("RecommendedByEmpNo2", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RecommendedByEmpNo2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("SanctionedByEmpNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SanctionedByEmpNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("GMEmpNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GMEmpNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ManagerEmpNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ManagerEmpNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("nSectionId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nSectionId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("vcVehicleAccCode", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vcVehicleAccCode", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("vcMobileAccCode", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vcMobileAccCode", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("RoEmpNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RoEmpNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("SroEmpNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SroEmpNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("AttVerificationEmpNo1", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AttVerificationEmpNo1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("AttVerificationEmpNo2", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AttVerificationEmpNo2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("AttApprovingEmpNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AttApprovingEmpNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("nBirthCountry", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nBirthCountry", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("nBirthCity", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nBirthCity", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("nPreviousEmpId", Global.System.Data.Odbc.OdbcType.BigInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nPreviousEmpId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("nsStatusId", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nsStatusId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PassportCountryId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PassportCountryId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Id", Global.System.Data.Odbc.OdbcType.BigInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Id", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_EmployeeNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EmployeeNo", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_FirstName", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FirstName", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_FirstName", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FirstName", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_MiddleName", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "MiddleName", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_MiddleName", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "MiddleName", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_LastName", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LastName", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LastName", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LastName", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_FullName", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FullName", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_FullName", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FullName", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_FatherName", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FatherName", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_FatherName", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FatherName", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Gender", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Gender", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Gender", Global.System.Data.Odbc.OdbcType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Gender", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Religion", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Religion", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Religion", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Religion", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DateOfBirth", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DateOfBirth", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DateOfBirth", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DateOfBirth", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_BloodGroup", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BloodGroup", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_BloodGroup", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BloodGroup", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_MaritalStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "MaritalStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_MaritalStatus", Global.System.Data.Odbc.OdbcType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "MaritalStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_MaritalStatusEffectiveDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "MaritalStatusEffectiveDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_MaritalStatusEffectiveDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "MaritalStatusEffectiveDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_OldNICNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OldNICNo", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_OldNICNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OldNICNo", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_NewNICNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NewNICNo", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_NewNICNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NewNICNo", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_NationalTaxNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NationalTaxNo", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_NationalTaxNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NationalTaxNo", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DrivingLicenseNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DrivingLicenseNo", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DrivingLicenseNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DrivingLicenseNo", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PassportNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PassportNo", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PassportNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PassportNo", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PassportIssueDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PassportIssueDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PassportIssueDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PassportIssueDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PassportExpiryDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PassportExpiryDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PassportExpiryDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PassportExpiryDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ContractTypeId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContractTypeId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ContractTypeId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContractTypeId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_EmployeeTypeId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EmployeeTypeId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_EmployeeTypeId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EmployeeTypeId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DesignationId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DesignationId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DesignationId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DesignationId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_EmployeeGradeId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EmployeeGradeId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_EmployeeGradeId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EmployeeGradeId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_GradeEffectiveDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GradeEffectiveDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_GradeEffectiveDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GradeEffectiveDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ProbationEndDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ProbationEndDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ProbationEndDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ProbationEndDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_JoiningDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "JoiningDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_JoiningDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "JoiningDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ConfirmationDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ConfirmationDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ConfirmationDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ConfirmationDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ContractStartDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContractStartDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ContractStartDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContractStartDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ContractEndDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContractEndDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ContractEndDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContractEndDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Category", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Category", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Category", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Category", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_JobDescription", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "JobDescription", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_JobDescription", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "JobDescription", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ContactPresentAddress", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPresentAddress", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ContactPresentAddress", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPresentAddress", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ContactPresentCountryId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPresentCountryId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ContactPresentCountryId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPresentCountryId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ContactPresentCityId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPresentCityId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ContactPresentCityId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPresentCityId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ContactPresentPhone", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPresentPhone", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ContactPresentPhone", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPresentPhone", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ContactPresentMobile", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPresentMobile", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ContactPresentMobile", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPresentMobile", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ContactPermanentAddress", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPermanentAddress", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ContactPermanentAddress", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPermanentAddress", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ContactPermanentCountryId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPermanentCountryId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ContactPermanentCountryId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPermanentCountryId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ContactPermanentCityId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPermanentCityId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ContactPermanentCityId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPermanentCityId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ContactPermanentPhone", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPermanentPhone", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ContactPermanentPhone", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPermanentPhone", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ContactPersonalEmail", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPersonalEmail", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ContactPersonalEmail", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactPersonalEmail", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ContactOfficialEmail", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactOfficialEmail", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ContactOfficialEmail", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ContactOfficialEmail", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CreditCardNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CreditCardNo", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CreditCardNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CreditCardNo", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ImageType", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ImageType", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ImageType", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ImageType", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_NationalityId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NationalityId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_NationalityId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NationalityId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DomicileId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DomicileId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DomicileId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DomicileId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_HeadOfDepartmentId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HeadOfDepartmentId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_HeadOfDepartmentId", Global.System.Data.Odbc.OdbcType.BigInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HeadOfDepartmentId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_SupervisorEmployeeId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SupervisorEmployeeId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_SupervisorEmployeeId", Global.System.Data.Odbc.OdbcType.BigInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SupervisorEmployeeId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_IsHeadOfDepartment", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IsHeadOfDepartment", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_IsHeadOfDepartment", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IsHeadOfDepartment", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_IsForcePersonal", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IsForcePersonal", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_IsForcePersonal", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IsForcePersonal", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_FPRetirementRankId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FPRetirementRankId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_FPRetirementRankId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FPRetirementRankId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_vcRank", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vcRank", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_vcRank", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vcRank", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_FPRetirementDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FPRetirementDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_FPRetirementDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FPRetirementDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_FPJobDescription", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FPJobDescription", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_FPJobDescription", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FPJobDescription", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_FPCorpsId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FPCorpsId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_FPCorpsId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FPCorpsId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_GuardianName", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GuardianName", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_GuardianName", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GuardianName", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_GuardianRelationId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GuardianRelationId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_GuardianRelationId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GuardianRelationId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_GuardianNIC", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GuardianNIC", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_GuardianNIC", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GuardianNIC", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_GuardianPhone", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GuardianPhone", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_GuardianPhone", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GuardianPhone", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_GuardianAddress", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GuardianAddress", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_GuardianAddress", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GuardianAddress", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DepartmentId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DepartmentId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DepartmentId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DepartmentId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_BranchId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BranchId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_BranchId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BranchId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_BusinessUnitId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BusinessUnitId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_BusinessUnitId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BusinessUnitId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Scale", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Scale", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Scale", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Scale", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_IsActive", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IsActive", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_IsActive", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IsActive", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CurrentStateId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CurrentStateId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CurrentStateId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CurrentStateId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_IsTechnical", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IsTechnical", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_vcRemarks", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vcRemarks", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_vcRemarks", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vcRemarks", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_vcPosting", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vcPosting", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_vcPosting", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vcPosting", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_dtmRenewalDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "dtmRenewalDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_dtmRenewalDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "dtmRenewalDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_dtmRetirementDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "dtmRetirementDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_dtmRetirementDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "dtmRetirementDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ClerkEmpNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ClerkEmpNo", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ClerkEmpNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ClerkEmpNo", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_RecommendedByEmpNo1", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RecommendedByEmpNo1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_RecommendedByEmpNo1", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RecommendedByEmpNo1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_RecommendedByEmpNo2", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RecommendedByEmpNo2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_RecommendedByEmpNo2", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RecommendedByEmpNo2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_SanctionedByEmpNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SanctionedByEmpNo", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_SanctionedByEmpNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SanctionedByEmpNo", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_GMEmpNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GMEmpNo", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_GMEmpNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GMEmpNo", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ManagerEmpNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ManagerEmpNo", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ManagerEmpNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ManagerEmpNo", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_nSectionId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nSectionId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_vcVehicleAccCode", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vcVehicleAccCode", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_vcMobileAccCode", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vcMobileAccCode", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_RoEmpNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RoEmpNo", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_RoEmpNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RoEmpNo", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_SroEmpNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SroEmpNo", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_SroEmpNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SroEmpNo", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_AttVerificationEmpNo1", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AttVerificationEmpNo1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_AttVerificationEmpNo1", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AttVerificationEmpNo1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_AttVerificationEmpNo2", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AttVerificationEmpNo2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_AttVerificationEmpNo2", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AttVerificationEmpNo2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_AttApprovingEmpNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AttApprovingEmpNo", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_AttApprovingEmpNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AttApprovingEmpNo", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_nBirthCountry", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nBirthCountry", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_nBirthCountry", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nBirthCountry", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_nBirthCity", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nBirthCity", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_nBirthCity", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nBirthCity", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_nPreviousEmpId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nPreviousEmpId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_nPreviousEmpId", Global.System.Data.Odbc.OdbcType.BigInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nPreviousEmpId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_nsStatusId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nsStatusId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_nsStatusId", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nsStatusId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PassportCountryId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PassportCountryId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PassportCountryId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PassportCountryId", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.HR.My.MySettings.Default.csFCCL
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Id, EmployeeNo, FirstName, MiddleName, LastName, FullName, FatherName, Gen"& _ 
                "der, Religion, DateOfBirth, BloodGroup, MaritalStatus, MaritalStatusEffectiveDat"& _ 
                "e, OldNICNo, NewNICNo, NationalTaxNo, DrivingLicenseNo, PassportNo, PassportIssu"& _ 
                "eDate, PassportExpiryDate, ContractTypeId, EmployeeTypeId, DesignationId, Employ"& _ 
                "eeGradeId, GradeEffectiveDate, ProbationEndDate, JoiningDate, ConfirmationDate, "& _ 
                "ContractStartDate, ContractEndDate, Category, JobDescription, ContactPresentAddr"& _ 
                "ess, ContactPresentCountryId, ContactPresentCityId, ContactPresentPhone, Contact"& _ 
                "PresentMobile, ContactPermanentAddress, ContactPermanentCountryId, ContactPerman"& _ 
                "entCityId, ContactPermanentPhone, ContactPersonalEmail, ContactOfficialEmail, Cr"& _ 
                "editCardNo, Picture, ImageType, NationalityId, DomicileId, HeadOfDepartmentId, S"& _ 
                "upervisorEmployeeId, IsHeadOfDepartment, IsForcePersonal, FPRetirementRankId, vc"& _ 
                "Rank, FPRetirementDate, FPJobDescription, FPCorpsId, GuardianName, GuardianRelat"& _ 
                "ionId, GuardianNIC, GuardianPhone, GuardianAddress, DepartmentId, BranchId, Busi"& _ 
                "nessUnitId, Scale, IsActive, CurrentStateId, IsTechnical, vcRemarks, vcPosting, "& _ 
                "dtmRenewalDate, dtmRetirementDate, ClerkEmpNo, RecommendedByEmpNo1, RecommendedB"& _ 
                "yEmpNo2, SanctionedByEmpNo, GMEmpNo, ManagerEmpNo, nSectionId, vcVehicleAccCode,"& _ 
                " vcMobileAccCode, RoEmpNo, SroEmpNo, AttVerificationEmpNo1, AttVerificationEmpNo"& _ 
                "2, AttApprovingEmpNo, nBirthCountry, nBirthCity, nPreviousEmpId, nsStatusId, Pas"& _ 
                "sportCountryId FROM dbo.EM_Employee"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsFCCL.EM_EmployeeDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsFCCL.EM_EmployeeDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsFCCL.EM_EmployeeDataTable = New dsFCCL.EM_EmployeeDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsFCCL.EM_EmployeeDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsFCCL) As Integer
            Return Me.Adapter.Update(dataSet, "EM_Employee")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_Id As Long,  _
                    ByVal Original_EmployeeNo As String,  _
                    ByVal Original_FirstName As String,  _
                    ByVal Original_MiddleName As String,  _
                    ByVal Original_LastName As String,  _
                    ByVal Original_FullName As String,  _
                    ByVal Original_FatherName As String,  _
                    ByVal Original_Gender As Global.System.Nullable(Of Byte),  _
                    ByVal Original_Religion As Global.System.Nullable(Of Integer),  _
                    ByVal Original_DateOfBirth As Global.System.Nullable(Of Date),  _
                    ByVal Original_BloodGroup As Global.System.Nullable(Of Integer),  _
                    ByVal Original_MaritalStatus As Global.System.Nullable(Of Byte),  _
                    ByVal Original_MaritalStatusEffectiveDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_OldNICNo As String,  _
                    ByVal Original_NewNICNo As String,  _
                    ByVal Original_NationalTaxNo As String,  _
                    ByVal Original_DrivingLicenseNo As String,  _
                    ByVal Original_PassportNo As String,  _
                    ByVal Original_PassportIssueDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_PassportExpiryDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_ContractTypeId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_EmployeeTypeId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_DesignationId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_EmployeeGradeId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_GradeEffectiveDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_ProbationEndDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_JoiningDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_ConfirmationDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_ContractStartDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_ContractEndDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_Category As Global.System.Nullable(Of Integer),  _
                    ByVal Original_JobDescription As String,  _
                    ByVal Original_ContactPresentAddress As String,  _
                    ByVal Original_ContactPresentCountryId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ContactPresentCityId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ContactPresentPhone As String,  _
                    ByVal Original_ContactPresentMobile As String,  _
                    ByVal Original_ContactPermanentAddress As String,  _
                    ByVal Original_ContactPermanentCountryId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ContactPermanentCityId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ContactPermanentPhone As String,  _
                    ByVal Original_ContactPersonalEmail As String,  _
                    ByVal Original_ContactOfficialEmail As String,  _
                    ByVal Original_CreditCardNo As String,  _
                    ByVal Original_ImageType As String,  _
                    ByVal Original_NationalityId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_DomicileId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_HeadOfDepartmentId As Global.System.Nullable(Of Long),  _
                    ByVal Original_SupervisorEmployeeId As Global.System.Nullable(Of Long),  _
                    ByVal Original_IsHeadOfDepartment As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IsForcePersonal As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_FPRetirementRankId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_vcRank As String,  _
                    ByVal Original_FPRetirementDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_FPJobDescription As String,  _
                    ByVal Original_FPCorpsId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_GuardianName As String,  _
                    ByVal Original_GuardianRelationId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_GuardianNIC As String,  _
                    ByVal Original_GuardianPhone As String,  _
                    ByVal Original_GuardianAddress As String,  _
                    ByVal Original_DepartmentId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_BranchId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_BusinessUnitId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Scale As Global.System.Nullable(Of Integer),  _
                    ByVal Original_IsActive As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CurrentStateId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_IsTechnical As Short,  _
                    ByVal Original_vcRemarks As String,  _
                    ByVal Original_vcPosting As String,  _
                    ByVal Original_dtmRenewalDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_dtmRetirementDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_ClerkEmpNo As String,  _
                    ByVal Original_RecommendedByEmpNo1 As String,  _
                    ByVal Original_RecommendedByEmpNo2 As String,  _
                    ByVal Original_SanctionedByEmpNo As String,  _
                    ByVal Original_GMEmpNo As String,  _
                    ByVal Original_ManagerEmpNo As String,  _
                    ByVal Original_nSectionId As Integer,  _
                    ByVal Original_vcVehicleAccCode As String,  _
                    ByVal Original_vcMobileAccCode As String,  _
                    ByVal Original_RoEmpNo As String,  _
                    ByVal Original_SroEmpNo As String,  _
                    ByVal Original_AttVerificationEmpNo1 As String,  _
                    ByVal Original_AttVerificationEmpNo2 As String,  _
                    ByVal Original_AttApprovingEmpNo As String,  _
                    ByVal Original_nBirthCountry As Global.System.Nullable(Of Integer),  _
                    ByVal Original_nBirthCity As Global.System.Nullable(Of Integer),  _
                    ByVal Original_nPreviousEmpId As Global.System.Nullable(Of Long),  _
                    ByVal Original_nsStatusId As Global.System.Nullable(Of Short),  _
                    ByVal Original_PassportCountryId As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Id,Long)
            If (Original_EmployeeNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_EmployeeNo")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_EmployeeNo,String)
            End If
            If (Original_FirstName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_FirstName,String)
            End If
            If (Original_MiddleName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_MiddleName,String)
            End If
            If (Original_LastName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_LastName,String)
            End If
            If (Original_FullName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_FullName,String)
            End If
            If (Original_FatherName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_FatherName,String)
            End If
            If (Original_Gender.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_Gender.Value,Byte)
            Else
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Original_Religion.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_Religion.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Original_DateOfBirth.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_DateOfBirth.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Original_BloodGroup.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_BloodGroup.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (Original_MaritalStatus.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_MaritalStatus.Value,Byte)
            Else
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (Original_MaritalStatusEffectiveDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(Original_MaritalStatusEffectiveDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (Original_OldNICNo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(Original_OldNICNo,String)
            End If
            If (Original_NewNICNo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(Original_NewNICNo,String)
            End If
            If (Original_NationalTaxNo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(Original_NationalTaxNo,String)
            End If
            If (Original_DrivingLicenseNo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(Original_DrivingLicenseNo,String)
            End If
            If (Original_PassportNo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(Original_PassportNo,String)
            End If
            If (Original_PassportIssueDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(Original_PassportIssueDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (Original_PassportExpiryDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(Original_PassportExpiryDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (Original_ContractTypeId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(Original_ContractTypeId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (Original_EmployeeTypeId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(Original_EmployeeTypeId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (Original_DesignationId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(Original_DesignationId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (Original_EmployeeGradeId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(Original_EmployeeGradeId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (Original_GradeEffectiveDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(Original_GradeEffectiveDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (Original_ProbationEndDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(Original_ProbationEndDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (Original_JoiningDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(Original_JoiningDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (Original_ConfirmationDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(Original_ConfirmationDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(53).Value = Global.System.DBNull.Value
            End If
            If (Original_ContractStartDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(Original_ContractStartDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(55).Value = Global.System.DBNull.Value
            End If
            If (Original_ContractEndDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(Original_ContractEndDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(57).Value = Global.System.DBNull.Value
            End If
            If (Original_Category.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(Original_Category.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(59).Value = Global.System.DBNull.Value
            End If
            If (Original_JobDescription Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(61).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(Original_JobDescription,String)
            End If
            If (Original_ContactPresentAddress Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(63).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(Original_ContactPresentAddress,String)
            End If
            If (Original_ContactPresentCountryId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(Original_ContactPresentCountryId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(65).Value = Global.System.DBNull.Value
            End If
            If (Original_ContactPresentCityId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(Original_ContactPresentCityId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(67).Value = Global.System.DBNull.Value
            End If
            If (Original_ContactPresentPhone Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(69).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(Original_ContactPresentPhone,String)
            End If
            If (Original_ContactPresentMobile Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(70).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(71).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(70).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(71).Value = CType(Original_ContactPresentMobile,String)
            End If
            If (Original_ContactPermanentAddress Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(72).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(73).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(72).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(73).Value = CType(Original_ContactPermanentAddress,String)
            End If
            If (Original_ContactPermanentCountryId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(74).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(75).Value = CType(Original_ContactPermanentCountryId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(74).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(75).Value = Global.System.DBNull.Value
            End If
            If (Original_ContactPermanentCityId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(76).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(77).Value = CType(Original_ContactPermanentCityId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(76).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(77).Value = Global.System.DBNull.Value
            End If
            If (Original_ContactPermanentPhone Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(78).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(79).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(78).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(79).Value = CType(Original_ContactPermanentPhone,String)
            End If
            If (Original_ContactPersonalEmail Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(80).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(81).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(80).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(81).Value = CType(Original_ContactPersonalEmail,String)
            End If
            If (Original_ContactOfficialEmail Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(82).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(83).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(82).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(83).Value = CType(Original_ContactOfficialEmail,String)
            End If
            If (Original_CreditCardNo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(84).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(85).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(84).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(85).Value = CType(Original_CreditCardNo,String)
            End If
            If (Original_ImageType Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(86).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(87).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(86).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(87).Value = CType(Original_ImageType,String)
            End If
            If (Original_NationalityId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(88).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(89).Value = CType(Original_NationalityId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(88).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(89).Value = Global.System.DBNull.Value
            End If
            If (Original_DomicileId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(90).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(91).Value = CType(Original_DomicileId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(90).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(91).Value = Global.System.DBNull.Value
            End If
            If (Original_HeadOfDepartmentId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(92).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(93).Value = CType(Original_HeadOfDepartmentId.Value,Long)
            Else
                Me.Adapter.DeleteCommand.Parameters(92).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(93).Value = Global.System.DBNull.Value
            End If
            If (Original_SupervisorEmployeeId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(94).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(95).Value = CType(Original_SupervisorEmployeeId.Value,Long)
            Else
                Me.Adapter.DeleteCommand.Parameters(94).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(95).Value = Global.System.DBNull.Value
            End If
            If (Original_IsHeadOfDepartment.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(96).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(97).Value = CType(Original_IsHeadOfDepartment.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(96).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(97).Value = Global.System.DBNull.Value
            End If
            If (Original_IsForcePersonal.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(98).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(99).Value = CType(Original_IsForcePersonal.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(98).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(99).Value = Global.System.DBNull.Value
            End If
            If (Original_FPRetirementRankId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(100).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(101).Value = CType(Original_FPRetirementRankId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(100).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(101).Value = Global.System.DBNull.Value
            End If
            If (Original_vcRank Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(102).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(103).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(102).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(103).Value = CType(Original_vcRank,String)
            End If
            If (Original_FPRetirementDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(104).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(105).Value = CType(Original_FPRetirementDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(104).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(105).Value = Global.System.DBNull.Value
            End If
            If (Original_FPJobDescription Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(106).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(107).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(106).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(107).Value = CType(Original_FPJobDescription,String)
            End If
            If (Original_FPCorpsId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(108).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(109).Value = CType(Original_FPCorpsId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(108).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(109).Value = Global.System.DBNull.Value
            End If
            If (Original_GuardianName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(110).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(111).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(110).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(111).Value = CType(Original_GuardianName,String)
            End If
            If (Original_GuardianRelationId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(112).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(113).Value = CType(Original_GuardianRelationId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(112).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(113).Value = Global.System.DBNull.Value
            End If
            If (Original_GuardianNIC Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(114).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(115).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(114).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(115).Value = CType(Original_GuardianNIC,String)
            End If
            If (Original_GuardianPhone Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(116).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(117).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(116).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(117).Value = CType(Original_GuardianPhone,String)
            End If
            If (Original_GuardianAddress Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(118).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(119).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(118).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(119).Value = CType(Original_GuardianAddress,String)
            End If
            If (Original_DepartmentId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(120).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(121).Value = CType(Original_DepartmentId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(120).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(121).Value = Global.System.DBNull.Value
            End If
            If (Original_BranchId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(122).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(123).Value = CType(Original_BranchId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(122).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(123).Value = Global.System.DBNull.Value
            End If
            If (Original_BusinessUnitId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(124).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(125).Value = CType(Original_BusinessUnitId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(124).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(125).Value = Global.System.DBNull.Value
            End If
            If (Original_Scale.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(126).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(127).Value = CType(Original_Scale.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(126).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(127).Value = Global.System.DBNull.Value
            End If
            If (Original_IsActive.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(128).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(129).Value = CType(Original_IsActive.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(128).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(129).Value = Global.System.DBNull.Value
            End If
            If (Original_CurrentStateId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(130).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(131).Value = CType(Original_CurrentStateId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(130).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(131).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(132).Value = CType(Original_IsTechnical,Short)
            If (Original_vcRemarks Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(133).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(134).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(133).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(134).Value = CType(Original_vcRemarks,String)
            End If
            If (Original_vcPosting Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(135).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(136).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(135).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(136).Value = CType(Original_vcPosting,String)
            End If
            If (Original_dtmRenewalDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(137).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(138).Value = CType(Original_dtmRenewalDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(137).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(138).Value = Global.System.DBNull.Value
            End If
            If (Original_dtmRetirementDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(139).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(140).Value = CType(Original_dtmRetirementDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(139).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(140).Value = Global.System.DBNull.Value
            End If
            If (Original_ClerkEmpNo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(141).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(142).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(141).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(142).Value = CType(Original_ClerkEmpNo,String)
            End If
            If (Original_RecommendedByEmpNo1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(143).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(144).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(143).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(144).Value = CType(Original_RecommendedByEmpNo1,String)
            End If
            If (Original_RecommendedByEmpNo2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(145).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(146).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(145).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(146).Value = CType(Original_RecommendedByEmpNo2,String)
            End If
            If (Original_SanctionedByEmpNo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(147).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(148).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(147).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(148).Value = CType(Original_SanctionedByEmpNo,String)
            End If
            If (Original_GMEmpNo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(149).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(150).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(149).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(150).Value = CType(Original_GMEmpNo,String)
            End If
            If (Original_ManagerEmpNo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(151).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(152).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(151).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(152).Value = CType(Original_ManagerEmpNo,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(153).Value = CType(Original_nSectionId,Integer)
            If (Original_vcVehicleAccCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_vcVehicleAccCode")
            Else
                Me.Adapter.DeleteCommand.Parameters(154).Value = CType(Original_vcVehicleAccCode,String)
            End If
            If (Original_vcMobileAccCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_vcMobileAccCode")
            Else
                Me.Adapter.DeleteCommand.Parameters(155).Value = CType(Original_vcMobileAccCode,String)
            End If
            If (Original_RoEmpNo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(156).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(157).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(156).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(157).Value = CType(Original_RoEmpNo,String)
            End If
            If (Original_SroEmpNo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(158).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(159).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(158).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(159).Value = CType(Original_SroEmpNo,String)
            End If
            If (Original_AttVerificationEmpNo1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(160).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(161).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(160).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(161).Value = CType(Original_AttVerificationEmpNo1,String)
            End If
            If (Original_AttVerificationEmpNo2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(162).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(163).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(162).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(163).Value = CType(Original_AttVerificationEmpNo2,String)
            End If
            If (Original_AttApprovingEmpNo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(164).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(165).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(164).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(165).Value = CType(Original_AttApprovingEmpNo,String)
            End If
            If (Original_nBirthCountry.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(166).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(167).Value = CType(Original_nBirthCountry.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(166).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(167).Value = Global.System.DBNull.Value
            End If
            If (Original_nBirthCity.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(168).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(169).Value = CType(Original_nBirthCity.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(168).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(169).Value = Global.System.DBNull.Value
            End If
            If (Original_nPreviousEmpId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(170).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(171).Value = CType(Original_nPreviousEmpId.Value,Long)
            Else
                Me.Adapter.DeleteCommand.Parameters(170).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(171).Value = Global.System.DBNull.Value
            End If
            If (Original_nsStatusId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(172).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(173).Value = CType(Original_nsStatusId.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(172).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(173).Value = Global.System.DBNull.Value
            End If
            If (Original_PassportCountryId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(174).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(175).Value = CType(Original_PassportCountryId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(174).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(175).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal Id As Long,  _
                    ByVal EmployeeNo As String,  _
                    ByVal FirstName As String,  _
                    ByVal MiddleName As String,  _
                    ByVal LastName As String,  _
                    ByVal FullName As String,  _
                    ByVal FatherName As String,  _
                    ByVal Gender As Global.System.Nullable(Of Byte),  _
                    ByVal Religion As Global.System.Nullable(Of Integer),  _
                    ByVal DateOfBirth As Global.System.Nullable(Of Date),  _
                    ByVal BloodGroup As Global.System.Nullable(Of Integer),  _
                    ByVal MaritalStatus As Global.System.Nullable(Of Byte),  _
                    ByVal MaritalStatusEffectiveDate As Global.System.Nullable(Of Date),  _
                    ByVal OldNICNo As String,  _
                    ByVal NewNICNo As String,  _
                    ByVal NationalTaxNo As String,  _
                    ByVal DrivingLicenseNo As String,  _
                    ByVal PassportNo As String,  _
                    ByVal PassportIssueDate As Global.System.Nullable(Of Date),  _
                    ByVal PassportExpiryDate As Global.System.Nullable(Of Date),  _
                    ByVal ContractTypeId As Global.System.Nullable(Of Integer),  _
                    ByVal EmployeeTypeId As Global.System.Nullable(Of Integer),  _
                    ByVal DesignationId As Global.System.Nullable(Of Integer),  _
                    ByVal EmployeeGradeId As Global.System.Nullable(Of Integer),  _
                    ByVal GradeEffectiveDate As Global.System.Nullable(Of Date),  _
                    ByVal ProbationEndDate As Global.System.Nullable(Of Date),  _
                    ByVal JoiningDate As Global.System.Nullable(Of Date),  _
                    ByVal ConfirmationDate As Global.System.Nullable(Of Date),  _
                    ByVal ContractStartDate As Global.System.Nullable(Of Date),  _
                    ByVal ContractEndDate As Global.System.Nullable(Of Date),  _
                    ByVal Category As Global.System.Nullable(Of Integer),  _
                    ByVal JobDescription As String,  _
                    ByVal ContactPresentAddress As String,  _
                    ByVal ContactPresentCountryId As Global.System.Nullable(Of Integer),  _
                    ByVal ContactPresentCityId As Global.System.Nullable(Of Integer),  _
                    ByVal ContactPresentPhone As String,  _
                    ByVal ContactPresentMobile As String,  _
                    ByVal ContactPermanentAddress As String,  _
                    ByVal ContactPermanentCountryId As Global.System.Nullable(Of Integer),  _
                    ByVal ContactPermanentCityId As Global.System.Nullable(Of Integer),  _
                    ByVal ContactPermanentPhone As String,  _
                    ByVal ContactPersonalEmail As String,  _
                    ByVal ContactOfficialEmail As String,  _
                    ByVal CreditCardNo As String,  _
                    ByVal Picture() As Byte,  _
                    ByVal ImageType As String,  _
                    ByVal NationalityId As Global.System.Nullable(Of Integer),  _
                    ByVal DomicileId As Global.System.Nullable(Of Integer),  _
                    ByVal HeadOfDepartmentId As Global.System.Nullable(Of Long),  _
                    ByVal SupervisorEmployeeId As Global.System.Nullable(Of Long),  _
                    ByVal IsHeadOfDepartment As Global.System.Nullable(Of Boolean),  _
                    ByVal IsForcePersonal As Global.System.Nullable(Of Boolean),  _
                    ByVal FPRetirementRankId As Global.System.Nullable(Of Integer),  _
                    ByVal vcRank As String,  _
                    ByVal FPRetirementDate As Global.System.Nullable(Of Date),  _
                    ByVal FPJobDescription As String,  _
                    ByVal FPCorpsId As Global.System.Nullable(Of Integer),  _
                    ByVal GuardianName As String,  _
                    ByVal GuardianRelationId As Global.System.Nullable(Of Integer),  _
                    ByVal GuardianNIC As String,  _
                    ByVal GuardianPhone As String,  _
                    ByVal GuardianAddress As String,  _
                    ByVal DepartmentId As Global.System.Nullable(Of Integer),  _
                    ByVal BranchId As Global.System.Nullable(Of Integer),  _
                    ByVal BusinessUnitId As Global.System.Nullable(Of Integer),  _
                    ByVal Scale As Global.System.Nullable(Of Integer),  _
                    ByVal IsActive As Global.System.Nullable(Of Boolean),  _
                    ByVal CurrentStateId As Global.System.Nullable(Of Integer),  _
                    ByVal IsTechnical As Short,  _
                    ByVal vcRemarks As String,  _
                    ByVal vcPosting As String,  _
                    ByVal dtmRenewalDate As Global.System.Nullable(Of Date),  _
                    ByVal dtmRetirementDate As Global.System.Nullable(Of Date),  _
                    ByVal ClerkEmpNo As String,  _
                    ByVal RecommendedByEmpNo1 As String,  _
                    ByVal RecommendedByEmpNo2 As String,  _
                    ByVal SanctionedByEmpNo As String,  _
                    ByVal GMEmpNo As String,  _
                    ByVal ManagerEmpNo As String,  _
                    ByVal nSectionId As Integer,  _
                    ByVal vcVehicleAccCode As String,  _
                    ByVal vcMobileAccCode As String,  _
                    ByVal RoEmpNo As String,  _
                    ByVal SroEmpNo As String,  _
                    ByVal AttVerificationEmpNo1 As String,  _
                    ByVal AttVerificationEmpNo2 As String,  _
                    ByVal AttApprovingEmpNo As String,  _
                    ByVal nBirthCountry As Global.System.Nullable(Of Integer),  _
                    ByVal nBirthCity As Global.System.Nullable(Of Integer),  _
                    ByVal nPreviousEmpId As Global.System.Nullable(Of Long),  _
                    ByVal nsStatusId As Global.System.Nullable(Of Short),  _
                    ByVal PassportCountryId As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(Id,Long)
            If (EmployeeNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("EmployeeNo")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(EmployeeNo,String)
            End If
            If (FirstName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(FirstName,String)
            End If
            If (MiddleName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(MiddleName,String)
            End If
            If (LastName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(LastName,String)
            End If
            If (FullName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(FullName,String)
            End If
            If (FatherName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(FatherName,String)
            End If
            If (Gender.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(Gender.Value,Byte)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Religion.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(Religion.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (DateOfBirth.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(DateOfBirth.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (BloodGroup.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(BloodGroup.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (MaritalStatus.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(MaritalStatus.Value,Byte)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (MaritalStatusEffectiveDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(MaritalStatusEffectiveDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (OldNICNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(OldNICNo,String)
            End If
            If (NewNICNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(NewNICNo,String)
            End If
            If (NationalTaxNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(NationalTaxNo,String)
            End If
            If (DrivingLicenseNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(DrivingLicenseNo,String)
            End If
            If (PassportNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(PassportNo,String)
            End If
            If (PassportIssueDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(PassportIssueDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (PassportExpiryDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(PassportExpiryDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (ContractTypeId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(ContractTypeId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (EmployeeTypeId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(EmployeeTypeId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (DesignationId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(DesignationId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (EmployeeGradeId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(EmployeeGradeId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (GradeEffectiveDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(GradeEffectiveDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (ProbationEndDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(ProbationEndDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (JoiningDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(JoiningDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (ConfirmationDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(ConfirmationDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (ContractStartDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(ContractStartDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (ContractEndDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(ContractEndDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (Category.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(Category.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (JobDescription Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(JobDescription,String)
            End If
            If (ContactPresentAddress Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(ContactPresentAddress,String)
            End If
            If (ContactPresentCountryId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(ContactPresentCountryId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (ContactPresentCityId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(ContactPresentCityId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (ContactPresentPhone Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(ContactPresentPhone,String)
            End If
            If (ContactPresentMobile Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(ContactPresentMobile,String)
            End If
            If (ContactPermanentAddress Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(ContactPermanentAddress,String)
            End If
            If (ContactPermanentCountryId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(ContactPermanentCountryId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (ContactPermanentCityId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(ContactPermanentCityId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (ContactPermanentPhone Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(ContactPermanentPhone,String)
            End If
            If (ContactPersonalEmail Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(ContactPersonalEmail,String)
            End If
            If (ContactOfficialEmail Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(ContactOfficialEmail,String)
            End If
            If (CreditCardNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(CreditCardNo,String)
            End If
            If (Picture Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(Picture,Byte())
            End If
            If (ImageType Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(ImageType,String)
            End If
            If (NationalityId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(NationalityId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (DomicileId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(DomicileId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (HeadOfDepartmentId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(48).Value = CType(HeadOfDepartmentId.Value,Long)
            Else
                Me.Adapter.InsertCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (SupervisorEmployeeId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(49).Value = CType(SupervisorEmployeeId.Value,Long)
            Else
                Me.Adapter.InsertCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (IsHeadOfDepartment.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(50).Value = CType(IsHeadOfDepartment.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (IsForcePersonal.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(51).Value = CType(IsForcePersonal.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (FPRetirementRankId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(52).Value = CType(FPRetirementRankId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (vcRank Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(53).Value = CType(vcRank,String)
            End If
            If (FPRetirementDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(54).Value = CType(FPRetirementDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (FPJobDescription Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(55).Value = CType(FPJobDescription,String)
            End If
            If (FPCorpsId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(56).Value = CType(FPCorpsId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (GuardianName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(57).Value = CType(GuardianName,String)
            End If
            If (GuardianRelationId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(58).Value = CType(GuardianRelationId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(58).Value = Global.System.DBNull.Value
            End If
            If (GuardianNIC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(59).Value = CType(GuardianNIC,String)
            End If
            If (GuardianPhone Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(60).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(60).Value = CType(GuardianPhone,String)
            End If
            If (GuardianAddress Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(61).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(61).Value = CType(GuardianAddress,String)
            End If
            If (DepartmentId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(62).Value = CType(DepartmentId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(62).Value = Global.System.DBNull.Value
            End If
            If (BranchId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(63).Value = CType(BranchId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(63).Value = Global.System.DBNull.Value
            End If
            If (BusinessUnitId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(64).Value = CType(BusinessUnitId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(64).Value = Global.System.DBNull.Value
            End If
            If (Scale.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(65).Value = CType(Scale.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(65).Value = Global.System.DBNull.Value
            End If
            If (IsActive.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(66).Value = CType(IsActive.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(66).Value = Global.System.DBNull.Value
            End If
            If (CurrentStateId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(67).Value = CType(CurrentStateId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(67).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(68).Value = CType(IsTechnical,Short)
            If (vcRemarks Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(69).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(69).Value = CType(vcRemarks,String)
            End If
            If (vcPosting Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(70).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(70).Value = CType(vcPosting,String)
            End If
            If (dtmRenewalDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(71).Value = CType(dtmRenewalDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(71).Value = Global.System.DBNull.Value
            End If
            If (dtmRetirementDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(72).Value = CType(dtmRetirementDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(72).Value = Global.System.DBNull.Value
            End If
            If (ClerkEmpNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(73).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(73).Value = CType(ClerkEmpNo,String)
            End If
            If (RecommendedByEmpNo1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(74).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(74).Value = CType(RecommendedByEmpNo1,String)
            End If
            If (RecommendedByEmpNo2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(75).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(75).Value = CType(RecommendedByEmpNo2,String)
            End If
            If (SanctionedByEmpNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(76).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(76).Value = CType(SanctionedByEmpNo,String)
            End If
            If (GMEmpNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(77).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(77).Value = CType(GMEmpNo,String)
            End If
            If (ManagerEmpNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(78).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(78).Value = CType(ManagerEmpNo,String)
            End If
            Me.Adapter.InsertCommand.Parameters(79).Value = CType(nSectionId,Integer)
            If (vcVehicleAccCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("vcVehicleAccCode")
            Else
                Me.Adapter.InsertCommand.Parameters(80).Value = CType(vcVehicleAccCode,String)
            End If
            If (vcMobileAccCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("vcMobileAccCode")
            Else
                Me.Adapter.InsertCommand.Parameters(81).Value = CType(vcMobileAccCode,String)
            End If
            If (RoEmpNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(82).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(82).Value = CType(RoEmpNo,String)
            End If
            If (SroEmpNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(83).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(83).Value = CType(SroEmpNo,String)
            End If
            If (AttVerificationEmpNo1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(84).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(84).Value = CType(AttVerificationEmpNo1,String)
            End If
            If (AttVerificationEmpNo2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(85).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(85).Value = CType(AttVerificationEmpNo2,String)
            End If
            If (AttApprovingEmpNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(86).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(86).Value = CType(AttApprovingEmpNo,String)
            End If
            If (nBirthCountry.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(87).Value = CType(nBirthCountry.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(87).Value = Global.System.DBNull.Value
            End If
            If (nBirthCity.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(88).Value = CType(nBirthCity.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(88).Value = Global.System.DBNull.Value
            End If
            If (nPreviousEmpId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(89).Value = CType(nPreviousEmpId.Value,Long)
            Else
                Me.Adapter.InsertCommand.Parameters(89).Value = Global.System.DBNull.Value
            End If
            If (nsStatusId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(90).Value = CType(nsStatusId.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(90).Value = Global.System.DBNull.Value
            End If
            If (PassportCountryId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(91).Value = CType(PassportCountryId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(91).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Id As Long,  _
                    ByVal EmployeeNo As String,  _
                    ByVal FirstName As String,  _
                    ByVal MiddleName As String,  _
                    ByVal LastName As String,  _
                    ByVal FullName As String,  _
                    ByVal FatherName As String,  _
                    ByVal Gender As Global.System.Nullable(Of Byte),  _
                    ByVal Religion As Global.System.Nullable(Of Integer),  _
                    ByVal DateOfBirth As Global.System.Nullable(Of Date),  _
                    ByVal BloodGroup As Global.System.Nullable(Of Integer),  _
                    ByVal MaritalStatus As Global.System.Nullable(Of Byte),  _
                    ByVal MaritalStatusEffectiveDate As Global.System.Nullable(Of Date),  _
                    ByVal OldNICNo As String,  _
                    ByVal NewNICNo As String,  _
                    ByVal NationalTaxNo As String,  _
                    ByVal DrivingLicenseNo As String,  _
                    ByVal PassportNo As String,  _
                    ByVal PassportIssueDate As Global.System.Nullable(Of Date),  _
                    ByVal PassportExpiryDate As Global.System.Nullable(Of Date),  _
                    ByVal ContractTypeId As Global.System.Nullable(Of Integer),  _
                    ByVal EmployeeTypeId As Global.System.Nullable(Of Integer),  _
                    ByVal DesignationId As Global.System.Nullable(Of Integer),  _
                    ByVal EmployeeGradeId As Global.System.Nullable(Of Integer),  _
                    ByVal GradeEffectiveDate As Global.System.Nullable(Of Date),  _
                    ByVal ProbationEndDate As Global.System.Nullable(Of Date),  _
                    ByVal JoiningDate As Global.System.Nullable(Of Date),  _
                    ByVal ConfirmationDate As Global.System.Nullable(Of Date),  _
                    ByVal ContractStartDate As Global.System.Nullable(Of Date),  _
                    ByVal ContractEndDate As Global.System.Nullable(Of Date),  _
                    ByVal Category As Global.System.Nullable(Of Integer),  _
                    ByVal JobDescription As String,  _
                    ByVal ContactPresentAddress As String,  _
                    ByVal ContactPresentCountryId As Global.System.Nullable(Of Integer),  _
                    ByVal ContactPresentCityId As Global.System.Nullable(Of Integer),  _
                    ByVal ContactPresentPhone As String,  _
                    ByVal ContactPresentMobile As String,  _
                    ByVal ContactPermanentAddress As String,  _
                    ByVal ContactPermanentCountryId As Global.System.Nullable(Of Integer),  _
                    ByVal ContactPermanentCityId As Global.System.Nullable(Of Integer),  _
                    ByVal ContactPermanentPhone As String,  _
                    ByVal ContactPersonalEmail As String,  _
                    ByVal ContactOfficialEmail As String,  _
                    ByVal CreditCardNo As String,  _
                    ByVal Picture() As Byte,  _
                    ByVal ImageType As String,  _
                    ByVal NationalityId As Global.System.Nullable(Of Integer),  _
                    ByVal DomicileId As Global.System.Nullable(Of Integer),  _
                    ByVal HeadOfDepartmentId As Global.System.Nullable(Of Long),  _
                    ByVal SupervisorEmployeeId As Global.System.Nullable(Of Long),  _
                    ByVal IsHeadOfDepartment As Global.System.Nullable(Of Boolean),  _
                    ByVal IsForcePersonal As Global.System.Nullable(Of Boolean),  _
                    ByVal FPRetirementRankId As Global.System.Nullable(Of Integer),  _
                    ByVal vcRank As String,  _
                    ByVal FPRetirementDate As Global.System.Nullable(Of Date),  _
                    ByVal FPJobDescription As String,  _
                    ByVal FPCorpsId As Global.System.Nullable(Of Integer),  _
                    ByVal GuardianName As String,  _
                    ByVal GuardianRelationId As Global.System.Nullable(Of Integer),  _
                    ByVal GuardianNIC As String,  _
                    ByVal GuardianPhone As String,  _
                    ByVal GuardianAddress As String,  _
                    ByVal DepartmentId As Global.System.Nullable(Of Integer),  _
                    ByVal BranchId As Global.System.Nullable(Of Integer),  _
                    ByVal BusinessUnitId As Global.System.Nullable(Of Integer),  _
                    ByVal Scale As Global.System.Nullable(Of Integer),  _
                    ByVal IsActive As Global.System.Nullable(Of Boolean),  _
                    ByVal CurrentStateId As Global.System.Nullable(Of Integer),  _
                    ByVal IsTechnical As Short,  _
                    ByVal vcRemarks As String,  _
                    ByVal vcPosting As String,  _
                    ByVal dtmRenewalDate As Global.System.Nullable(Of Date),  _
                    ByVal dtmRetirementDate As Global.System.Nullable(Of Date),  _
                    ByVal ClerkEmpNo As String,  _
                    ByVal RecommendedByEmpNo1 As String,  _
                    ByVal RecommendedByEmpNo2 As String,  _
                    ByVal SanctionedByEmpNo As String,  _
                    ByVal GMEmpNo As String,  _
                    ByVal ManagerEmpNo As String,  _
                    ByVal nSectionId As Integer,  _
                    ByVal vcVehicleAccCode As String,  _
                    ByVal vcMobileAccCode As String,  _
                    ByVal RoEmpNo As String,  _
                    ByVal SroEmpNo As String,  _
                    ByVal AttVerificationEmpNo1 As String,  _
                    ByVal AttVerificationEmpNo2 As String,  _
                    ByVal AttApprovingEmpNo As String,  _
                    ByVal nBirthCountry As Global.System.Nullable(Of Integer),  _
                    ByVal nBirthCity As Global.System.Nullable(Of Integer),  _
                    ByVal nPreviousEmpId As Global.System.Nullable(Of Long),  _
                    ByVal nsStatusId As Global.System.Nullable(Of Short),  _
                    ByVal PassportCountryId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Id As Long,  _
                    ByVal Original_EmployeeNo As String,  _
                    ByVal Original_FirstName As String,  _
                    ByVal Original_MiddleName As String,  _
                    ByVal Original_LastName As String,  _
                    ByVal Original_FullName As String,  _
                    ByVal Original_FatherName As String,  _
                    ByVal Original_Gender As Global.System.Nullable(Of Byte),  _
                    ByVal Original_Religion As Global.System.Nullable(Of Integer),  _
                    ByVal Original_DateOfBirth As Global.System.Nullable(Of Date),  _
                    ByVal Original_BloodGroup As Global.System.Nullable(Of Integer),  _
                    ByVal Original_MaritalStatus As Global.System.Nullable(Of Byte),  _
                    ByVal Original_MaritalStatusEffectiveDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_OldNICNo As String,  _
                    ByVal Original_NewNICNo As String,  _
                    ByVal Original_NationalTaxNo As String,  _
                    ByVal Original_DrivingLicenseNo As String,  _
                    ByVal Original_PassportNo As String,  _
                    ByVal Original_PassportIssueDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_PassportExpiryDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_ContractTypeId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_EmployeeTypeId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_DesignationId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_EmployeeGradeId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_GradeEffectiveDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_ProbationEndDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_JoiningDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_ConfirmationDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_ContractStartDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_ContractEndDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_Category As Global.System.Nullable(Of Integer),  _
                    ByVal Original_JobDescription As String,  _
                    ByVal Original_ContactPresentAddress As String,  _
                    ByVal Original_ContactPresentCountryId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ContactPresentCityId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ContactPresentPhone As String,  _
                    ByVal Original_ContactPresentMobile As String,  _
                    ByVal Original_ContactPermanentAddress As String,  _
                    ByVal Original_ContactPermanentCountryId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ContactPermanentCityId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ContactPermanentPhone As String,  _
                    ByVal Original_ContactPersonalEmail As String,  _
                    ByVal Original_ContactOfficialEmail As String,  _
                    ByVal Original_CreditCardNo As String,  _
                    ByVal Original_ImageType As String,  _
                    ByVal Original_NationalityId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_DomicileId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_HeadOfDepartmentId As Global.System.Nullable(Of Long),  _
                    ByVal Original_SupervisorEmployeeId As Global.System.Nullable(Of Long),  _
                    ByVal Original_IsHeadOfDepartment As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IsForcePersonal As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_FPRetirementRankId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_vcRank As String,  _
                    ByVal Original_FPRetirementDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_FPJobDescription As String,  _
                    ByVal Original_FPCorpsId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_GuardianName As String,  _
                    ByVal Original_GuardianRelationId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_GuardianNIC As String,  _
                    ByVal Original_GuardianPhone As String,  _
                    ByVal Original_GuardianAddress As String,  _
                    ByVal Original_DepartmentId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_BranchId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_BusinessUnitId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Scale As Global.System.Nullable(Of Integer),  _
                    ByVal Original_IsActive As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CurrentStateId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_IsTechnical As Short,  _
                    ByVal Original_vcRemarks As String,  _
                    ByVal Original_vcPosting As String,  _
                    ByVal Original_dtmRenewalDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_dtmRetirementDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_ClerkEmpNo As String,  _
                    ByVal Original_RecommendedByEmpNo1 As String,  _
                    ByVal Original_RecommendedByEmpNo2 As String,  _
                    ByVal Original_SanctionedByEmpNo As String,  _
                    ByVal Original_GMEmpNo As String,  _
                    ByVal Original_ManagerEmpNo As String,  _
                    ByVal Original_nSectionId As Integer,  _
                    ByVal Original_vcVehicleAccCode As String,  _
                    ByVal Original_vcMobileAccCode As String,  _
                    ByVal Original_RoEmpNo As String,  _
                    ByVal Original_SroEmpNo As String,  _
                    ByVal Original_AttVerificationEmpNo1 As String,  _
                    ByVal Original_AttVerificationEmpNo2 As String,  _
                    ByVal Original_AttApprovingEmpNo As String,  _
                    ByVal Original_nBirthCountry As Global.System.Nullable(Of Integer),  _
                    ByVal Original_nBirthCity As Global.System.Nullable(Of Integer),  _
                    ByVal Original_nPreviousEmpId As Global.System.Nullable(Of Long),  _
                    ByVal Original_nsStatusId As Global.System.Nullable(Of Short),  _
                    ByVal Original_PassportCountryId As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Id,Long)
            If (EmployeeNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("EmployeeNo")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(EmployeeNo,String)
            End If
            If (FirstName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(FirstName,String)
            End If
            If (MiddleName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(MiddleName,String)
            End If
            If (LastName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(LastName,String)
            End If
            If (FullName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(FullName,String)
            End If
            If (FatherName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(FatherName,String)
            End If
            If (Gender.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Gender.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Religion.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Religion.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (DateOfBirth.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(DateOfBirth.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (BloodGroup.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(BloodGroup.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (MaritalStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(MaritalStatus.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (MaritalStatusEffectiveDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(MaritalStatusEffectiveDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (OldNICNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(OldNICNo,String)
            End If
            If (NewNICNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(NewNICNo,String)
            End If
            If (NationalTaxNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(NationalTaxNo,String)
            End If
            If (DrivingLicenseNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(DrivingLicenseNo,String)
            End If
            If (PassportNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(PassportNo,String)
            End If
            If (PassportIssueDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(PassportIssueDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (PassportExpiryDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(PassportExpiryDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (ContractTypeId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(ContractTypeId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (EmployeeTypeId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(EmployeeTypeId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (DesignationId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(DesignationId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (EmployeeGradeId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(EmployeeGradeId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (GradeEffectiveDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(GradeEffectiveDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (ProbationEndDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(ProbationEndDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (JoiningDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(JoiningDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (ConfirmationDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(ConfirmationDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (ContractStartDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(ContractStartDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (ContractEndDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(ContractEndDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (Category.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Category.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (JobDescription Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(JobDescription,String)
            End If
            If (ContactPresentAddress Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(ContactPresentAddress,String)
            End If
            If (ContactPresentCountryId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(ContactPresentCountryId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (ContactPresentCityId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(ContactPresentCityId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (ContactPresentPhone Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(ContactPresentPhone,String)
            End If
            If (ContactPresentMobile Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(ContactPresentMobile,String)
            End If
            If (ContactPermanentAddress Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(ContactPermanentAddress,String)
            End If
            If (ContactPermanentCountryId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(ContactPermanentCountryId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (ContactPermanentCityId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(ContactPermanentCityId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (ContactPermanentPhone Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(ContactPermanentPhone,String)
            End If
            If (ContactPersonalEmail Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(ContactPersonalEmail,String)
            End If
            If (ContactOfficialEmail Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(ContactOfficialEmail,String)
            End If
            If (CreditCardNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(CreditCardNo,String)
            End If
            If (Picture Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(Picture,Byte())
            End If
            If (ImageType Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(ImageType,String)
            End If
            If (NationalityId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(NationalityId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (DomicileId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(DomicileId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (HeadOfDepartmentId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(HeadOfDepartmentId.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (SupervisorEmployeeId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(SupervisorEmployeeId.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (IsHeadOfDepartment.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(IsHeadOfDepartment.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (IsForcePersonal.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(IsForcePersonal.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (FPRetirementRankId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(FPRetirementRankId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (vcRank Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(vcRank,String)
            End If
            If (FPRetirementDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(FPRetirementDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (FPJobDescription Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(FPJobDescription,String)
            End If
            If (FPCorpsId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(FPCorpsId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (GuardianName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(GuardianName,String)
            End If
            If (GuardianRelationId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(GuardianRelationId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = Global.System.DBNull.Value
            End If
            If (GuardianNIC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(GuardianNIC,String)
            End If
            If (GuardianPhone Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(60).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(GuardianPhone,String)
            End If
            If (GuardianAddress Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(61).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(GuardianAddress,String)
            End If
            If (DepartmentId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(DepartmentId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = Global.System.DBNull.Value
            End If
            If (BranchId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(BranchId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(63).Value = Global.System.DBNull.Value
            End If
            If (BusinessUnitId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(BusinessUnitId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(64).Value = Global.System.DBNull.Value
            End If
            If (Scale.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(Scale.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(65).Value = Global.System.DBNull.Value
            End If
            If (IsActive.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(IsActive.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(66).Value = Global.System.DBNull.Value
            End If
            If (CurrentStateId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(CurrentStateId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(67).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(68).Value = CType(IsTechnical,Short)
            If (vcRemarks Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(69).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(vcRemarks,String)
            End If
            If (vcPosting Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(70).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(vcPosting,String)
            End If
            If (dtmRenewalDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(dtmRenewalDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(71).Value = Global.System.DBNull.Value
            End If
            If (dtmRetirementDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(dtmRetirementDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(72).Value = Global.System.DBNull.Value
            End If
            If (ClerkEmpNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(73).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(ClerkEmpNo,String)
            End If
            If (RecommendedByEmpNo1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(74).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(RecommendedByEmpNo1,String)
            End If
            If (RecommendedByEmpNo2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(75).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(RecommendedByEmpNo2,String)
            End If
            If (SanctionedByEmpNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(76).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(SanctionedByEmpNo,String)
            End If
            If (GMEmpNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(77).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(GMEmpNo,String)
            End If
            If (ManagerEmpNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(78).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(ManagerEmpNo,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(79).Value = CType(nSectionId,Integer)
            If (vcVehicleAccCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("vcVehicleAccCode")
            Else
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(vcVehicleAccCode,String)
            End If
            If (vcMobileAccCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("vcMobileAccCode")
            Else
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(vcMobileAccCode,String)
            End If
            If (RoEmpNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(82).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(RoEmpNo,String)
            End If
            If (SroEmpNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(83).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(SroEmpNo,String)
            End If
            If (AttVerificationEmpNo1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(84).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(AttVerificationEmpNo1,String)
            End If
            If (AttVerificationEmpNo2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(85).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(AttVerificationEmpNo2,String)
            End If
            If (AttApprovingEmpNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(86).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(AttApprovingEmpNo,String)
            End If
            If (nBirthCountry.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(nBirthCountry.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(87).Value = Global.System.DBNull.Value
            End If
            If (nBirthCity.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(nBirthCity.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(88).Value = Global.System.DBNull.Value
            End If
            If (nPreviousEmpId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(nPreviousEmpId.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(89).Value = Global.System.DBNull.Value
            End If
            If (nsStatusId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(nsStatusId.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(90).Value = Global.System.DBNull.Value
            End If
            If (PassportCountryId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(PassportCountryId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(91).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(92).Value = CType(Original_Id,Long)
            If (Original_EmployeeNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_EmployeeNo")
            Else
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(Original_EmployeeNo,String)
            End If
            If (Original_FirstName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(95).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(Original_FirstName,String)
            End If
            If (Original_MiddleName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(97).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(Original_MiddleName,String)
            End If
            If (Original_LastName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(99).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(Original_LastName,String)
            End If
            If (Original_FullName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(101).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(Original_FullName,String)
            End If
            If (Original_FatherName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(103).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(Original_FatherName,String)
            End If
            If (Original_Gender.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(Original_Gender.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(105).Value = Global.System.DBNull.Value
            End If
            If (Original_Religion.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(106).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(107).Value = CType(Original_Religion.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(106).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(107).Value = Global.System.DBNull.Value
            End If
            If (Original_DateOfBirth.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(108).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(109).Value = CType(Original_DateOfBirth.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(108).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(109).Value = Global.System.DBNull.Value
            End If
            If (Original_BloodGroup.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(110).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(111).Value = CType(Original_BloodGroup.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(110).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(111).Value = Global.System.DBNull.Value
            End If
            If (Original_MaritalStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(112).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(113).Value = CType(Original_MaritalStatus.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(112).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(113).Value = Global.System.DBNull.Value
            End If
            If (Original_MaritalStatusEffectiveDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(114).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(115).Value = CType(Original_MaritalStatusEffectiveDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(114).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(115).Value = Global.System.DBNull.Value
            End If
            If (Original_OldNICNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(116).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(117).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(116).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(117).Value = CType(Original_OldNICNo,String)
            End If
            If (Original_NewNICNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(118).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(119).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(118).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(119).Value = CType(Original_NewNICNo,String)
            End If
            If (Original_NationalTaxNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(120).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(121).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(120).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(121).Value = CType(Original_NationalTaxNo,String)
            End If
            If (Original_DrivingLicenseNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(122).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(123).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(122).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(123).Value = CType(Original_DrivingLicenseNo,String)
            End If
            If (Original_PassportNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(124).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(125).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(124).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(125).Value = CType(Original_PassportNo,String)
            End If
            If (Original_PassportIssueDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(126).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(127).Value = CType(Original_PassportIssueDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(126).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(127).Value = Global.System.DBNull.Value
            End If
            If (Original_PassportExpiryDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(128).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(129).Value = CType(Original_PassportExpiryDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(128).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(129).Value = Global.System.DBNull.Value
            End If
            If (Original_ContractTypeId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(130).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(131).Value = CType(Original_ContractTypeId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(130).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(131).Value = Global.System.DBNull.Value
            End If
            If (Original_EmployeeTypeId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(132).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(133).Value = CType(Original_EmployeeTypeId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(132).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(133).Value = Global.System.DBNull.Value
            End If
            If (Original_DesignationId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(134).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(135).Value = CType(Original_DesignationId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(134).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(135).Value = Global.System.DBNull.Value
            End If
            If (Original_EmployeeGradeId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(136).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(137).Value = CType(Original_EmployeeGradeId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(136).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(137).Value = Global.System.DBNull.Value
            End If
            If (Original_GradeEffectiveDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(138).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(139).Value = CType(Original_GradeEffectiveDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(138).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(139).Value = Global.System.DBNull.Value
            End If
            If (Original_ProbationEndDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(140).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(141).Value = CType(Original_ProbationEndDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(140).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(141).Value = Global.System.DBNull.Value
            End If
            If (Original_JoiningDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(142).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(143).Value = CType(Original_JoiningDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(142).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(143).Value = Global.System.DBNull.Value
            End If
            If (Original_ConfirmationDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(144).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(145).Value = CType(Original_ConfirmationDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(144).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(145).Value = Global.System.DBNull.Value
            End If
            If (Original_ContractStartDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(146).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(147).Value = CType(Original_ContractStartDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(146).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(147).Value = Global.System.DBNull.Value
            End If
            If (Original_ContractEndDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(148).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(149).Value = CType(Original_ContractEndDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(148).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(149).Value = Global.System.DBNull.Value
            End If
            If (Original_Category.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(150).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(151).Value = CType(Original_Category.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(150).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(151).Value = Global.System.DBNull.Value
            End If
            If (Original_JobDescription Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(152).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(153).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(152).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(153).Value = CType(Original_JobDescription,String)
            End If
            If (Original_ContactPresentAddress Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(154).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(155).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(154).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(155).Value = CType(Original_ContactPresentAddress,String)
            End If
            If (Original_ContactPresentCountryId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(156).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(157).Value = CType(Original_ContactPresentCountryId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(156).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(157).Value = Global.System.DBNull.Value
            End If
            If (Original_ContactPresentCityId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(158).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(159).Value = CType(Original_ContactPresentCityId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(158).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(159).Value = Global.System.DBNull.Value
            End If
            If (Original_ContactPresentPhone Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(160).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(161).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(160).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(161).Value = CType(Original_ContactPresentPhone,String)
            End If
            If (Original_ContactPresentMobile Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(162).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(163).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(162).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(163).Value = CType(Original_ContactPresentMobile,String)
            End If
            If (Original_ContactPermanentAddress Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(164).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(165).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(164).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(165).Value = CType(Original_ContactPermanentAddress,String)
            End If
            If (Original_ContactPermanentCountryId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(166).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(167).Value = CType(Original_ContactPermanentCountryId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(166).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(167).Value = Global.System.DBNull.Value
            End If
            If (Original_ContactPermanentCityId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(168).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(169).Value = CType(Original_ContactPermanentCityId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(168).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(169).Value = Global.System.DBNull.Value
            End If
            If (Original_ContactPermanentPhone Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(170).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(171).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(170).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(171).Value = CType(Original_ContactPermanentPhone,String)
            End If
            If (Original_ContactPersonalEmail Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(172).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(173).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(172).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(173).Value = CType(Original_ContactPersonalEmail,String)
            End If
            If (Original_ContactOfficialEmail Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(174).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(175).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(174).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(175).Value = CType(Original_ContactOfficialEmail,String)
            End If
            If (Original_CreditCardNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(176).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(177).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(176).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(177).Value = CType(Original_CreditCardNo,String)
            End If
            If (Original_ImageType Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(178).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(179).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(178).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(179).Value = CType(Original_ImageType,String)
            End If
            If (Original_NationalityId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(180).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(181).Value = CType(Original_NationalityId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(180).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(181).Value = Global.System.DBNull.Value
            End If
            If (Original_DomicileId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(182).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(183).Value = CType(Original_DomicileId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(182).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(183).Value = Global.System.DBNull.Value
            End If
            If (Original_HeadOfDepartmentId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(184).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(185).Value = CType(Original_HeadOfDepartmentId.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(184).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(185).Value = Global.System.DBNull.Value
            End If
            If (Original_SupervisorEmployeeId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(186).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(187).Value = CType(Original_SupervisorEmployeeId.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(186).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(187).Value = Global.System.DBNull.Value
            End If
            If (Original_IsHeadOfDepartment.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(188).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(189).Value = CType(Original_IsHeadOfDepartment.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(188).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(189).Value = Global.System.DBNull.Value
            End If
            If (Original_IsForcePersonal.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(190).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(191).Value = CType(Original_IsForcePersonal.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(190).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(191).Value = Global.System.DBNull.Value
            End If
            If (Original_FPRetirementRankId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(192).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(193).Value = CType(Original_FPRetirementRankId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(192).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(193).Value = Global.System.DBNull.Value
            End If
            If (Original_vcRank Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(194).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(195).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(194).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(195).Value = CType(Original_vcRank,String)
            End If
            If (Original_FPRetirementDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(196).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(197).Value = CType(Original_FPRetirementDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(196).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(197).Value = Global.System.DBNull.Value
            End If
            If (Original_FPJobDescription Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(198).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(199).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(198).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(199).Value = CType(Original_FPJobDescription,String)
            End If
            If (Original_FPCorpsId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(200).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(201).Value = CType(Original_FPCorpsId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(200).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(201).Value = Global.System.DBNull.Value
            End If
            If (Original_GuardianName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(202).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(203).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(202).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(203).Value = CType(Original_GuardianName,String)
            End If
            If (Original_GuardianRelationId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(204).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(205).Value = CType(Original_GuardianRelationId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(204).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(205).Value = Global.System.DBNull.Value
            End If
            If (Original_GuardianNIC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(206).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(207).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(206).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(207).Value = CType(Original_GuardianNIC,String)
            End If
            If (Original_GuardianPhone Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(208).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(209).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(208).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(209).Value = CType(Original_GuardianPhone,String)
            End If
            If (Original_GuardianAddress Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(210).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(211).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(210).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(211).Value = CType(Original_GuardianAddress,String)
            End If
            If (Original_DepartmentId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(212).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(213).Value = CType(Original_DepartmentId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(212).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(213).Value = Global.System.DBNull.Value
            End If
            If (Original_BranchId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(214).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(215).Value = CType(Original_BranchId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(214).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(215).Value = Global.System.DBNull.Value
            End If
            If (Original_BusinessUnitId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(216).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(217).Value = CType(Original_BusinessUnitId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(216).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(217).Value = Global.System.DBNull.Value
            End If
            If (Original_Scale.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(218).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(219).Value = CType(Original_Scale.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(218).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(219).Value = Global.System.DBNull.Value
            End If
            If (Original_IsActive.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(220).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(221).Value = CType(Original_IsActive.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(220).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(221).Value = Global.System.DBNull.Value
            End If
            If (Original_CurrentStateId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(222).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(223).Value = CType(Original_CurrentStateId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(222).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(223).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(224).Value = CType(Original_IsTechnical,Short)
            If (Original_vcRemarks Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(225).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(226).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(225).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(226).Value = CType(Original_vcRemarks,String)
            End If
            If (Original_vcPosting Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(227).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(228).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(227).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(228).Value = CType(Original_vcPosting,String)
            End If
            If (Original_dtmRenewalDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(229).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(230).Value = CType(Original_dtmRenewalDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(229).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(230).Value = Global.System.DBNull.Value
            End If
            If (Original_dtmRetirementDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(231).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(232).Value = CType(Original_dtmRetirementDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(231).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(232).Value = Global.System.DBNull.Value
            End If
            If (Original_ClerkEmpNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(233).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(234).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(233).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(234).Value = CType(Original_ClerkEmpNo,String)
            End If
            If (Original_RecommendedByEmpNo1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(235).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(236).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(235).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(236).Value = CType(Original_RecommendedByEmpNo1,String)
            End If
            If (Original_RecommendedByEmpNo2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(237).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(238).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(237).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(238).Value = CType(Original_RecommendedByEmpNo2,String)
            End If
            If (Original_SanctionedByEmpNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(239).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(240).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(239).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(240).Value = CType(Original_SanctionedByEmpNo,String)
            End If
            If (Original_GMEmpNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(241).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(242).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(241).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(242).Value = CType(Original_GMEmpNo,String)
            End If
            If (Original_ManagerEmpNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(243).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(244).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(243).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(244).Value = CType(Original_ManagerEmpNo,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(245).Value = CType(Original_nSectionId,Integer)
            If (Original_vcVehicleAccCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_vcVehicleAccCode")
            Else
                Me.Adapter.UpdateCommand.Parameters(246).Value = CType(Original_vcVehicleAccCode,String)
            End If
            If (Original_vcMobileAccCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_vcMobileAccCode")
            Else
                Me.Adapter.UpdateCommand.Parameters(247).Value = CType(Original_vcMobileAccCode,String)
            End If
            If (Original_RoEmpNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(248).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(249).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(248).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(249).Value = CType(Original_RoEmpNo,String)
            End If
            If (Original_SroEmpNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(250).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(251).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(250).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(251).Value = CType(Original_SroEmpNo,String)
            End If
            If (Original_AttVerificationEmpNo1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(252).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(253).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(252).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(253).Value = CType(Original_AttVerificationEmpNo1,String)
            End If
            If (Original_AttVerificationEmpNo2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(254).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(255).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(254).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(255).Value = CType(Original_AttVerificationEmpNo2,String)
            End If
            If (Original_AttApprovingEmpNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(256).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(257).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(256).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(257).Value = CType(Original_AttApprovingEmpNo,String)
            End If
            If (Original_nBirthCountry.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(258).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(259).Value = CType(Original_nBirthCountry.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(258).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(259).Value = Global.System.DBNull.Value
            End If
            If (Original_nBirthCity.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(260).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(261).Value = CType(Original_nBirthCity.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(260).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(261).Value = Global.System.DBNull.Value
            End If
            If (Original_nPreviousEmpId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(262).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(263).Value = CType(Original_nPreviousEmpId.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(262).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(263).Value = Global.System.DBNull.Value
            End If
            If (Original_nsStatusId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(264).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(265).Value = CType(Original_nsStatusId.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(264).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(265).Value = Global.System.DBNull.Value
            End If
            If (Original_PassportCountryId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(266).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(267).Value = CType(Original_PassportCountryId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(266).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(267).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal EmployeeNo As String,  _
                    ByVal FirstName As String,  _
                    ByVal MiddleName As String,  _
                    ByVal LastName As String,  _
                    ByVal FullName As String,  _
                    ByVal FatherName As String,  _
                    ByVal Gender As Global.System.Nullable(Of Byte),  _
                    ByVal Religion As Global.System.Nullable(Of Integer),  _
                    ByVal DateOfBirth As Global.System.Nullable(Of Date),  _
                    ByVal BloodGroup As Global.System.Nullable(Of Integer),  _
                    ByVal MaritalStatus As Global.System.Nullable(Of Byte),  _
                    ByVal MaritalStatusEffectiveDate As Global.System.Nullable(Of Date),  _
                    ByVal OldNICNo As String,  _
                    ByVal NewNICNo As String,  _
                    ByVal NationalTaxNo As String,  _
                    ByVal DrivingLicenseNo As String,  _
                    ByVal PassportNo As String,  _
                    ByVal PassportIssueDate As Global.System.Nullable(Of Date),  _
                    ByVal PassportExpiryDate As Global.System.Nullable(Of Date),  _
                    ByVal ContractTypeId As Global.System.Nullable(Of Integer),  _
                    ByVal EmployeeTypeId As Global.System.Nullable(Of Integer),  _
                    ByVal DesignationId As Global.System.Nullable(Of Integer),  _
                    ByVal EmployeeGradeId As Global.System.Nullable(Of Integer),  _
                    ByVal GradeEffectiveDate As Global.System.Nullable(Of Date),  _
                    ByVal ProbationEndDate As Global.System.Nullable(Of Date),  _
                    ByVal JoiningDate As Global.System.Nullable(Of Date),  _
                    ByVal ConfirmationDate As Global.System.Nullable(Of Date),  _
                    ByVal ContractStartDate As Global.System.Nullable(Of Date),  _
                    ByVal ContractEndDate As Global.System.Nullable(Of Date),  _
                    ByVal Category As Global.System.Nullable(Of Integer),  _
                    ByVal JobDescription As String,  _
                    ByVal ContactPresentAddress As String,  _
                    ByVal ContactPresentCountryId As Global.System.Nullable(Of Integer),  _
                    ByVal ContactPresentCityId As Global.System.Nullable(Of Integer),  _
                    ByVal ContactPresentPhone As String,  _
                    ByVal ContactPresentMobile As String,  _
                    ByVal ContactPermanentAddress As String,  _
                    ByVal ContactPermanentCountryId As Global.System.Nullable(Of Integer),  _
                    ByVal ContactPermanentCityId As Global.System.Nullable(Of Integer),  _
                    ByVal ContactPermanentPhone As String,  _
                    ByVal ContactPersonalEmail As String,  _
                    ByVal ContactOfficialEmail As String,  _
                    ByVal CreditCardNo As String,  _
                    ByVal Picture() As Byte,  _
                    ByVal ImageType As String,  _
                    ByVal NationalityId As Global.System.Nullable(Of Integer),  _
                    ByVal DomicileId As Global.System.Nullable(Of Integer),  _
                    ByVal HeadOfDepartmentId As Global.System.Nullable(Of Long),  _
                    ByVal SupervisorEmployeeId As Global.System.Nullable(Of Long),  _
                    ByVal IsHeadOfDepartment As Global.System.Nullable(Of Boolean),  _
                    ByVal IsForcePersonal As Global.System.Nullable(Of Boolean),  _
                    ByVal FPRetirementRankId As Global.System.Nullable(Of Integer),  _
                    ByVal vcRank As String,  _
                    ByVal FPRetirementDate As Global.System.Nullable(Of Date),  _
                    ByVal FPJobDescription As String,  _
                    ByVal FPCorpsId As Global.System.Nullable(Of Integer),  _
                    ByVal GuardianName As String,  _
                    ByVal GuardianRelationId As Global.System.Nullable(Of Integer),  _
                    ByVal GuardianNIC As String,  _
                    ByVal GuardianPhone As String,  _
                    ByVal GuardianAddress As String,  _
                    ByVal DepartmentId As Global.System.Nullable(Of Integer),  _
                    ByVal BranchId As Global.System.Nullable(Of Integer),  _
                    ByVal BusinessUnitId As Global.System.Nullable(Of Integer),  _
                    ByVal Scale As Global.System.Nullable(Of Integer),  _
                    ByVal IsActive As Global.System.Nullable(Of Boolean),  _
                    ByVal CurrentStateId As Global.System.Nullable(Of Integer),  _
                    ByVal IsTechnical As Short,  _
                    ByVal vcRemarks As String,  _
                    ByVal vcPosting As String,  _
                    ByVal dtmRenewalDate As Global.System.Nullable(Of Date),  _
                    ByVal dtmRetirementDate As Global.System.Nullable(Of Date),  _
                    ByVal ClerkEmpNo As String,  _
                    ByVal RecommendedByEmpNo1 As String,  _
                    ByVal RecommendedByEmpNo2 As String,  _
                    ByVal SanctionedByEmpNo As String,  _
                    ByVal GMEmpNo As String,  _
                    ByVal ManagerEmpNo As String,  _
                    ByVal nSectionId As Integer,  _
                    ByVal vcVehicleAccCode As String,  _
                    ByVal vcMobileAccCode As String,  _
                    ByVal RoEmpNo As String,  _
                    ByVal SroEmpNo As String,  _
                    ByVal AttVerificationEmpNo1 As String,  _
                    ByVal AttVerificationEmpNo2 As String,  _
                    ByVal AttApprovingEmpNo As String,  _
                    ByVal nBirthCountry As Global.System.Nullable(Of Integer),  _
                    ByVal nBirthCity As Global.System.Nullable(Of Integer),  _
                    ByVal nPreviousEmpId As Global.System.Nullable(Of Long),  _
                    ByVal nsStatusId As Global.System.Nullable(Of Short),  _
                    ByVal PassportCountryId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Id As Long,  _
                    ByVal Original_EmployeeNo As String,  _
                    ByVal Original_FirstName As String,  _
                    ByVal Original_MiddleName As String,  _
                    ByVal Original_LastName As String,  _
                    ByVal Original_FullName As String,  _
                    ByVal Original_FatherName As String,  _
                    ByVal Original_Gender As Global.System.Nullable(Of Byte),  _
                    ByVal Original_Religion As Global.System.Nullable(Of Integer),  _
                    ByVal Original_DateOfBirth As Global.System.Nullable(Of Date),  _
                    ByVal Original_BloodGroup As Global.System.Nullable(Of Integer),  _
                    ByVal Original_MaritalStatus As Global.System.Nullable(Of Byte),  _
                    ByVal Original_MaritalStatusEffectiveDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_OldNICNo As String,  _
                    ByVal Original_NewNICNo As String,  _
                    ByVal Original_NationalTaxNo As String,  _
                    ByVal Original_DrivingLicenseNo As String,  _
                    ByVal Original_PassportNo As String,  _
                    ByVal Original_PassportIssueDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_PassportExpiryDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_ContractTypeId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_EmployeeTypeId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_DesignationId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_EmployeeGradeId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_GradeEffectiveDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_ProbationEndDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_JoiningDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_ConfirmationDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_ContractStartDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_ContractEndDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_Category As Global.System.Nullable(Of Integer),  _
                    ByVal Original_JobDescription As String,  _
                    ByVal Original_ContactPresentAddress As String,  _
                    ByVal Original_ContactPresentCountryId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ContactPresentCityId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ContactPresentPhone As String,  _
                    ByVal Original_ContactPresentMobile As String,  _
                    ByVal Original_ContactPermanentAddress As String,  _
                    ByVal Original_ContactPermanentCountryId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ContactPermanentCityId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ContactPermanentPhone As String,  _
                    ByVal Original_ContactPersonalEmail As String,  _
                    ByVal Original_ContactOfficialEmail As String,  _
                    ByVal Original_CreditCardNo As String,  _
                    ByVal Original_ImageType As String,  _
                    ByVal Original_NationalityId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_DomicileId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_HeadOfDepartmentId As Global.System.Nullable(Of Long),  _
                    ByVal Original_SupervisorEmployeeId As Global.System.Nullable(Of Long),  _
                    ByVal Original_IsHeadOfDepartment As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IsForcePersonal As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_FPRetirementRankId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_vcRank As String,  _
                    ByVal Original_FPRetirementDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_FPJobDescription As String,  _
                    ByVal Original_FPCorpsId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_GuardianName As String,  _
                    ByVal Original_GuardianRelationId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_GuardianNIC As String,  _
                    ByVal Original_GuardianPhone As String,  _
                    ByVal Original_GuardianAddress As String,  _
                    ByVal Original_DepartmentId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_BranchId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_BusinessUnitId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Scale As Global.System.Nullable(Of Integer),  _
                    ByVal Original_IsActive As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CurrentStateId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_IsTechnical As Short,  _
                    ByVal Original_vcRemarks As String,  _
                    ByVal Original_vcPosting As String,  _
                    ByVal Original_dtmRenewalDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_dtmRetirementDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_ClerkEmpNo As String,  _
                    ByVal Original_RecommendedByEmpNo1 As String,  _
                    ByVal Original_RecommendedByEmpNo2 As String,  _
                    ByVal Original_SanctionedByEmpNo As String,  _
                    ByVal Original_GMEmpNo As String,  _
                    ByVal Original_ManagerEmpNo As String,  _
                    ByVal Original_nSectionId As Integer,  _
                    ByVal Original_vcVehicleAccCode As String,  _
                    ByVal Original_vcMobileAccCode As String,  _
                    ByVal Original_RoEmpNo As String,  _
                    ByVal Original_SroEmpNo As String,  _
                    ByVal Original_AttVerificationEmpNo1 As String,  _
                    ByVal Original_AttVerificationEmpNo2 As String,  _
                    ByVal Original_AttApprovingEmpNo As String,  _
                    ByVal Original_nBirthCountry As Global.System.Nullable(Of Integer),  _
                    ByVal Original_nBirthCity As Global.System.Nullable(Of Integer),  _
                    ByVal Original_nPreviousEmpId As Global.System.Nullable(Of Long),  _
                    ByVal Original_nsStatusId As Global.System.Nullable(Of Short),  _
                    ByVal Original_PassportCountryId As Global.System.Nullable(Of Integer)) As Integer
            Return Me.Update(Original_Id, EmployeeNo, FirstName, MiddleName, LastName, FullName, FatherName, Gender, Religion, DateOfBirth, BloodGroup, MaritalStatus, MaritalStatusEffectiveDate, OldNICNo, NewNICNo, NationalTaxNo, DrivingLicenseNo, PassportNo, PassportIssueDate, PassportExpiryDate, ContractTypeId, EmployeeTypeId, DesignationId, EmployeeGradeId, GradeEffectiveDate, ProbationEndDate, JoiningDate, ConfirmationDate, ContractStartDate, ContractEndDate, Category, JobDescription, ContactPresentAddress, ContactPresentCountryId, ContactPresentCityId, ContactPresentPhone, ContactPresentMobile, ContactPermanentAddress, ContactPermanentCountryId, ContactPermanentCityId, ContactPermanentPhone, ContactPersonalEmail, ContactOfficialEmail, CreditCardNo, Picture, ImageType, NationalityId, DomicileId, HeadOfDepartmentId, SupervisorEmployeeId, IsHeadOfDepartment, IsForcePersonal, FPRetirementRankId, vcRank, FPRetirementDate, FPJobDescription, FPCorpsId, GuardianName, GuardianRelationId, GuardianNIC, GuardianPhone, GuardianAddress, DepartmentId, BranchId, BusinessUnitId, Scale, IsActive, CurrentStateId, IsTechnical, vcRemarks, vcPosting, dtmRenewalDate, dtmRetirementDate, ClerkEmpNo, RecommendedByEmpNo1, RecommendedByEmpNo2, SanctionedByEmpNo, GMEmpNo, ManagerEmpNo, nSectionId, vcVehicleAccCode, vcMobileAccCode, RoEmpNo, SroEmpNo, AttVerificationEmpNo1, AttVerificationEmpNo2, AttApprovingEmpNo, nBirthCountry, nBirthCity, nPreviousEmpId, nsStatusId, PassportCountryId, Original_Id, Original_EmployeeNo, Original_FirstName, Original_MiddleName, Original_LastName, Original_FullName, Original_FatherName, Original_Gender, Original_Religion, Original_DateOfBirth, Original_BloodGroup, Original_MaritalStatus, Original_MaritalStatusEffectiveDate, Original_OldNICNo, Original_NewNICNo, Original_NationalTaxNo, Original_DrivingLicenseNo, Original_PassportNo, Original_PassportIssueDate, Original_PassportExpiryDate, Original_ContractTypeId, Original_EmployeeTypeId, Original_DesignationId, Original_EmployeeGradeId, Original_GradeEffectiveDate, Original_ProbationEndDate, Original_JoiningDate, Original_ConfirmationDate, Original_ContractStartDate, Original_ContractEndDate, Original_Category, Original_JobDescription, Original_ContactPresentAddress, Original_ContactPresentCountryId, Original_ContactPresentCityId, Original_ContactPresentPhone, Original_ContactPresentMobile, Original_ContactPermanentAddress, Original_ContactPermanentCountryId, Original_ContactPermanentCityId, Original_ContactPermanentPhone, Original_ContactPersonalEmail, Original_ContactOfficialEmail, Original_CreditCardNo, Original_ImageType, Original_NationalityId, Original_DomicileId, Original_HeadOfDepartmentId, Original_SupervisorEmployeeId, Original_IsHeadOfDepartment, Original_IsForcePersonal, Original_FPRetirementRankId, Original_vcRank, Original_FPRetirementDate, Original_FPJobDescription, Original_FPCorpsId, Original_GuardianName, Original_GuardianRelationId, Original_GuardianNIC, Original_GuardianPhone, Original_GuardianAddress, Original_DepartmentId, Original_BranchId, Original_BusinessUnitId, Original_Scale, Original_IsActive, Original_CurrentStateId, Original_IsTechnical, Original_vcRemarks, Original_vcPosting, Original_dtmRenewalDate, Original_dtmRetirementDate, Original_ClerkEmpNo, Original_RecommendedByEmpNo1, Original_RecommendedByEmpNo2, Original_SanctionedByEmpNo, Original_GMEmpNo, Original_ManagerEmpNo, Original_nSectionId, Original_vcVehicleAccCode, Original_vcMobileAccCode, Original_RoEmpNo, Original_SroEmpNo, Original_AttVerificationEmpNo1, Original_AttVerificationEmpNo2, Original_AttApprovingEmpNo, Original_nBirthCountry, Original_nBirthCity, Original_nPreviousEmpId, Original_nsStatusId, Original_PassportCountryId)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class EM_Employee_AuditTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "EM_Employee_Audit"
            tableMapping.ColumnMappings.Add("vcAction", "vcAction")
            tableMapping.ColumnMappings.Add("dtmActionDate", "dtmActionDate")
            tableMapping.ColumnMappings.Add("vcUserId", "vcUserId")
            tableMapping.ColumnMappings.Add("vcDocumentId", "vcDocumentId")
            tableMapping.ColumnMappings.Add("vcWorkStation", "vcWorkStation")
            tableMapping.ColumnMappings.Add("vcIP", "vcIP")
            tableMapping.ColumnMappings.Add("vcActionRemarks", "vcActionRemarks")
            tableMapping.ColumnMappings.Add("rowguid", "rowguid")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [ERP_FCCL_21_Aug_15].[dbo].[EM_Employee_Audit] WHERE (([vcAction] = ?"& _ 
                ") AND ([dtmActionDate] = ?) AND ([vcUserId] = ?) AND ([vcDocumentId] = ?) AND (("& _ 
                "? = 1 AND [vcWorkStation] IS NULL) OR ([vcWorkStation] = ?)) AND ((? = 1 AND [vc"& _ 
                "IP] IS NULL) OR ([vcIP] = ?)) AND ((? = 1 AND [vcActionRemarks] IS NULL) OR ([vc"& _ 
                "ActionRemarks] = ?)) AND ([rowguid] = ?))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_vcAction", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vcAction", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_dtmActionDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "dtmActionDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_vcUserId", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vcUserId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_vcDocumentId", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vcDocumentId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_vcWorkStation", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vcWorkStation", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_vcWorkStation", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vcWorkStation", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_vcIP", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vcIP", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_vcIP", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vcIP", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_vcActionRemarks", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vcActionRemarks", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_vcActionRemarks", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vcActionRemarks", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_rowguid", Global.System.Data.Odbc.OdbcType.UniqueIdentifier, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rowguid", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [ERP_FCCL_21_Aug_15].[dbo].[EM_Employee_Audit] ([vcAction], [dtmActio"& _ 
                "nDate], [vcUserId], [vcDocumentId], [vcWorkStation], [vcIP], [vcActionRemarks], "& _ 
                "[rowguid]) VALUES (?, ?, ?, ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("vcAction", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vcAction", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("dtmActionDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "dtmActionDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("vcUserId", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vcUserId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("vcDocumentId", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vcDocumentId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("vcWorkStation", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vcWorkStation", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("vcIP", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vcIP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("vcActionRemarks", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vcActionRemarks", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("rowguid", Global.System.Data.Odbc.OdbcType.UniqueIdentifier, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rowguid", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [ERP_FCCL_21_Aug_15].[dbo].[EM_Employee_Audit] SET [vcAction] = ?, [dtmAct"& _ 
                "ionDate] = ?, [vcUserId] = ?, [vcDocumentId] = ?, [vcWorkStation] = ?, [vcIP] = "& _ 
                "?, [vcActionRemarks] = ?, [rowguid] = ? WHERE (([vcAction] = ?) AND ([dtmActionD"& _ 
                "ate] = ?) AND ([vcUserId] = ?) AND ([vcDocumentId] = ?) AND ((? = 1 AND [vcWorkS"& _ 
                "tation] IS NULL) OR ([vcWorkStation] = ?)) AND ((? = 1 AND [vcIP] IS NULL) OR (["& _ 
                "vcIP] = ?)) AND ((? = 1 AND [vcActionRemarks] IS NULL) OR ([vcActionRemarks] = ?"& _ 
                ")) AND ([rowguid] = ?))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("vcAction", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vcAction", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("dtmActionDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "dtmActionDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("vcUserId", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vcUserId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("vcDocumentId", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vcDocumentId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("vcWorkStation", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vcWorkStation", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("vcIP", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vcIP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("vcActionRemarks", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vcActionRemarks", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("rowguid", Global.System.Data.Odbc.OdbcType.UniqueIdentifier, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rowguid", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_vcAction", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vcAction", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_dtmActionDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "dtmActionDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_vcUserId", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vcUserId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_vcDocumentId", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vcDocumentId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_vcWorkStation", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vcWorkStation", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_vcWorkStation", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vcWorkStation", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_vcIP", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vcIP", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_vcIP", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vcIP", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_vcActionRemarks", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vcActionRemarks", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_vcActionRemarks", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vcActionRemarks", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_rowguid", Global.System.Data.Odbc.OdbcType.UniqueIdentifier, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rowguid", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.HR.My.MySettings.Default.csFCCL
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT vcAction, dtmActionDate, vcUserId, vcDocumentId, vcWorkStation, vcIP, vcAc"& _ 
                "tionRemarks, rowguid FROM dbo.EM_Employee_Audit"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsFCCL.EM_Employee_AuditDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsFCCL.EM_Employee_AuditDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsFCCL.EM_Employee_AuditDataTable = New dsFCCL.EM_Employee_AuditDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsFCCL.EM_Employee_AuditDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsFCCL) As Integer
            Return Me.Adapter.Update(dataSet, "EM_Employee_Audit")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_vcAction As String, ByVal Original_dtmActionDate As Date, ByVal Original_vcUserId As String, ByVal Original_vcDocumentId As String, ByVal Original_vcWorkStation As String, ByVal Original_vcIP As String, ByVal Original_vcActionRemarks As String, ByVal Original_rowguid As System.Guid) As Integer
            If (Original_vcAction Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_vcAction")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_vcAction,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_dtmActionDate,Date)
            If (Original_vcUserId Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_vcUserId")
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_vcUserId,String)
            End If
            If (Original_vcDocumentId Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_vcDocumentId")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_vcDocumentId,String)
            End If
            If (Original_vcWorkStation Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_vcWorkStation,String)
            End If
            If (Original_vcIP Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_vcIP,String)
            End If
            If (Original_vcActionRemarks Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_vcActionRemarks,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_rowguid,System.Guid)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal vcAction As String, ByVal dtmActionDate As Date, ByVal vcUserId As String, ByVal vcDocumentId As String, ByVal vcWorkStation As String, ByVal vcIP As String, ByVal vcActionRemarks As String, ByVal rowguid As System.Guid) As Integer
            If (vcAction Is Nothing) Then
                Throw New Global.System.ArgumentNullException("vcAction")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(vcAction,String)
            End If
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(dtmActionDate,Date)
            If (vcUserId Is Nothing) Then
                Throw New Global.System.ArgumentNullException("vcUserId")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(vcUserId,String)
            End If
            If (vcDocumentId Is Nothing) Then
                Throw New Global.System.ArgumentNullException("vcDocumentId")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(vcDocumentId,String)
            End If
            If (vcWorkStation Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(vcWorkStation,String)
            End If
            If (vcIP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(vcIP,String)
            End If
            If (vcActionRemarks Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(vcActionRemarks,String)
            End If
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(rowguid,System.Guid)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal vcAction As String,  _
                    ByVal dtmActionDate As Date,  _
                    ByVal vcUserId As String,  _
                    ByVal vcDocumentId As String,  _
                    ByVal vcWorkStation As String,  _
                    ByVal vcIP As String,  _
                    ByVal vcActionRemarks As String,  _
                    ByVal rowguid As System.Guid,  _
                    ByVal Original_vcAction As String,  _
                    ByVal Original_dtmActionDate As Date,  _
                    ByVal Original_vcUserId As String,  _
                    ByVal Original_vcDocumentId As String,  _
                    ByVal Original_vcWorkStation As String,  _
                    ByVal Original_vcIP As String,  _
                    ByVal Original_vcActionRemarks As String,  _
                    ByVal Original_rowguid As System.Guid) As Integer
            If (vcAction Is Nothing) Then
                Throw New Global.System.ArgumentNullException("vcAction")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(vcAction,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(dtmActionDate,Date)
            If (vcUserId Is Nothing) Then
                Throw New Global.System.ArgumentNullException("vcUserId")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(vcUserId,String)
            End If
            If (vcDocumentId Is Nothing) Then
                Throw New Global.System.ArgumentNullException("vcDocumentId")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(vcDocumentId,String)
            End If
            If (vcWorkStation Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(vcWorkStation,String)
            End If
            If (vcIP Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(vcIP,String)
            End If
            If (vcActionRemarks Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(vcActionRemarks,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(rowguid,System.Guid)
            If (Original_vcAction Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_vcAction")
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_vcAction,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_dtmActionDate,Date)
            If (Original_vcUserId Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_vcUserId")
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_vcUserId,String)
            End If
            If (Original_vcDocumentId Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_vcDocumentId")
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_vcDocumentId,String)
            End If
            If (Original_vcWorkStation Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_vcWorkStation,String)
            End If
            If (Original_vcIP Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_vcIP,String)
            End If
            If (Original_vcActionRemarks Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_vcActionRemarks,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_rowguid,System.Guid)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal vcWorkStation As String, ByVal vcIP As String, ByVal vcActionRemarks As String, ByVal rowguid As System.Guid, ByVal Original_vcAction As String, ByVal Original_dtmActionDate As Date, ByVal Original_vcUserId As String, ByVal Original_vcDocumentId As String, ByVal Original_vcWorkStation As String, ByVal Original_vcIP As String, ByVal Original_vcActionRemarks As String, ByVal Original_rowguid As System.Guid) As Integer
            Return Me.Update(Original_vcAction, Original_dtmActionDate, Original_vcUserId, Original_vcDocumentId, vcWorkStation, vcIP, vcActionRemarks, rowguid, Original_vcAction, Original_dtmActionDate, Original_vcUserId, Original_vcDocumentId, Original_vcWorkStation, Original_vcIP, Original_vcActionRemarks, Original_rowguid)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class HR_PRMBankTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "HR_PRMBank"
            tableMapping.ColumnMappings.Add("Id", "Id")
            tableMapping.ColumnMappings.Add("Description", "Description")
            tableMapping.ColumnMappings.Add("CountryId", "CountryId")
            tableMapping.ColumnMappings.Add("CityId", "CityId")
            tableMapping.ColumnMappings.Add("Address", "Address")
            tableMapping.ColumnMappings.Add("PhoneNo", "PhoneNo")
            tableMapping.ColumnMappings.Add("BusinessUnitId", "BusinessUnitId")
            tableMapping.ColumnMappings.Add("Status", "Status")
            tableMapping.ColumnMappings.Add("rowguid", "rowguid")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [ERP_FCCL_21_Aug_15].[dbo].[HR_PRMBank] WHERE (([Id] = ?) AND ([Descr"& _ 
                "iption] = ?) AND ((? = 1 AND [CountryId] IS NULL) OR ([CountryId] = ?)) AND ((? "& _ 
                "= 1 AND [CityId] IS NULL) OR ([CityId] = ?)) AND ([Address] = ?) AND ([PhoneNo] "& _ 
                "= ?) AND ([BusinessUnitId] = ?) AND ([Status] = ?) AND ([rowguid] = ?))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Id", Global.System.Data.Odbc.OdbcType.BigInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Id", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Description", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Description", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CountryId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CountryId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CountryId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CountryId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CityId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CityId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CityId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CityId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Address", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Address", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PhoneNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PhoneNo", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_BusinessUnitId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BusinessUnitId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Status", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Status", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_rowguid", Global.System.Data.Odbc.OdbcType.UniqueIdentifier, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rowguid", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [ERP_FCCL_21_Aug_15].[dbo].[HR_PRMBank] ([Description], [CountryId], "& _ 
                "[CityId], [Address], [PhoneNo], [BusinessUnitId], [Status], [rowguid]) VALUES (?"& _ 
                ", ?, ?, ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Description", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Description", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CountryId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CountryId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CityId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CityId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Address", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Address", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PhoneNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PhoneNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BusinessUnitId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BusinessUnitId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Status", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Status", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("rowguid", Global.System.Data.Odbc.OdbcType.UniqueIdentifier, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rowguid", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [ERP_FCCL_21_Aug_15].[dbo].[HR_PRMBank] SET [Description] = ?, [CountryId]"& _ 
                " = ?, [CityId] = ?, [Address] = ?, [PhoneNo] = ?, [BusinessUnitId] = ?, [Status]"& _ 
                " = ?, [rowguid] = ? WHERE (([Id] = ?) AND ([Description] = ?) AND ((? = 1 AND [C"& _ 
                "ountryId] IS NULL) OR ([CountryId] = ?)) AND ((? = 1 AND [CityId] IS NULL) OR (["& _ 
                "CityId] = ?)) AND ([Address] = ?) AND ([PhoneNo] = ?) AND ([BusinessUnitId] = ?)"& _ 
                " AND ([Status] = ?) AND ([rowguid] = ?))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Description", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Description", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CountryId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CountryId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CityId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CityId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Address", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Address", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PhoneNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PhoneNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BusinessUnitId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BusinessUnitId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Status", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Status", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("rowguid", Global.System.Data.Odbc.OdbcType.UniqueIdentifier, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rowguid", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Id", Global.System.Data.Odbc.OdbcType.BigInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Id", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Description", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Description", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CountryId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CountryId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CountryId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CountryId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CityId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CityId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CityId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CityId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Address", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Address", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PhoneNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PhoneNo", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_BusinessUnitId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BusinessUnitId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Status", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Status", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_rowguid", Global.System.Data.Odbc.OdbcType.UniqueIdentifier, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rowguid", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.HR.My.MySettings.Default.csFCCL
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Id, Description, CountryId, CityId, Address, PhoneNo, BusinessUnitId, Stat"& _ 
                "us, rowguid FROM dbo.HR_PRMBank"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsFCCL.HR_PRMBankDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsFCCL.HR_PRMBankDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsFCCL.HR_PRMBankDataTable = New dsFCCL.HR_PRMBankDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsFCCL.HR_PRMBankDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsFCCL) As Integer
            Return Me.Adapter.Update(dataSet, "HR_PRMBank")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_Id As Long, ByVal Original_Description As String, ByVal Original_CountryId As Global.System.Nullable(Of Integer), ByVal Original_CityId As Global.System.Nullable(Of Integer), ByVal Original_Address As String, ByVal Original_PhoneNo As String, ByVal Original_BusinessUnitId As Integer, ByVal Original_Status As Boolean, ByVal Original_rowguid As System.Guid) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Id,Long)
            If (Original_Description Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Description")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_Description,String)
            End If
            If (Original_CountryId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_CountryId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Original_CityId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_CityId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Original_Address Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Address")
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_Address,String)
            End If
            If (Original_PhoneNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_PhoneNo")
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_PhoneNo,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_BusinessUnitId,Integer)
            Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_Status,Boolean)
            Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_rowguid,System.Guid)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Description As String, ByVal CountryId As Global.System.Nullable(Of Integer), ByVal CityId As Global.System.Nullable(Of Integer), ByVal Address As String, ByVal PhoneNo As String, ByVal BusinessUnitId As Integer, ByVal Status As Boolean, ByVal rowguid As System.Guid) As Integer
            If (Description Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Description")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Description,String)
            End If
            If (CountryId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(CountryId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (CityId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(CityId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Address Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Address")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Address,String)
            End If
            If (PhoneNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PhoneNo")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(PhoneNo,String)
            End If
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(BusinessUnitId,Integer)
            Me.Adapter.InsertCommand.Parameters(6).Value = CType(Status,Boolean)
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(rowguid,System.Guid)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Description As String,  _
                    ByVal CountryId As Global.System.Nullable(Of Integer),  _
                    ByVal CityId As Global.System.Nullable(Of Integer),  _
                    ByVal Address As String,  _
                    ByVal PhoneNo As String,  _
                    ByVal BusinessUnitId As Integer,  _
                    ByVal Status As Boolean,  _
                    ByVal rowguid As System.Guid,  _
                    ByVal Original_Id As Long,  _
                    ByVal Original_Description As String,  _
                    ByVal Original_CountryId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CityId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Address As String,  _
                    ByVal Original_PhoneNo As String,  _
                    ByVal Original_BusinessUnitId As Integer,  _
                    ByVal Original_Status As Boolean,  _
                    ByVal Original_rowguid As System.Guid) As Integer
            If (Description Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Description")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Description,String)
            End If
            If (CountryId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(CountryId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (CityId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(CityId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Address Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Address")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Address,String)
            End If
            If (PhoneNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PhoneNo")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(PhoneNo,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(BusinessUnitId,Integer)
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Status,Boolean)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(rowguid,System.Guid)
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_Id,Long)
            If (Original_Description Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Description")
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_Description,String)
            End If
            If (Original_CountryId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_CountryId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Original_CityId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_CityId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Original_Address Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Address")
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_Address,String)
            End If
            If (Original_PhoneNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_PhoneNo")
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_PhoneNo,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_BusinessUnitId,Integer)
            Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_Status,Boolean)
            Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_rowguid,System.Guid)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class HR_PRMBranchTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "HR_PRMBranch"
            tableMapping.ColumnMappings.Add("Id", "Id")
            tableMapping.ColumnMappings.Add("BusinessUnitId", "BusinessUnitId")
            tableMapping.ColumnMappings.Add("BranchName", "BranchName")
            tableMapping.ColumnMappings.Add("Abbreviation", "Abbreviation")
            tableMapping.ColumnMappings.Add("ParentBranchId", "ParentBranchId")
            tableMapping.ColumnMappings.Add("PostalAddress", "PostalAddress")
            tableMapping.ColumnMappings.Add("WebAddress", "WebAddress")
            tableMapping.ColumnMappings.Add("Remarks", "Remarks")
            tableMapping.ColumnMappings.Add("Status", "Status")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [ERP_FCCL_21_Aug_15].[dbo].[HR_PRMBranch] WHERE (([Id] = ?) AND ([Bus"& _ 
                "inessUnitId] = ?) AND ([BranchName] = ?) AND ((? = 1 AND [Abbreviation] IS NULL)"& _ 
                " OR ([Abbreviation] = ?)) AND ((? = 1 AND [ParentBranchId] IS NULL) OR ([ParentB"& _ 
                "ranchId] = ?)) AND ((? = 1 AND [PostalAddress] IS NULL) OR ([PostalAddress] = ?)"& _ 
                ") AND ((? = 1 AND [WebAddress] IS NULL) OR ([WebAddress] = ?)) AND ((? = 1 AND ["& _ 
                "Remarks] IS NULL) OR ([Remarks] = ?)) AND ((? = 1 AND [Status] IS NULL) OR ([Sta"& _ 
                "tus] = ?)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Id", Global.System.Data.Odbc.OdbcType.BigInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Id", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_BusinessUnitId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BusinessUnitId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_BranchName", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BranchName", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Abbreviation", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Abbreviation", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Abbreviation", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Abbreviation", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ParentBranchId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ParentBranchId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ParentBranchId", Global.System.Data.Odbc.OdbcType.BigInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ParentBranchId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PostalAddress", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PostalAddress", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PostalAddress", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PostalAddress", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_WebAddress", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WebAddress", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_WebAddress", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WebAddress", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Remarks", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Remarks", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Remarks", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Remarks", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Status", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Status", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Status", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Status", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [ERP_FCCL_21_Aug_15].[dbo].[HR_PRMBranch] ([Id], [BusinessUnitId], [B"& _ 
                "ranchName], [Abbreviation], [ParentBranchId], [PostalAddress], [WebAddress], [Re"& _ 
                "marks], [Status]) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Id", Global.System.Data.Odbc.OdbcType.BigInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Id", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BusinessUnitId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BusinessUnitId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BranchName", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BranchName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Abbreviation", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Abbreviation", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ParentBranchId", Global.System.Data.Odbc.OdbcType.BigInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ParentBranchId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PostalAddress", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PostalAddress", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("WebAddress", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WebAddress", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Remarks", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Remarks", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Status", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Status", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [ERP_FCCL_21_Aug_15].[dbo].[HR_PRMBranch] SET [Id] = ?, [BusinessUnitId] ="& _ 
                " ?, [BranchName] = ?, [Abbreviation] = ?, [ParentBranchId] = ?, [PostalAddress] "& _ 
                "= ?, [WebAddress] = ?, [Remarks] = ?, [Status] = ? WHERE (([Id] = ?) AND ([Busin"& _ 
                "essUnitId] = ?) AND ([BranchName] = ?) AND ((? = 1 AND [Abbreviation] IS NULL) O"& _ 
                "R ([Abbreviation] = ?)) AND ((? = 1 AND [ParentBranchId] IS NULL) OR ([ParentBra"& _ 
                "nchId] = ?)) AND ((? = 1 AND [PostalAddress] IS NULL) OR ([PostalAddress] = ?)) "& _ 
                "AND ((? = 1 AND [WebAddress] IS NULL) OR ([WebAddress] = ?)) AND ((? = 1 AND [Re"& _ 
                "marks] IS NULL) OR ([Remarks] = ?)) AND ((? = 1 AND [Status] IS NULL) OR ([Statu"& _ 
                "s] = ?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Id", Global.System.Data.Odbc.OdbcType.BigInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Id", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BusinessUnitId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BusinessUnitId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BranchName", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BranchName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Abbreviation", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Abbreviation", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ParentBranchId", Global.System.Data.Odbc.OdbcType.BigInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ParentBranchId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PostalAddress", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PostalAddress", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("WebAddress", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WebAddress", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Remarks", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Remarks", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Status", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Status", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Id", Global.System.Data.Odbc.OdbcType.BigInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Id", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_BusinessUnitId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BusinessUnitId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_BranchName", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BranchName", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Abbreviation", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Abbreviation", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Abbreviation", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Abbreviation", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ParentBranchId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ParentBranchId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ParentBranchId", Global.System.Data.Odbc.OdbcType.BigInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ParentBranchId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PostalAddress", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PostalAddress", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PostalAddress", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PostalAddress", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_WebAddress", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WebAddress", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_WebAddress", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WebAddress", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Remarks", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Remarks", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Remarks", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Remarks", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Status", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Status", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Status", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Status", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.HR.My.MySettings.Default.csFCCL
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Id, BusinessUnitId, BranchName, Abbreviation, ParentBranchId, PostalAddres"& _ 
                "s, WebAddress, Remarks, Status FROM dbo.HR_PRMBranch"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsFCCL.HR_PRMBranchDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsFCCL.HR_PRMBranchDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsFCCL.HR_PRMBranchDataTable = New dsFCCL.HR_PRMBranchDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsFCCL.HR_PRMBranchDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsFCCL) As Integer
            Return Me.Adapter.Update(dataSet, "HR_PRMBranch")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_Id As Long, ByVal Original_BusinessUnitId As Integer, ByVal Original_BranchName As String, ByVal Original_Abbreviation As String, ByVal Original_ParentBranchId As Global.System.Nullable(Of Long), ByVal Original_PostalAddress As String, ByVal Original_WebAddress As String, ByVal Original_Remarks As String, ByVal Original_Status As Global.System.Nullable(Of Boolean)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Id,Long)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_BusinessUnitId,Integer)
            If (Original_BranchName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_BranchName")
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_BranchName,String)
            End If
            If (Original_Abbreviation Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_Abbreviation,String)
            End If
            If (Original_ParentBranchId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_ParentBranchId.Value,Long)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_PostalAddress Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_PostalAddress,String)
            End If
            If (Original_WebAddress Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_WebAddress,String)
            End If
            If (Original_Remarks Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_Remarks,String)
            End If
            If (Original_Status.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_Status.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Id As Long, ByVal BusinessUnitId As Integer, ByVal BranchName As String, ByVal Abbreviation As String, ByVal ParentBranchId As Global.System.Nullable(Of Long), ByVal PostalAddress As String, ByVal WebAddress As String, ByVal Remarks As String, ByVal Status As Global.System.Nullable(Of Boolean)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(Id,Long)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(BusinessUnitId,Integer)
            If (BranchName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("BranchName")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(BranchName,String)
            End If
            If (Abbreviation Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Abbreviation,String)
            End If
            If (ParentBranchId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(ParentBranchId.Value,Long)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (PostalAddress Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(PostalAddress,String)
            End If
            If (WebAddress Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(WebAddress,String)
            End If
            If (Remarks Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(Remarks,String)
            End If
            If (Status.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(Status.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Id As Long,  _
                    ByVal BusinessUnitId As Integer,  _
                    ByVal BranchName As String,  _
                    ByVal Abbreviation As String,  _
                    ByVal ParentBranchId As Global.System.Nullable(Of Long),  _
                    ByVal PostalAddress As String,  _
                    ByVal WebAddress As String,  _
                    ByVal Remarks As String,  _
                    ByVal Status As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_Id As Long,  _
                    ByVal Original_BusinessUnitId As Integer,  _
                    ByVal Original_BranchName As String,  _
                    ByVal Original_Abbreviation As String,  _
                    ByVal Original_ParentBranchId As Global.System.Nullable(Of Long),  _
                    ByVal Original_PostalAddress As String,  _
                    ByVal Original_WebAddress As String,  _
                    ByVal Original_Remarks As String,  _
                    ByVal Original_Status As Global.System.Nullable(Of Boolean)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Id,Long)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(BusinessUnitId,Integer)
            If (BranchName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("BranchName")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(BranchName,String)
            End If
            If (Abbreviation Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Abbreviation,String)
            End If
            If (ParentBranchId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(ParentBranchId.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (PostalAddress Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(PostalAddress,String)
            End If
            If (WebAddress Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(WebAddress,String)
            End If
            If (Remarks Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Remarks,String)
            End If
            If (Status.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Status.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_Id,Long)
            Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_BusinessUnitId,Integer)
            If (Original_BranchName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_BranchName")
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_BranchName,String)
            End If
            If (Original_Abbreviation Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_Abbreviation,String)
            End If
            If (Original_ParentBranchId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_ParentBranchId.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Original_PostalAddress Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_PostalAddress,String)
            End If
            If (Original_WebAddress Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_WebAddress,String)
            End If
            If (Original_Remarks Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_Remarks,String)
            End If
            If (Original_Status.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Original_Status.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal BusinessUnitId As Integer,  _
                    ByVal BranchName As String,  _
                    ByVal Abbreviation As String,  _
                    ByVal ParentBranchId As Global.System.Nullable(Of Long),  _
                    ByVal PostalAddress As String,  _
                    ByVal WebAddress As String,  _
                    ByVal Remarks As String,  _
                    ByVal Status As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_Id As Long,  _
                    ByVal Original_BusinessUnitId As Integer,  _
                    ByVal Original_BranchName As String,  _
                    ByVal Original_Abbreviation As String,  _
                    ByVal Original_ParentBranchId As Global.System.Nullable(Of Long),  _
                    ByVal Original_PostalAddress As String,  _
                    ByVal Original_WebAddress As String,  _
                    ByVal Original_Remarks As String,  _
                    ByVal Original_Status As Global.System.Nullable(Of Boolean)) As Integer
            Return Me.Update(Original_Id, BusinessUnitId, BranchName, Abbreviation, ParentBranchId, PostalAddress, WebAddress, Remarks, Status, Original_Id, Original_BusinessUnitId, Original_BranchName, Original_Abbreviation, Original_ParentBranchId, Original_PostalAddress, Original_WebAddress, Original_Remarks, Original_Status)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class HR_PRMBusinessUnitTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "HR_PRMBusinessUnit"
            tableMapping.ColumnMappings.Add("Id", "Id")
            tableMapping.ColumnMappings.Add("OrganizationName", "OrganizationName")
            tableMapping.ColumnMappings.Add("Abbreviation", "Abbreviation")
            tableMapping.ColumnMappings.Add("ParentOrganizationId", "ParentOrganizationId")
            tableMapping.ColumnMappings.Add("ManagingOrganizationId", "ManagingOrganizationId")
            tableMapping.ColumnMappings.Add("PostalAddress", "PostalAddress")
            tableMapping.ColumnMappings.Add("WebAddress", "WebAddress")
            tableMapping.ColumnMappings.Add("Remarks", "Remarks")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [ERP_FCCL_21_Aug_15].[dbo].[HR_PRMBusinessUnit] WHERE (([Id] = ?) AND"& _ 
                " ([OrganizationName] = ?) AND ([Abbreviation] = ?) AND ((? = 1 AND [ParentOrgani"& _ 
                "zationId] IS NULL) OR ([ParentOrganizationId] = ?)) AND ((? = 1 AND [ManagingOrg"& _ 
                "anizationId] IS NULL) OR ([ManagingOrganizationId] = ?)) AND ((? = 1 AND [Postal"& _ 
                "Address] IS NULL) OR ([PostalAddress] = ?)) AND ((? = 1 AND [WebAddress] IS NULL"& _ 
                ") OR ([WebAddress] = ?)) AND ((? = 1 AND [Remarks] IS NULL) OR ([Remarks] = ?)))"& _ 
                ""
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Id", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Id", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_OrganizationName", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OrganizationName", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Abbreviation", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Abbreviation", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ParentOrganizationId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ParentOrganizationId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ParentOrganizationId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ParentOrganizationId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ManagingOrganizationId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ManagingOrganizationId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ManagingOrganizationId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ManagingOrganizationId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PostalAddress", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PostalAddress", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PostalAddress", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PostalAddress", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_WebAddress", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WebAddress", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_WebAddress", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WebAddress", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Remarks", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Remarks", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Remarks", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Remarks", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [ERP_FCCL_21_Aug_15].[dbo].[HR_PRMBusinessUnit] ([Id], [OrganizationN"& _ 
                "ame], [Abbreviation], [ParentOrganizationId], [ManagingOrganizationId], [PostalA"& _ 
                "ddress], [WebAddress], [Remarks]) VALUES (?, ?, ?, ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Id", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Id", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("OrganizationName", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OrganizationName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Abbreviation", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Abbreviation", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ParentOrganizationId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ParentOrganizationId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ManagingOrganizationId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ManagingOrganizationId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PostalAddress", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PostalAddress", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("WebAddress", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WebAddress", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Remarks", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Remarks", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [ERP_FCCL_21_Aug_15].[dbo].[HR_PRMBusinessUnit] SET [Id] = ?, [Organizatio"& _ 
                "nName] = ?, [Abbreviation] = ?, [ParentOrganizationId] = ?, [ManagingOrganizatio"& _ 
                "nId] = ?, [PostalAddress] = ?, [WebAddress] = ?, [Remarks] = ? WHERE (([Id] = ?)"& _ 
                " AND ([OrganizationName] = ?) AND ([Abbreviation] = ?) AND ((? = 1 AND [ParentOr"& _ 
                "ganizationId] IS NULL) OR ([ParentOrganizationId] = ?)) AND ((? = 1 AND [Managin"& _ 
                "gOrganizationId] IS NULL) OR ([ManagingOrganizationId] = ?)) AND ((? = 1 AND [Po"& _ 
                "stalAddress] IS NULL) OR ([PostalAddress] = ?)) AND ((? = 1 AND [WebAddress] IS "& _ 
                "NULL) OR ([WebAddress] = ?)) AND ((? = 1 AND [Remarks] IS NULL) OR ([Remarks] = "& _ 
                "?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Id", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Id", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("OrganizationName", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OrganizationName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Abbreviation", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Abbreviation", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ParentOrganizationId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ParentOrganizationId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ManagingOrganizationId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ManagingOrganizationId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PostalAddress", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PostalAddress", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("WebAddress", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WebAddress", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Remarks", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Remarks", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Id", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Id", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_OrganizationName", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OrganizationName", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Abbreviation", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Abbreviation", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ParentOrganizationId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ParentOrganizationId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ParentOrganizationId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ParentOrganizationId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ManagingOrganizationId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ManagingOrganizationId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ManagingOrganizationId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ManagingOrganizationId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PostalAddress", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PostalAddress", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PostalAddress", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PostalAddress", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_WebAddress", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WebAddress", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_WebAddress", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WebAddress", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Remarks", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Remarks", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Remarks", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Remarks", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.HR.My.MySettings.Default.csFCCL
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Id, OrganizationName, Abbreviation, ParentOrganizationId, ManagingOrganiza"& _ 
                "tionId, PostalAddress, WebAddress, Remarks FROM dbo.HR_PRMBusinessUnit"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsFCCL.HR_PRMBusinessUnitDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsFCCL.HR_PRMBusinessUnitDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsFCCL.HR_PRMBusinessUnitDataTable = New dsFCCL.HR_PRMBusinessUnitDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsFCCL.HR_PRMBusinessUnitDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsFCCL) As Integer
            Return Me.Adapter.Update(dataSet, "HR_PRMBusinessUnit")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_Id As Integer, ByVal Original_OrganizationName As String, ByVal Original_Abbreviation As String, ByVal Original_ParentOrganizationId As Global.System.Nullable(Of Integer), ByVal Original_ManagingOrganizationId As Global.System.Nullable(Of Integer), ByVal Original_PostalAddress As String, ByVal Original_WebAddress As String, ByVal Original_Remarks As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Id,Integer)
            If (Original_OrganizationName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_OrganizationName")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_OrganizationName,String)
            End If
            If (Original_Abbreviation Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Abbreviation")
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Abbreviation,String)
            End If
            If (Original_ParentOrganizationId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_ParentOrganizationId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_ManagingOrganizationId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_ManagingOrganizationId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_PostalAddress Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_PostalAddress,String)
            End If
            If (Original_WebAddress Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_WebAddress,String)
            End If
            If (Original_Remarks Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_Remarks,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Id As Integer, ByVal OrganizationName As String, ByVal Abbreviation As String, ByVal ParentOrganizationId As Global.System.Nullable(Of Integer), ByVal ManagingOrganizationId As Global.System.Nullable(Of Integer), ByVal PostalAddress As String, ByVal WebAddress As String, ByVal Remarks As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(Id,Integer)
            If (OrganizationName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("OrganizationName")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(OrganizationName,String)
            End If
            If (Abbreviation Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Abbreviation")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Abbreviation,String)
            End If
            If (ParentOrganizationId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(ParentOrganizationId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (ManagingOrganizationId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(ManagingOrganizationId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (PostalAddress Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(PostalAddress,String)
            End If
            If (WebAddress Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(WebAddress,String)
            End If
            If (Remarks Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(Remarks,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Id As Integer,  _
                    ByVal OrganizationName As String,  _
                    ByVal Abbreviation As String,  _
                    ByVal ParentOrganizationId As Global.System.Nullable(Of Integer),  _
                    ByVal ManagingOrganizationId As Global.System.Nullable(Of Integer),  _
                    ByVal PostalAddress As String,  _
                    ByVal WebAddress As String,  _
                    ByVal Remarks As String,  _
                    ByVal Original_Id As Integer,  _
                    ByVal Original_OrganizationName As String,  _
                    ByVal Original_Abbreviation As String,  _
                    ByVal Original_ParentOrganizationId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ManagingOrganizationId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_PostalAddress As String,  _
                    ByVal Original_WebAddress As String,  _
                    ByVal Original_Remarks As String) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Id,Integer)
            If (OrganizationName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("OrganizationName")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(OrganizationName,String)
            End If
            If (Abbreviation Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Abbreviation")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Abbreviation,String)
            End If
            If (ParentOrganizationId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(ParentOrganizationId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (ManagingOrganizationId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(ManagingOrganizationId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (PostalAddress Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(PostalAddress,String)
            End If
            If (WebAddress Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(WebAddress,String)
            End If
            If (Remarks Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Remarks,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_Id,Integer)
            If (Original_OrganizationName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_OrganizationName")
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_OrganizationName,String)
            End If
            If (Original_Abbreviation Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Abbreviation")
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_Abbreviation,String)
            End If
            If (Original_ParentOrganizationId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_ParentOrganizationId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Original_ManagingOrganizationId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_ManagingOrganizationId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Original_PostalAddress Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_PostalAddress,String)
            End If
            If (Original_WebAddress Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_WebAddress,String)
            End If
            If (Original_Remarks Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Original_Remarks,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal OrganizationName As String, ByVal Abbreviation As String, ByVal ParentOrganizationId As Global.System.Nullable(Of Integer), ByVal ManagingOrganizationId As Global.System.Nullable(Of Integer), ByVal PostalAddress As String, ByVal WebAddress As String, ByVal Remarks As String, ByVal Original_Id As Integer, ByVal Original_OrganizationName As String, ByVal Original_Abbreviation As String, ByVal Original_ParentOrganizationId As Global.System.Nullable(Of Integer), ByVal Original_ManagingOrganizationId As Global.System.Nullable(Of Integer), ByVal Original_PostalAddress As String, ByVal Original_WebAddress As String, ByVal Original_Remarks As String) As Integer
            Return Me.Update(Original_Id, OrganizationName, Abbreviation, ParentOrganizationId, ManagingOrganizationId, PostalAddress, WebAddress, Remarks, Original_Id, Original_OrganizationName, Original_Abbreviation, Original_ParentOrganizationId, Original_ManagingOrganizationId, Original_PostalAddress, Original_WebAddress, Original_Remarks)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class HR_PRMCityTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "HR_PRMCity"
            tableMapping.ColumnMappings.Add("Id", "Id")
            tableMapping.ColumnMappings.Add("Description", "Description")
            tableMapping.ColumnMappings.Add("Status", "Status")
            tableMapping.ColumnMappings.Add("CountryId", "CountryId")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [ERP_FCCL_21_Aug_15].[dbo].[HR_PRMCity] WHERE (([Id] = ?) AND ([Descr"& _ 
                "iption] = ?) AND ([Status] = ?) AND ([CountryId] = ?))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Id", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Id", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Description", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Description", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Status", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Status", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CountryId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CountryId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [ERP_FCCL_21_Aug_15].[dbo].[HR_PRMCity] ([Id], [Description], [Status"& _ 
                "], [CountryId]) VALUES (?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Id", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Id", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Description", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Description", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Status", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Status", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CountryId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CountryId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [ERP_FCCL_21_Aug_15].[dbo].[HR_PRMCity] SET [Id] = ?, [Description] = ?, ["& _ 
                "Status] = ?, [CountryId] = ? WHERE (([Id] = ?) AND ([Description] = ?) AND ([Sta"& _ 
                "tus] = ?) AND ([CountryId] = ?))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Id", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Id", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Description", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Description", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Status", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Status", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CountryId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CountryId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Id", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Id", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Description", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Description", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Status", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Status", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CountryId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CountryId", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.HR.My.MySettings.Default.csFCCL
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Id, Description, Status, CountryId FROM dbo.HR_PRMCity"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsFCCL.HR_PRMCityDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsFCCL.HR_PRMCityDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsFCCL.HR_PRMCityDataTable = New dsFCCL.HR_PRMCityDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsFCCL.HR_PRMCityDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsFCCL) As Integer
            Return Me.Adapter.Update(dataSet, "HR_PRMCity")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_Id As Integer, ByVal Original_Description As String, ByVal Original_Status As Boolean, ByVal Original_CountryId As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Id,Integer)
            If (Original_Description Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Description")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_Description,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Status,Boolean)
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_CountryId,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Id As Integer, ByVal Description As String, ByVal Status As Boolean, ByVal CountryId As Integer) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(Id,Integer)
            If (Description Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Description")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Description,String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(Status,Boolean)
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(CountryId,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Id As Integer, ByVal Description As String, ByVal Status As Boolean, ByVal CountryId As Integer, ByVal Original_Id As Integer, ByVal Original_Description As String, ByVal Original_Status As Boolean, ByVal Original_CountryId As Integer) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Id,Integer)
            If (Description Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Description")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Description,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Status,Boolean)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(CountryId,Integer)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_Id,Integer)
            If (Original_Description Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Description")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_Description,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_Status,Boolean)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_CountryId,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Description As String, ByVal Status As Boolean, ByVal CountryId As Integer, ByVal Original_Id As Integer, ByVal Original_Description As String, ByVal Original_Status As Boolean, ByVal Original_CountryId As Integer) As Integer
            Return Me.Update(Original_Id, Description, Status, CountryId, Original_Id, Original_Description, Original_Status, Original_CountryId)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class HR_PRMDEGREETableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "HR_PRMDEGREE"
            tableMapping.ColumnMappings.Add("Id", "Id")
            tableMapping.ColumnMappings.Add("STATUS", "STATUS")
            tableMapping.ColumnMappings.Add("Description", "Description")
            tableMapping.ColumnMappings.Add("PARA_Type", "PARA_Type")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [ERP_FCCL_21_Aug_15].[dbo].[HR_PRMDEGREE] ([Id], [STATUS], [Descripti"& _ 
                "on], [PARA_Type]) VALUES (?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Id", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Id", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("STATUS", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "STATUS", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Description", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Description", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PARA_Type", Global.System.Data.Odbc.OdbcType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PARA_Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.HR.My.MySettings.Default.csFCCL
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Id, STATUS, Description, PARA_Type FROM dbo.HR_PRMDEGREE"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsFCCL.HR_PRMDEGREEDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsFCCL.HR_PRMDEGREEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsFCCL.HR_PRMDEGREEDataTable = New dsFCCL.HR_PRMDEGREEDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsFCCL.HR_PRMDEGREEDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsFCCL) As Integer
            Return Me.Adapter.Update(dataSet, "HR_PRMDEGREE")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Id As Integer, ByVal STATUS As String, ByVal Description As String, ByVal PARA_Type As Byte) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(Id,Integer)
            If (STATUS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(STATUS,String)
            End If
            If (Description Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Description")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Description,String)
            End If
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(PARA_Type,Byte)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class HR_PRMDepartmentsTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "HR_PRMDepartments"
            tableMapping.ColumnMappings.Add("Id", "Id")
            tableMapping.ColumnMappings.Add("Description", "Description")
            tableMapping.ColumnMappings.Add("BusinessUnitId", "BusinessUnitId")
            tableMapping.ColumnMappings.Add("BranchId", "BranchId")
            tableMapping.ColumnMappings.Add("Status", "Status")
            tableMapping.ColumnMappings.Add("ParentNameId", "ParentNameId")
            tableMapping.ColumnMappings.Add("Abbreviation", "Abbreviation")
            tableMapping.ColumnMappings.Add("nLocationId", "nLocationId")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [ERP_FCCL_21_Aug_15].[dbo].[HR_PRMDepartments] WHERE (([Id] = ?) AND "& _ 
                "((? = 1 AND [Description] IS NULL) OR ([Description] = ?)) AND ((? = 1 AND [Busi"& _ 
                "nessUnitId] IS NULL) OR ([BusinessUnitId] = ?)) AND ((? = 1 AND [BranchId] IS NU"& _ 
                "LL) OR ([BranchId] = ?)) AND ((? = 1 AND [Status] IS NULL) OR ([Status] = ?)) AN"& _ 
                "D ((? = 1 AND [ParentNameId] IS NULL) OR ([ParentNameId] = ?)) AND ((? = 1 AND ["& _ 
                "Abbreviation] IS NULL) OR ([Abbreviation] = ?)) AND ((? = 1 AND [nLocationId] IS"& _ 
                " NULL) OR ([nLocationId] = ?)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Id", Global.System.Data.Odbc.OdbcType.BigInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Id", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Description", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Description", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Description", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Description", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_BusinessUnitId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BusinessUnitId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_BusinessUnitId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BusinessUnitId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_BranchId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BranchId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_BranchId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BranchId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Status", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Status", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Status", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Status", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ParentNameId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ParentNameId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ParentNameId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ParentNameId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Abbreviation", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Abbreviation", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Abbreviation", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Abbreviation", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_nLocationId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nLocationId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_nLocationId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nLocationId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [ERP_FCCL_21_Aug_15].[dbo].[HR_PRMDepartments] ([Id], [Description], "& _ 
                "[BusinessUnitId], [BranchId], [Status], [ParentNameId], [Abbreviation], [nLocati"& _ 
                "onId]) VALUES (?, ?, ?, ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Id", Global.System.Data.Odbc.OdbcType.BigInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Id", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Description", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Description", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BusinessUnitId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BusinessUnitId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BranchId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BranchId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Status", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Status", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ParentNameId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ParentNameId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Abbreviation", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Abbreviation", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("nLocationId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nLocationId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [ERP_FCCL_21_Aug_15].[dbo].[HR_PRMDepartments] SET [Id] = ?, [Description]"& _ 
                " = ?, [BusinessUnitId] = ?, [BranchId] = ?, [Status] = ?, [ParentNameId] = ?, [A"& _ 
                "bbreviation] = ?, [nLocationId] = ? WHERE (([Id] = ?) AND ((? = 1 AND [Descripti"& _ 
                "on] IS NULL) OR ([Description] = ?)) AND ((? = 1 AND [BusinessUnitId] IS NULL) O"& _ 
                "R ([BusinessUnitId] = ?)) AND ((? = 1 AND [BranchId] IS NULL) OR ([BranchId] = ?"& _ 
                ")) AND ((? = 1 AND [Status] IS NULL) OR ([Status] = ?)) AND ((? = 1 AND [ParentN"& _ 
                "ameId] IS NULL) OR ([ParentNameId] = ?)) AND ((? = 1 AND [Abbreviation] IS NULL)"& _ 
                " OR ([Abbreviation] = ?)) AND ((? = 1 AND [nLocationId] IS NULL) OR ([nLocationI"& _ 
                "d] = ?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Id", Global.System.Data.Odbc.OdbcType.BigInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Id", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Description", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Description", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BusinessUnitId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BusinessUnitId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BranchId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BranchId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Status", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Status", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ParentNameId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ParentNameId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Abbreviation", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Abbreviation", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("nLocationId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nLocationId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Id", Global.System.Data.Odbc.OdbcType.BigInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Id", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Description", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Description", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Description", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Description", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_BusinessUnitId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BusinessUnitId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_BusinessUnitId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BusinessUnitId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_BranchId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BranchId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_BranchId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BranchId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Status", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Status", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Status", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Status", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ParentNameId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ParentNameId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ParentNameId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ParentNameId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Abbreviation", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Abbreviation", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Abbreviation", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Abbreviation", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_nLocationId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nLocationId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_nLocationId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nLocationId", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.HR.My.MySettings.Default.csFCCL
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Id, Description, BusinessUnitId, BranchId, Status, ParentNameId, Abbreviat"& _ 
                "ion, nLocationId FROM dbo.HR_PRMDepartments"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsFCCL.HR_PRMDepartmentsDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsFCCL.HR_PRMDepartmentsDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsFCCL.HR_PRMDepartmentsDataTable = New dsFCCL.HR_PRMDepartmentsDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsFCCL.HR_PRMDepartmentsDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsFCCL) As Integer
            Return Me.Adapter.Update(dataSet, "HR_PRMDepartments")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_Id As Long, ByVal Original_Description As String, ByVal Original_BusinessUnitId As Global.System.Nullable(Of Integer), ByVal Original_BranchId As Global.System.Nullable(Of Integer), ByVal Original_Status As Global.System.Nullable(Of Boolean), ByVal Original_ParentNameId As Global.System.Nullable(Of Integer), ByVal Original_Abbreviation As String, ByVal Original_nLocationId As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Id,Long)
            If (Original_Description Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Description,String)
            End If
            If (Original_BusinessUnitId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_BusinessUnitId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_BranchId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_BranchId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_Status.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_Status.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_ParentNameId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_ParentNameId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Original_Abbreviation Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_Abbreviation,String)
            End If
            If (Original_nLocationId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_nLocationId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Id As Long, ByVal Description As String, ByVal BusinessUnitId As Global.System.Nullable(Of Integer), ByVal BranchId As Global.System.Nullable(Of Integer), ByVal Status As Global.System.Nullable(Of Boolean), ByVal ParentNameId As Global.System.Nullable(Of Integer), ByVal Abbreviation As String, ByVal nLocationId As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(Id,Long)
            If (Description Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Description,String)
            End If
            If (BusinessUnitId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(BusinessUnitId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (BranchId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(BranchId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Status.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Status.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (ParentNameId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(ParentNameId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Abbreviation Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(Abbreviation,String)
            End If
            If (nLocationId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(nLocationId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Id As Long,  _
                    ByVal Description As String,  _
                    ByVal BusinessUnitId As Global.System.Nullable(Of Integer),  _
                    ByVal BranchId As Global.System.Nullable(Of Integer),  _
                    ByVal Status As Global.System.Nullable(Of Boolean),  _
                    ByVal ParentNameId As Global.System.Nullable(Of Integer),  _
                    ByVal Abbreviation As String,  _
                    ByVal nLocationId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Id As Long,  _
                    ByVal Original_Description As String,  _
                    ByVal Original_BusinessUnitId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_BranchId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Status As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_ParentNameId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Abbreviation As String,  _
                    ByVal Original_nLocationId As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Id,Long)
            If (Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Description,String)
            End If
            If (BusinessUnitId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(BusinessUnitId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (BranchId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(BranchId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Status.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Status.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (ParentNameId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(ParentNameId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Abbreviation Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Abbreviation,String)
            End If
            If (nLocationId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(nLocationId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_Id,Long)
            If (Original_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_Description,String)
            End If
            If (Original_BusinessUnitId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_BusinessUnitId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Original_BranchId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_BranchId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Original_Status.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_Status.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Original_ParentNameId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_ParentNameId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (Original_Abbreviation Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Original_Abbreviation,String)
            End If
            If (Original_nLocationId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Original_nLocationId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Description As String, ByVal BusinessUnitId As Global.System.Nullable(Of Integer), ByVal BranchId As Global.System.Nullable(Of Integer), ByVal Status As Global.System.Nullable(Of Boolean), ByVal ParentNameId As Global.System.Nullable(Of Integer), ByVal Abbreviation As String, ByVal nLocationId As Global.System.Nullable(Of Integer), ByVal Original_Id As Long, ByVal Original_Description As String, ByVal Original_BusinessUnitId As Global.System.Nullable(Of Integer), ByVal Original_BranchId As Global.System.Nullable(Of Integer), ByVal Original_Status As Global.System.Nullable(Of Boolean), ByVal Original_ParentNameId As Global.System.Nullable(Of Integer), ByVal Original_Abbreviation As String, ByVal Original_nLocationId As Global.System.Nullable(Of Integer)) As Integer
            Return Me.Update(Original_Id, Description, BusinessUnitId, BranchId, Status, ParentNameId, Abbreviation, nLocationId, Original_Id, Original_Description, Original_BusinessUnitId, Original_BranchId, Original_Status, Original_ParentNameId, Original_Abbreviation, Original_nLocationId)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class HR_PRMGradesTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "HR_PRMGrades"
            tableMapping.ColumnMappings.Add("Id", "Id")
            tableMapping.ColumnMappings.Add("GradeNo", "GradeNo")
            tableMapping.ColumnMappings.Add("EmployeeTypeId", "EmployeeTypeId")
            tableMapping.ColumnMappings.Add("Abreviation", "Abreviation")
            tableMapping.ColumnMappings.Add("Description", "Description")
            tableMapping.ColumnMappings.Add("BasicPay", "BasicPay")
            tableMapping.ColumnMappings.Add("SubScales", "SubScales")
            tableMapping.ColumnMappings.Add("LevelId", "LevelId")
            tableMapping.ColumnMappings.Add("BusinessUnitId", "BusinessUnitId")
            tableMapping.ColumnMappings.Add("Last_Modification_Date", "Last_Modification_Date")
            tableMapping.ColumnMappings.Add("EffectiveFrom", "EffectiveFrom")
            tableMapping.ColumnMappings.Add("ScaleValue", "ScaleValue")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [ERP_FCCL_21_Aug_15].[dbo].[HR_PRMGrades] WHERE (([Id] = ?) AND ([Gra"& _ 
                "deNo] = ?) AND ([EmployeeTypeId] = ?) AND ([Abreviation] = ?) AND ([Description]"& _ 
                " = ?) AND ((? = 1 AND [BasicPay] IS NULL) OR ([BasicPay] = ?)) AND ([SubScales] "& _ 
                "= ?) AND ((? = 1 AND [LevelId] IS NULL) OR ([LevelId] = ?)) AND ((? = 1 AND [Bus"& _ 
                "inessUnitId] IS NULL) OR ([BusinessUnitId] = ?)) AND ([Last_Modification_Date] ="& _ 
                " ?) AND ((? = 1 AND [EffectiveFrom] IS NULL) OR ([EffectiveFrom] = ?)) AND ((? ="& _ 
                " 1 AND [ScaleValue] IS NULL) OR ([ScaleValue] = ?)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Id", Global.System.Data.Odbc.OdbcType.BigInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Id", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_GradeNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GradeNo", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_EmployeeTypeId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EmployeeTypeId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Abreviation", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Abreviation", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Description", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Description", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_BasicPay", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BasicPay", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_BasicPay", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(15,Byte), CType(2,Byte), "BasicPay", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_SubScales", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SubScales", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_LevelId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LevelId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LevelId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LevelId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_BusinessUnitId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BusinessUnitId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_BusinessUnitId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BusinessUnitId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Last_Modification_Date", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Last_Modification_Date", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_EffectiveFrom", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EffectiveFrom", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_EffectiveFrom", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EffectiveFrom", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ScaleValue", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ScaleValue", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ScaleValue", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(15,Byte), CType(2,Byte), "ScaleValue", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [ERP_FCCL_21_Aug_15].[dbo].[HR_PRMGrades] ([Id], [GradeNo], [Employee"& _ 
                "TypeId], [Abreviation], [Description], [BasicPay], [SubScales], [LevelId], [Busi"& _ 
                "nessUnitId], [Last_Modification_Date], [EffectiveFrom], [ScaleValue]) VALUES (?,"& _ 
                " ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Id", Global.System.Data.Odbc.OdbcType.BigInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Id", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("GradeNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GradeNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("EmployeeTypeId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EmployeeTypeId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Abreviation", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Abreviation", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Description", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Description", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BasicPay", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(15,Byte), CType(2,Byte), "BasicPay", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("SubScales", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SubScales", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LevelId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LevelId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BusinessUnitId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BusinessUnitId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Last_Modification_Date", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Last_Modification_Date", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("EffectiveFrom", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EffectiveFrom", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ScaleValue", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(15,Byte), CType(2,Byte), "ScaleValue", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [ERP_FCCL_21_Aug_15].[dbo].[HR_PRMGrades] SET [Id] = ?, [GradeNo] = ?, [Em"& _ 
                "ployeeTypeId] = ?, [Abreviation] = ?, [Description] = ?, [BasicPay] = ?, [SubSca"& _ 
                "les] = ?, [LevelId] = ?, [BusinessUnitId] = ?, [Last_Modification_Date] = ?, [Ef"& _ 
                "fectiveFrom] = ?, [ScaleValue] = ? WHERE (([Id] = ?) AND ([GradeNo] = ?) AND ([E"& _ 
                "mployeeTypeId] = ?) AND ([Abreviation] = ?) AND ([Description] = ?) AND ((? = 1 "& _ 
                "AND [BasicPay] IS NULL) OR ([BasicPay] = ?)) AND ([SubScales] = ?) AND ((? = 1 A"& _ 
                "ND [LevelId] IS NULL) OR ([LevelId] = ?)) AND ((? = 1 AND [BusinessUnitId] IS NU"& _ 
                "LL) OR ([BusinessUnitId] = ?)) AND ([Last_Modification_Date] = ?) AND ((? = 1 AN"& _ 
                "D [EffectiveFrom] IS NULL) OR ([EffectiveFrom] = ?)) AND ((? = 1 AND [ScaleValue"& _ 
                "] IS NULL) OR ([ScaleValue] = ?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Id", Global.System.Data.Odbc.OdbcType.BigInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Id", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("GradeNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GradeNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("EmployeeTypeId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EmployeeTypeId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Abreviation", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Abreviation", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Description", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Description", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BasicPay", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(15,Byte), CType(2,Byte), "BasicPay", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("SubScales", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SubScales", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LevelId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LevelId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BusinessUnitId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BusinessUnitId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Last_Modification_Date", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Last_Modification_Date", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("EffectiveFrom", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EffectiveFrom", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ScaleValue", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(15,Byte), CType(2,Byte), "ScaleValue", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Id", Global.System.Data.Odbc.OdbcType.BigInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Id", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_GradeNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GradeNo", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_EmployeeTypeId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EmployeeTypeId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Abreviation", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Abreviation", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Description", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Description", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_BasicPay", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BasicPay", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_BasicPay", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(15,Byte), CType(2,Byte), "BasicPay", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_SubScales", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SubScales", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_LevelId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LevelId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LevelId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LevelId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_BusinessUnitId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BusinessUnitId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_BusinessUnitId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BusinessUnitId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Last_Modification_Date", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Last_Modification_Date", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_EffectiveFrom", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EffectiveFrom", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_EffectiveFrom", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EffectiveFrom", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ScaleValue", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ScaleValue", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ScaleValue", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(15,Byte), CType(2,Byte), "ScaleValue", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.HR.My.MySettings.Default.csFCCL
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Id, GradeNo, EmployeeTypeId, Abreviation, Description, BasicPay, SubScales"& _ 
                ", LevelId, BusinessUnitId, Last_Modification_Date, EffectiveFrom, ScaleValue FRO"& _ 
                "M dbo.HR_PRMGrades"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsFCCL.HR_PRMGradesDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsFCCL.HR_PRMGradesDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsFCCL.HR_PRMGradesDataTable = New dsFCCL.HR_PRMGradesDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsFCCL.HR_PRMGradesDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsFCCL) As Integer
            Return Me.Adapter.Update(dataSet, "HR_PRMGrades")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_Id As Long, ByVal Original_GradeNo As String, ByVal Original_EmployeeTypeId As Integer, ByVal Original_Abreviation As String, ByVal Original_Description As String, ByVal Original_BasicPay As Global.System.Nullable(Of Decimal), ByVal Original_SubScales As Short, ByVal Original_LevelId As Global.System.Nullable(Of Integer), ByVal Original_BusinessUnitId As Global.System.Nullable(Of Integer), ByVal Original_Last_Modification_Date As Date, ByVal Original_EffectiveFrom As Global.System.Nullable(Of Date), ByVal Original_ScaleValue As Global.System.Nullable(Of Decimal)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Id,Long)
            If (Original_GradeNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_GradeNo")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_GradeNo,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_EmployeeTypeId,Integer)
            If (Original_Abreviation Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Abreviation")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_Abreviation,String)
            End If
            If (Original_Description Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Description")
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_Description,String)
            End If
            If (Original_BasicPay.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_BasicPay.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_SubScales,Short)
            If (Original_LevelId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_LevelId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Original_BusinessUnitId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_BusinessUnitId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_Last_Modification_Date,Date)
            If (Original_EffectiveFrom.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_EffectiveFrom.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Original_ScaleValue.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_ScaleValue.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Id As Long, ByVal GradeNo As String, ByVal EmployeeTypeId As Integer, ByVal Abreviation As String, ByVal Description As String, ByVal BasicPay As Global.System.Nullable(Of Decimal), ByVal SubScales As Short, ByVal LevelId As Global.System.Nullable(Of Integer), ByVal BusinessUnitId As Global.System.Nullable(Of Integer), ByVal Last_Modification_Date As Date, ByVal EffectiveFrom As Global.System.Nullable(Of Date), ByVal ScaleValue As Global.System.Nullable(Of Decimal)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(Id,Long)
            If (GradeNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("GradeNo")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(GradeNo,String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(EmployeeTypeId,Integer)
            If (Abreviation Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Abreviation")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Abreviation,String)
            End If
            If (Description Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Description")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Description,String)
            End If
            If (BasicPay.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(BasicPay.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(6).Value = CType(SubScales,Short)
            If (LevelId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(LevelId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (BusinessUnitId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(BusinessUnitId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(9).Value = CType(Last_Modification_Date,Date)
            If (EffectiveFrom.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(EffectiveFrom.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (ScaleValue.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(ScaleValue.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Id As Long,  _
                    ByVal GradeNo As String,  _
                    ByVal EmployeeTypeId As Integer,  _
                    ByVal Abreviation As String,  _
                    ByVal Description As String,  _
                    ByVal BasicPay As Global.System.Nullable(Of Decimal),  _
                    ByVal SubScales As Short,  _
                    ByVal LevelId As Global.System.Nullable(Of Integer),  _
                    ByVal BusinessUnitId As Global.System.Nullable(Of Integer),  _
                    ByVal Last_Modification_Date As Date,  _
                    ByVal EffectiveFrom As Global.System.Nullable(Of Date),  _
                    ByVal ScaleValue As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_Id As Long,  _
                    ByVal Original_GradeNo As String,  _
                    ByVal Original_EmployeeTypeId As Integer,  _
                    ByVal Original_Abreviation As String,  _
                    ByVal Original_Description As String,  _
                    ByVal Original_BasicPay As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_SubScales As Short,  _
                    ByVal Original_LevelId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_BusinessUnitId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Last_Modification_Date As Date,  _
                    ByVal Original_EffectiveFrom As Global.System.Nullable(Of Date),  _
                    ByVal Original_ScaleValue As Global.System.Nullable(Of Decimal)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Id,Long)
            If (GradeNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("GradeNo")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(GradeNo,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(EmployeeTypeId,Integer)
            If (Abreviation Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Abreviation")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Abreviation,String)
            End If
            If (Description Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Description")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Description,String)
            End If
            If (BasicPay.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(BasicPay.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(SubScales,Short)
            If (LevelId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(LevelId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (BusinessUnitId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(BusinessUnitId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Last_Modification_Date,Date)
            If (EffectiveFrom.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(EffectiveFrom.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (ScaleValue.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(ScaleValue.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_Id,Long)
            If (Original_GradeNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_GradeNo")
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_GradeNo,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_EmployeeTypeId,Integer)
            If (Original_Abreviation Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Abreviation")
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_Abreviation,String)
            End If
            If (Original_Description Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Description")
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_Description,String)
            End If
            If (Original_BasicPay.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_BasicPay.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_SubScales,Short)
            If (Original_LevelId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_LevelId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (Original_BusinessUnitId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Original_BusinessUnitId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Original_Last_Modification_Date,Date)
            If (Original_EffectiveFrom.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Original_EffectiveFrom.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Original_ScaleValue.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Original_ScaleValue.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal GradeNo As String,  _
                    ByVal EmployeeTypeId As Integer,  _
                    ByVal Abreviation As String,  _
                    ByVal Description As String,  _
                    ByVal BasicPay As Global.System.Nullable(Of Decimal),  _
                    ByVal SubScales As Short,  _
                    ByVal LevelId As Global.System.Nullable(Of Integer),  _
                    ByVal BusinessUnitId As Global.System.Nullable(Of Integer),  _
                    ByVal Last_Modification_Date As Date,  _
                    ByVal EffectiveFrom As Global.System.Nullable(Of Date),  _
                    ByVal ScaleValue As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_Id As Long,  _
                    ByVal Original_GradeNo As String,  _
                    ByVal Original_EmployeeTypeId As Integer,  _
                    ByVal Original_Abreviation As String,  _
                    ByVal Original_Description As String,  _
                    ByVal Original_BasicPay As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_SubScales As Short,  _
                    ByVal Original_LevelId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_BusinessUnitId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Last_Modification_Date As Date,  _
                    ByVal Original_EffectiveFrom As Global.System.Nullable(Of Date),  _
                    ByVal Original_ScaleValue As Global.System.Nullable(Of Decimal)) As Integer
            Return Me.Update(Original_Id, GradeNo, EmployeeTypeId, Abreviation, Description, BasicPay, SubScales, LevelId, BusinessUnitId, Last_Modification_Date, EffectiveFrom, ScaleValue, Original_Id, Original_GradeNo, Original_EmployeeTypeId, Original_Abreviation, Original_Description, Original_BasicPay, Original_SubScales, Original_LevelId, Original_BusinessUnitId, Original_Last_Modification_Date, Original_EffectiveFrom, Original_ScaleValue)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class HR_PRMGradeScaleTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "HR_PRMGradeScale"
            tableMapping.ColumnMappings.Add("GradeId", "GradeId")
            tableMapping.ColumnMappings.Add("ScaleIndex", "ScaleIndex")
            tableMapping.ColumnMappings.Add("ScaleAmount", "ScaleAmount")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [ERP_FCCL_21_Aug_15].[dbo].[HR_PRMGradeScale] WHERE (([GradeId] = ?) "& _ 
                "AND ([ScaleIndex] = ?) AND ((? = 1 AND [ScaleAmount] IS NULL) OR ([ScaleAmount] "& _ 
                "= ?)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_GradeId", Global.System.Data.Odbc.OdbcType.BigInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GradeId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ScaleIndex", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ScaleIndex", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ScaleAmount", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ScaleAmount", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ScaleAmount", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(9,Byte), CType(2,Byte), "ScaleAmount", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [ERP_FCCL_21_Aug_15].[dbo].[HR_PRMGradeScale] ([GradeId], [ScaleIndex"& _ 
                "], [ScaleAmount]) VALUES (?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("GradeId", Global.System.Data.Odbc.OdbcType.BigInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GradeId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ScaleIndex", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ScaleIndex", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ScaleAmount", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(9,Byte), CType(2,Byte), "ScaleAmount", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [ERP_FCCL_21_Aug_15].[dbo].[HR_PRMGradeScale] SET [GradeId] = ?, [ScaleInd"& _ 
                "ex] = ?, [ScaleAmount] = ? WHERE (([GradeId] = ?) AND ([ScaleIndex] = ?) AND ((?"& _ 
                " = 1 AND [ScaleAmount] IS NULL) OR ([ScaleAmount] = ?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("GradeId", Global.System.Data.Odbc.OdbcType.BigInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GradeId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ScaleIndex", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ScaleIndex", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ScaleAmount", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(9,Byte), CType(2,Byte), "ScaleAmount", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_GradeId", Global.System.Data.Odbc.OdbcType.BigInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GradeId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ScaleIndex", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ScaleIndex", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ScaleAmount", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ScaleAmount", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ScaleAmount", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(9,Byte), CType(2,Byte), "ScaleAmount", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.HR.My.MySettings.Default.csFCCL
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT GradeId, ScaleIndex, ScaleAmount FROM dbo.HR_PRMGradeScale"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsFCCL.HR_PRMGradeScaleDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsFCCL.HR_PRMGradeScaleDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsFCCL.HR_PRMGradeScaleDataTable = New dsFCCL.HR_PRMGradeScaleDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsFCCL.HR_PRMGradeScaleDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsFCCL) As Integer
            Return Me.Adapter.Update(dataSet, "HR_PRMGradeScale")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_GradeId As Long, ByVal Original_ScaleIndex As Short, ByVal Original_ScaleAmount As Global.System.Nullable(Of Decimal)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_GradeId,Long)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_ScaleIndex,Short)
            If (Original_ScaleAmount.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_ScaleAmount.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal GradeId As Long, ByVal ScaleIndex As Short, ByVal ScaleAmount As Global.System.Nullable(Of Decimal)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(GradeId,Long)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(ScaleIndex,Short)
            If (ScaleAmount.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(ScaleAmount.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal GradeId As Long, ByVal ScaleIndex As Short, ByVal ScaleAmount As Global.System.Nullable(Of Decimal), ByVal Original_GradeId As Long, ByVal Original_ScaleIndex As Short, ByVal Original_ScaleAmount As Global.System.Nullable(Of Decimal)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(GradeId,Long)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(ScaleIndex,Short)
            If (ScaleAmount.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(ScaleAmount.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Original_GradeId,Long)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_ScaleIndex,Short)
            If (Original_ScaleAmount.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_ScaleAmount.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal ScaleAmount As Global.System.Nullable(Of Decimal), ByVal Original_GradeId As Long, ByVal Original_ScaleIndex As Short, ByVal Original_ScaleAmount As Global.System.Nullable(Of Decimal)) As Integer
            Return Me.Update(Original_GradeId, Original_ScaleIndex, ScaleAmount, Original_GradeId, Original_ScaleIndex, Original_ScaleAmount)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class HR_PRMParametersTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "HR_PRMParameters"
            tableMapping.ColumnMappings.Add("Id", "Id")
            tableMapping.ColumnMappings.Add("Description", "Description")
            tableMapping.ColumnMappings.Add("Type", "Type")
            tableMapping.ColumnMappings.Add("BusinessUnitId", "BusinessUnitId")
            tableMapping.ColumnMappings.Add("Status", "Status")
            tableMapping.ColumnMappings.Add("rowguid", "rowguid")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [ERP_FCCL_21_Aug_15].[dbo].[HR_PRMParameters] WHERE (([Id] = ?) AND ("& _ 
                "[Description] = ?) AND ([Type] = ?) AND ((? = 1 AND [BusinessUnitId] IS NULL) OR"& _ 
                " ([BusinessUnitId] = ?)) AND ([Status] = ?) AND ([rowguid] = ?))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Id", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Id", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Description", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Description", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Type", Global.System.Data.Odbc.OdbcType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_BusinessUnitId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BusinessUnitId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_BusinessUnitId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BusinessUnitId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Status", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Status", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_rowguid", Global.System.Data.Odbc.OdbcType.UniqueIdentifier, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rowguid", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [ERP_FCCL_21_Aug_15].[dbo].[HR_PRMParameters] ([Id], [Description], ["& _ 
                "Type], [BusinessUnitId], [Status], [rowguid]) VALUES (?, ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Id", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Id", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Description", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Description", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Type", Global.System.Data.Odbc.OdbcType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BusinessUnitId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BusinessUnitId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Status", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Status", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("rowguid", Global.System.Data.Odbc.OdbcType.UniqueIdentifier, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rowguid", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [ERP_FCCL_21_Aug_15].[dbo].[HR_PRMParameters] SET [Id] = ?, [Description] "& _ 
                "= ?, [Type] = ?, [BusinessUnitId] = ?, [Status] = ?, [rowguid] = ? WHERE (([Id] "& _ 
                "= ?) AND ([Description] = ?) AND ([Type] = ?) AND ((? = 1 AND [BusinessUnitId] I"& _ 
                "S NULL) OR ([BusinessUnitId] = ?)) AND ([Status] = ?) AND ([rowguid] = ?))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Id", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Id", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Description", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Description", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Type", Global.System.Data.Odbc.OdbcType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BusinessUnitId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BusinessUnitId", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Status", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Status", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("rowguid", Global.System.Data.Odbc.OdbcType.UniqueIdentifier, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rowguid", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Id", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Id", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Description", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Description", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Type", Global.System.Data.Odbc.OdbcType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_BusinessUnitId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BusinessUnitId", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_BusinessUnitId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BusinessUnitId", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Status", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Status", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_rowguid", Global.System.Data.Odbc.OdbcType.UniqueIdentifier, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rowguid", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.HR.My.MySettings.Default.csFCCL
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Id, Description, Type, BusinessUnitId, Status, rowguid FROM dbo.HR_PRMPara"& _ 
                "meters"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsFCCL.HR_PRMParametersDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsFCCL.HR_PRMParametersDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsFCCL.HR_PRMParametersDataTable = New dsFCCL.HR_PRMParametersDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsFCCL.HR_PRMParametersDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsFCCL) As Integer
            Return Me.Adapter.Update(dataSet, "HR_PRMParameters")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_Id As Integer, ByVal Original_Description As String, ByVal Original_Type As Byte, ByVal Original_BusinessUnitId As Global.System.Nullable(Of Integer), ByVal Original_Status As Boolean, ByVal Original_rowguid As System.Guid) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Id,Integer)
            If (Original_Description Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Description")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_Description,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Type,Byte)
            If (Original_BusinessUnitId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_BusinessUnitId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_Status,Boolean)
            Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_rowguid,System.Guid)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Id As Integer, ByVal Description As String, ByVal Type As Byte, ByVal BusinessUnitId As Global.System.Nullable(Of Integer), ByVal Status As Boolean, ByVal rowguid As System.Guid) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(Id,Integer)
            If (Description Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Description")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Description,String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(Type,Byte)
            If (BusinessUnitId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(BusinessUnitId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(Status,Boolean)
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(rowguid,System.Guid)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Id As Integer, ByVal Description As String, ByVal Type As Byte, ByVal BusinessUnitId As Global.System.Nullable(Of Integer), ByVal Status As Boolean, ByVal rowguid As System.Guid, ByVal Original_Id As Integer, ByVal Original_Description As String, ByVal Original_Type As Byte, ByVal Original_BusinessUnitId As Global.System.Nullable(Of Integer), ByVal Original_Status As Boolean, ByVal Original_rowguid As System.Guid) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Id,Integer)
            If (Description Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Description")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Description,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Type,Byte)
            If (BusinessUnitId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(BusinessUnitId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Status,Boolean)
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(rowguid,System.Guid)
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_Id,Integer)
            If (Original_Description Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Description")
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_Description,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_Type,Byte)
            If (Original_BusinessUnitId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_BusinessUnitId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_Status,Boolean)
            Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_rowguid,System.Guid)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Description As String, ByVal Type As Byte, ByVal BusinessUnitId As Global.System.Nullable(Of Integer), ByVal Status As Boolean, ByVal rowguid As System.Guid, ByVal Original_Id As Integer, ByVal Original_Description As String, ByVal Original_Type As Byte, ByVal Original_BusinessUnitId As Global.System.Nullable(Of Integer), ByVal Original_Status As Boolean, ByVal Original_rowguid As System.Guid) As Integer
            Return Me.Update(Original_Id, Description, Type, BusinessUnitId, Status, rowguid, Original_Id, Original_Description, Original_Type, Original_BusinessUnitId, Original_Status, Original_rowguid)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class HR_PRMParameterTypeTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "HR_PRMParameterType"
            tableMapping.ColumnMappings.Add("Id", "Id")
            tableMapping.ColumnMappings.Add("Description", "Description")
            tableMapping.ColumnMappings.Add("Status", "Status")
            tableMapping.ColumnMappings.Add("IsBusinessUnitLevel", "IsBusinessUnitLevel")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [ERP_FCCL_21_Aug_15].[dbo].[HR_PRMParameterType] ([Id], [Description]"& _ 
                ", [Status], [IsBusinessUnitLevel]) VALUES (?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Id", Global.System.Data.Odbc.OdbcType.BigInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Id", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Description", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Description", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Status", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Status", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsBusinessUnitLevel", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IsBusinessUnitLevel", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.HR.My.MySettings.Default.csFCCL
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Id, Description, Status, IsBusinessUnitLevel FROM dbo.HR_PRMParameterType"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsFCCL.HR_PRMParameterTypeDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsFCCL.HR_PRMParameterTypeDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsFCCL.HR_PRMParameterTypeDataTable = New dsFCCL.HR_PRMParameterTypeDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsFCCL.HR_PRMParameterTypeDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsFCCL) As Integer
            Return Me.Adapter.Update(dataSet, "HR_PRMParameterType")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Id As Global.System.Nullable(Of Long), ByVal Description As String, ByVal Status As Boolean, ByVal IsBusinessUnitLevel As Global.System.Nullable(Of Boolean)) As Integer
            If (Id.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Id.Value,Long)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Description Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Description,String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(Status,Boolean)
            If (IsBusinessUnitLevel.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(IsBusinessUnitLevel.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class HR_PRMRelationsTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "HR_PRMRelations"
            tableMapping.ColumnMappings.Add("Id", "Id")
            tableMapping.ColumnMappings.Add("Description", "Description")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [ERP_FCCL_21_Aug_15].[dbo].[HR_PRMRelations] WHERE (([Id] = ?) AND (["& _ 
                "Description] = ?))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Id", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Id", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Description", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Description", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [ERP_FCCL_21_Aug_15].[dbo].[HR_PRMRelations] ([Id], [Description]) VA"& _ 
                "LUES (?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Id", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Id", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Description", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Description", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [ERP_FCCL_21_Aug_15].[dbo].[HR_PRMRelations] SET [Id] = ?, [Description] ="& _ 
                " ? WHERE (([Id] = ?) AND ([Description] = ?))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Id", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Id", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Description", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Description", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Id", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Id", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Description", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Description", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.HR.My.MySettings.Default.csFCCL
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Id, Description FROM dbo.HR_PRMRelations"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsFCCL.HR_PRMRelationsDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsFCCL.HR_PRMRelationsDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsFCCL.HR_PRMRelationsDataTable = New dsFCCL.HR_PRMRelationsDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsFCCL.HR_PRMRelationsDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsFCCL) As Integer
            Return Me.Adapter.Update(dataSet, "HR_PRMRelations")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_Id As Integer, ByVal Original_Description As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Id,Integer)
            If (Original_Description Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Description")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_Description,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Id As Integer, ByVal Description As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(Id,Integer)
            If (Description Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Description")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Description,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Id As Integer, ByVal Description As String, ByVal Original_Id As Integer, ByVal Original_Description As String) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Id,Integer)
            If (Description Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Description")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Description,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Original_Id,Integer)
            If (Original_Description Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Description")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Original_Description,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Description As String, ByVal Original_Id As Integer, ByVal Original_Description As String) As Integer
            Return Me.Update(Original_Id, Description, Original_Id, Original_Description)
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _eM_EmployeeTableAdapter As EM_EmployeeTableAdapter
        
        Private _eM_Employee_AuditTableAdapter As EM_Employee_AuditTableAdapter
        
        Private _hR_PRMBankTableAdapter As HR_PRMBankTableAdapter
        
        Private _hR_PRMBranchTableAdapter As HR_PRMBranchTableAdapter
        
        Private _hR_PRMBusinessUnitTableAdapter As HR_PRMBusinessUnitTableAdapter
        
        Private _hR_PRMCityTableAdapter As HR_PRMCityTableAdapter
        
        Private _hR_PRMDEGREETableAdapter As HR_PRMDEGREETableAdapter
        
        Private _hR_PRMDepartmentsTableAdapter As HR_PRMDepartmentsTableAdapter
        
        Private _hR_PRMGradesTableAdapter As HR_PRMGradesTableAdapter
        
        Private _hR_PRMGradeScaleTableAdapter As HR_PRMGradeScaleTableAdapter
        
        Private _hR_PRMParametersTableAdapter As HR_PRMParametersTableAdapter
        
        Private _hR_PRMParameterTypeTableAdapter As HR_PRMParameterTypeTableAdapter
        
        Private _hR_PRMRelationsTableAdapter As HR_PRMRelationsTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property EM_EmployeeTableAdapter() As EM_EmployeeTableAdapter
            Get
                Return Me._eM_EmployeeTableAdapter
            End Get
            Set
                Me._eM_EmployeeTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property EM_Employee_AuditTableAdapter() As EM_Employee_AuditTableAdapter
            Get
                Return Me._eM_Employee_AuditTableAdapter
            End Get
            Set
                Me._eM_Employee_AuditTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property HR_PRMBankTableAdapter() As HR_PRMBankTableAdapter
            Get
                Return Me._hR_PRMBankTableAdapter
            End Get
            Set
                Me._hR_PRMBankTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property HR_PRMBranchTableAdapter() As HR_PRMBranchTableAdapter
            Get
                Return Me._hR_PRMBranchTableAdapter
            End Get
            Set
                Me._hR_PRMBranchTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property HR_PRMBusinessUnitTableAdapter() As HR_PRMBusinessUnitTableAdapter
            Get
                Return Me._hR_PRMBusinessUnitTableAdapter
            End Get
            Set
                Me._hR_PRMBusinessUnitTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property HR_PRMCityTableAdapter() As HR_PRMCityTableAdapter
            Get
                Return Me._hR_PRMCityTableAdapter
            End Get
            Set
                Me._hR_PRMCityTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property HR_PRMDEGREETableAdapter() As HR_PRMDEGREETableAdapter
            Get
                Return Me._hR_PRMDEGREETableAdapter
            End Get
            Set
                Me._hR_PRMDEGREETableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property HR_PRMDepartmentsTableAdapter() As HR_PRMDepartmentsTableAdapter
            Get
                Return Me._hR_PRMDepartmentsTableAdapter
            End Get
            Set
                Me._hR_PRMDepartmentsTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property HR_PRMGradesTableAdapter() As HR_PRMGradesTableAdapter
            Get
                Return Me._hR_PRMGradesTableAdapter
            End Get
            Set
                Me._hR_PRMGradesTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property HR_PRMGradeScaleTableAdapter() As HR_PRMGradeScaleTableAdapter
            Get
                Return Me._hR_PRMGradeScaleTableAdapter
            End Get
            Set
                Me._hR_PRMGradeScaleTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property HR_PRMParametersTableAdapter() As HR_PRMParametersTableAdapter
            Get
                Return Me._hR_PRMParametersTableAdapter
            End Get
            Set
                Me._hR_PRMParametersTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property HR_PRMParameterTypeTableAdapter() As HR_PRMParameterTypeTableAdapter
            Get
                Return Me._hR_PRMParameterTypeTableAdapter
            End Get
            Set
                Me._hR_PRMParameterTypeTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property HR_PRMRelationsTableAdapter() As HR_PRMRelationsTableAdapter
            Get
                Return Me._hR_PRMRelationsTableAdapter
            End Get
            Set
                Me._hR_PRMRelationsTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._eM_EmployeeTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._eM_EmployeeTableAdapter.Connection) Is Nothing)) Then
                    Return Me._eM_EmployeeTableAdapter.Connection
                End If
                If ((Not (Me._eM_Employee_AuditTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._eM_Employee_AuditTableAdapter.Connection) Is Nothing)) Then
                    Return Me._eM_Employee_AuditTableAdapter.Connection
                End If
                If ((Not (Me._hR_PRMBankTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._hR_PRMBankTableAdapter.Connection) Is Nothing)) Then
                    Return Me._hR_PRMBankTableAdapter.Connection
                End If
                If ((Not (Me._hR_PRMBranchTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._hR_PRMBranchTableAdapter.Connection) Is Nothing)) Then
                    Return Me._hR_PRMBranchTableAdapter.Connection
                End If
                If ((Not (Me._hR_PRMBusinessUnitTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._hR_PRMBusinessUnitTableAdapter.Connection) Is Nothing)) Then
                    Return Me._hR_PRMBusinessUnitTableAdapter.Connection
                End If
                If ((Not (Me._hR_PRMCityTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._hR_PRMCityTableAdapter.Connection) Is Nothing)) Then
                    Return Me._hR_PRMCityTableAdapter.Connection
                End If
                If ((Not (Me._hR_PRMDEGREETableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._hR_PRMDEGREETableAdapter.Connection) Is Nothing)) Then
                    Return Me._hR_PRMDEGREETableAdapter.Connection
                End If
                If ((Not (Me._hR_PRMDepartmentsTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._hR_PRMDepartmentsTableAdapter.Connection) Is Nothing)) Then
                    Return Me._hR_PRMDepartmentsTableAdapter.Connection
                End If
                If ((Not (Me._hR_PRMGradesTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._hR_PRMGradesTableAdapter.Connection) Is Nothing)) Then
                    Return Me._hR_PRMGradesTableAdapter.Connection
                End If
                If ((Not (Me._hR_PRMGradeScaleTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._hR_PRMGradeScaleTableAdapter.Connection) Is Nothing)) Then
                    Return Me._hR_PRMGradeScaleTableAdapter.Connection
                End If
                If ((Not (Me._hR_PRMParametersTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._hR_PRMParametersTableAdapter.Connection) Is Nothing)) Then
                    Return Me._hR_PRMParametersTableAdapter.Connection
                End If
                If ((Not (Me._hR_PRMParameterTypeTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._hR_PRMParameterTypeTableAdapter.Connection) Is Nothing)) Then
                    Return Me._hR_PRMParameterTypeTableAdapter.Connection
                End If
                If ((Not (Me._hR_PRMRelationsTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._hR_PRMRelationsTableAdapter.Connection) Is Nothing)) Then
                    Return Me._hR_PRMRelationsTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._eM_EmployeeTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._eM_Employee_AuditTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._hR_PRMBankTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._hR_PRMBranchTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._hR_PRMBusinessUnitTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._hR_PRMCityTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._hR_PRMDEGREETableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._hR_PRMDepartmentsTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._hR_PRMGradesTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._hR_PRMGradeScaleTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._hR_PRMParametersTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._hR_PRMParameterTypeTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._hR_PRMRelationsTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As dsFCCL, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._eM_EmployeeTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.EM_Employee.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._eM_EmployeeTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._eM_Employee_AuditTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.EM_Employee_Audit.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._eM_Employee_AuditTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._hR_PRMBankTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.HR_PRMBank.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._hR_PRMBankTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._hR_PRMBranchTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.HR_PRMBranch.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._hR_PRMBranchTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._hR_PRMBusinessUnitTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.HR_PRMBusinessUnit.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._hR_PRMBusinessUnitTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._hR_PRMCityTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.HR_PRMCity.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._hR_PRMCityTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._hR_PRMDEGREETableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.HR_PRMDEGREE.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._hR_PRMDEGREETableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._hR_PRMDepartmentsTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.HR_PRMDepartments.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._hR_PRMDepartmentsTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._hR_PRMGradesTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.HR_PRMGrades.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._hR_PRMGradesTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._hR_PRMGradeScaleTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.HR_PRMGradeScale.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._hR_PRMGradeScaleTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._hR_PRMParametersTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.HR_PRMParameters.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._hR_PRMParametersTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._hR_PRMParameterTypeTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.HR_PRMParameterType.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._hR_PRMParameterTypeTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._hR_PRMRelationsTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.HR_PRMRelations.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._hR_PRMRelationsTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As dsFCCL, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._eM_EmployeeTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.EM_Employee.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._eM_EmployeeTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._eM_Employee_AuditTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.EM_Employee_Audit.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._eM_Employee_AuditTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._hR_PRMBankTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.HR_PRMBank.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._hR_PRMBankTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._hR_PRMBranchTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.HR_PRMBranch.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._hR_PRMBranchTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._hR_PRMBusinessUnitTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.HR_PRMBusinessUnit.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._hR_PRMBusinessUnitTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._hR_PRMCityTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.HR_PRMCity.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._hR_PRMCityTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._hR_PRMDEGREETableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.HR_PRMDEGREE.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._hR_PRMDEGREETableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._hR_PRMDepartmentsTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.HR_PRMDepartments.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._hR_PRMDepartmentsTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._hR_PRMGradesTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.HR_PRMGrades.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._hR_PRMGradesTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._hR_PRMGradeScaleTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.HR_PRMGradeScale.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._hR_PRMGradeScaleTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._hR_PRMParametersTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.HR_PRMParameters.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._hR_PRMParametersTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._hR_PRMParameterTypeTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.HR_PRMParameterType.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._hR_PRMParameterTypeTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._hR_PRMRelationsTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.HR_PRMRelations.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._hR_PRMRelationsTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As dsFCCL, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._hR_PRMRelationsTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.HR_PRMRelations.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._hR_PRMRelationsTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._hR_PRMParameterTypeTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.HR_PRMParameterType.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._hR_PRMParameterTypeTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._hR_PRMParametersTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.HR_PRMParameters.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._hR_PRMParametersTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._hR_PRMGradeScaleTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.HR_PRMGradeScale.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._hR_PRMGradeScaleTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._hR_PRMGradesTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.HR_PRMGrades.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._hR_PRMGradesTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._hR_PRMDepartmentsTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.HR_PRMDepartments.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._hR_PRMDepartmentsTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._hR_PRMDEGREETableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.HR_PRMDEGREE.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._hR_PRMDEGREETableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._hR_PRMCityTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.HR_PRMCity.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._hR_PRMCityTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._hR_PRMBusinessUnitTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.HR_PRMBusinessUnit.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._hR_PRMBusinessUnitTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._hR_PRMBranchTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.HR_PRMBranch.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._hR_PRMBranchTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._hR_PRMBankTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.HR_PRMBank.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._hR_PRMBankTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._eM_Employee_AuditTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.EM_Employee_Audit.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._eM_Employee_AuditTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._eM_EmployeeTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.EM_Employee.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._eM_EmployeeTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As dsFCCL) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._eM_EmployeeTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._eM_EmployeeTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._eM_Employee_AuditTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._eM_Employee_AuditTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._hR_PRMBankTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._hR_PRMBankTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._hR_PRMBranchTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._hR_PRMBranchTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._hR_PRMBusinessUnitTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._hR_PRMBusinessUnitTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._hR_PRMCityTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._hR_PRMCityTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._hR_PRMDEGREETableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._hR_PRMDEGREETableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._hR_PRMDepartmentsTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._hR_PRMDepartmentsTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._hR_PRMGradesTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._hR_PRMGradesTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._hR_PRMGradeScaleTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._hR_PRMGradeScaleTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._hR_PRMParametersTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._hR_PRMParametersTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._hR_PRMParameterTypeTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._hR_PRMParameterTypeTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._hR_PRMRelationsTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._hR_PRMRelationsTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._eM_EmployeeTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._eM_EmployeeTableAdapter, Me._eM_EmployeeTableAdapter.Connection)
                    Me._eM_EmployeeTableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._eM_EmployeeTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._eM_EmployeeTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._eM_EmployeeTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._eM_EmployeeTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._eM_Employee_AuditTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._eM_Employee_AuditTableAdapter, Me._eM_Employee_AuditTableAdapter.Connection)
                    Me._eM_Employee_AuditTableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._eM_Employee_AuditTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._eM_Employee_AuditTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._eM_Employee_AuditTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._eM_Employee_AuditTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._hR_PRMBankTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._hR_PRMBankTableAdapter, Me._hR_PRMBankTableAdapter.Connection)
                    Me._hR_PRMBankTableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._hR_PRMBankTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._hR_PRMBankTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._hR_PRMBankTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._hR_PRMBankTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._hR_PRMBranchTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._hR_PRMBranchTableAdapter, Me._hR_PRMBranchTableAdapter.Connection)
                    Me._hR_PRMBranchTableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._hR_PRMBranchTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._hR_PRMBranchTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._hR_PRMBranchTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._hR_PRMBranchTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._hR_PRMBusinessUnitTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._hR_PRMBusinessUnitTableAdapter, Me._hR_PRMBusinessUnitTableAdapter.Connection)
                    Me._hR_PRMBusinessUnitTableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._hR_PRMBusinessUnitTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._hR_PRMBusinessUnitTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._hR_PRMBusinessUnitTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._hR_PRMBusinessUnitTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._hR_PRMCityTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._hR_PRMCityTableAdapter, Me._hR_PRMCityTableAdapter.Connection)
                    Me._hR_PRMCityTableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._hR_PRMCityTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._hR_PRMCityTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._hR_PRMCityTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._hR_PRMCityTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._hR_PRMDEGREETableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._hR_PRMDEGREETableAdapter, Me._hR_PRMDEGREETableAdapter.Connection)
                    Me._hR_PRMDEGREETableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._hR_PRMDEGREETableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._hR_PRMDEGREETableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._hR_PRMDEGREETableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._hR_PRMDEGREETableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._hR_PRMDepartmentsTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._hR_PRMDepartmentsTableAdapter, Me._hR_PRMDepartmentsTableAdapter.Connection)
                    Me._hR_PRMDepartmentsTableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._hR_PRMDepartmentsTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._hR_PRMDepartmentsTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._hR_PRMDepartmentsTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._hR_PRMDepartmentsTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._hR_PRMGradesTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._hR_PRMGradesTableAdapter, Me._hR_PRMGradesTableAdapter.Connection)
                    Me._hR_PRMGradesTableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._hR_PRMGradesTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._hR_PRMGradesTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._hR_PRMGradesTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._hR_PRMGradesTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._hR_PRMGradeScaleTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._hR_PRMGradeScaleTableAdapter, Me._hR_PRMGradeScaleTableAdapter.Connection)
                    Me._hR_PRMGradeScaleTableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._hR_PRMGradeScaleTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._hR_PRMGradeScaleTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._hR_PRMGradeScaleTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._hR_PRMGradeScaleTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._hR_PRMParametersTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._hR_PRMParametersTableAdapter, Me._hR_PRMParametersTableAdapter.Connection)
                    Me._hR_PRMParametersTableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._hR_PRMParametersTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._hR_PRMParametersTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._hR_PRMParametersTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._hR_PRMParametersTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._hR_PRMParameterTypeTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._hR_PRMParameterTypeTableAdapter, Me._hR_PRMParameterTypeTableAdapter.Connection)
                    Me._hR_PRMParameterTypeTableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._hR_PRMParameterTypeTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._hR_PRMParameterTypeTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._hR_PRMParameterTypeTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._hR_PRMParameterTypeTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._hR_PRMRelationsTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._hR_PRMRelationsTableAdapter, Me._hR_PRMRelationsTableAdapter.Connection)
                    Me._hR_PRMRelationsTableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._hR_PRMRelationsTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._hR_PRMRelationsTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._hR_PRMRelationsTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._hR_PRMRelationsTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._eM_EmployeeTableAdapter) Is Nothing) Then
                    Me._eM_EmployeeTableAdapter.Connection = CType(revertConnections(Me._eM_EmployeeTableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._eM_EmployeeTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._eM_Employee_AuditTableAdapter) Is Nothing) Then
                    Me._eM_Employee_AuditTableAdapter.Connection = CType(revertConnections(Me._eM_Employee_AuditTableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._eM_Employee_AuditTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._hR_PRMBankTableAdapter) Is Nothing) Then
                    Me._hR_PRMBankTableAdapter.Connection = CType(revertConnections(Me._hR_PRMBankTableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._hR_PRMBankTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._hR_PRMBranchTableAdapter) Is Nothing) Then
                    Me._hR_PRMBranchTableAdapter.Connection = CType(revertConnections(Me._hR_PRMBranchTableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._hR_PRMBranchTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._hR_PRMBusinessUnitTableAdapter) Is Nothing) Then
                    Me._hR_PRMBusinessUnitTableAdapter.Connection = CType(revertConnections(Me._hR_PRMBusinessUnitTableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._hR_PRMBusinessUnitTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._hR_PRMCityTableAdapter) Is Nothing) Then
                    Me._hR_PRMCityTableAdapter.Connection = CType(revertConnections(Me._hR_PRMCityTableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._hR_PRMCityTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._hR_PRMDEGREETableAdapter) Is Nothing) Then
                    Me._hR_PRMDEGREETableAdapter.Connection = CType(revertConnections(Me._hR_PRMDEGREETableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._hR_PRMDEGREETableAdapter.Transaction = Nothing
                End If
                If (Not (Me._hR_PRMDepartmentsTableAdapter) Is Nothing) Then
                    Me._hR_PRMDepartmentsTableAdapter.Connection = CType(revertConnections(Me._hR_PRMDepartmentsTableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._hR_PRMDepartmentsTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._hR_PRMGradesTableAdapter) Is Nothing) Then
                    Me._hR_PRMGradesTableAdapter.Connection = CType(revertConnections(Me._hR_PRMGradesTableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._hR_PRMGradesTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._hR_PRMGradeScaleTableAdapter) Is Nothing) Then
                    Me._hR_PRMGradeScaleTableAdapter.Connection = CType(revertConnections(Me._hR_PRMGradeScaleTableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._hR_PRMGradeScaleTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._hR_PRMParametersTableAdapter) Is Nothing) Then
                    Me._hR_PRMParametersTableAdapter.Connection = CType(revertConnections(Me._hR_PRMParametersTableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._hR_PRMParametersTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._hR_PRMParameterTypeTableAdapter) Is Nothing) Then
                    Me._hR_PRMParameterTypeTableAdapter.Connection = CType(revertConnections(Me._hR_PRMParameterTypeTableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._hR_PRMParameterTypeTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._hR_PRMRelationsTableAdapter) Is Nothing) Then
                    Me._hR_PRMRelationsTableAdapter.Connection = CType(revertConnections(Me._hR_PRMRelationsTableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._hR_PRMRelationsTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
